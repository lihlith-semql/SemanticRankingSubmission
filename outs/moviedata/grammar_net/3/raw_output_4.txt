{"index": 0, "beams": [{"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,el), movie.runtime),movie.runtime))", "score": -0.179692299960152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))", "score": -0.2063148188572086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,el), movie.runtime),movie.runtime))", "score": -0.2691056448202289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,el), movie.runtime),movie.runtime))", "score": -0.27035603105832706, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),company.name,=,el), movie.runtime),movie.runtime))", "score": -0.3718576747160114, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,el), movie.runtime),movie.runtime))", "score": -0.43437978803922306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.title,=,el), movie.runtime),movie.runtime))", "score": -0.5172274996693886, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_place,=,el), movie.runtime),movie.runtime))", "score": -0.5178197342138446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,=,el), movie.runtime),movie.runtime))", "score": -0.5438500185664452, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.category,=,el), movie.runtime),movie.runtime))", "score": -0.6066408445294655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(person),country.name,=,el), movie.runtime),movie.runtime))", "score": -0.6078912307675637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),genre.name,=,el), movie.runtime),movie.runtime))", "score": -0.6300216037016071, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,el), movie.runtime),movie.runtime))", "score": -0.6310311871748127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,el),getData(movie),country.iso_3166_1,production_country.iso_3166_1),getData(movie),crew.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.6314042342987205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies that are originally in Greek?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,el), movie.runtime),movie.runtime))", "score": -0.6480337697248615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,el), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.2420859081240252, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.2749493611959484, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.2808339123839443, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,2000-05-26), oscar.category),oscar.sub_category))", "score": -0.29471777277417244, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.sub_category))", "score": -0.29619681710113976, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.3102760157305975, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.3136128500024436, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.3214469376443152, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.sub_category))", "score": -0.3315234716357888, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,2000-05-26), oscar.category),oscar.sub_category))", "score": -0.3334657770340915, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.3393574507391881, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.3523608542623627, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2000-05-26),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.35711090036887727, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.sub_category))", "score": -0.36019490203295873, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.sub_category))", "score": -0.3606048778484582, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.popularity))", "score": -0.13143335636135128, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.popularity))", "score": -0.1557596824117991, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.18481536041630742, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.26476708480699607, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.29204038043320274, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo), movie.vote_count),movie.popularity))", "score": -0.30103564953185685, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo), movie.vote_count),movie.popularity))", "score": -0.34920574280348, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.popularity))", "score": -0.3565062644933394, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,=,alamo), movie.vote_count),movie.popularity))", "score": -0.3581104014281382, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.popularity))", "score": -0.36060659487319074, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count,=,alamo), movie.vote_count),movie.popularity))", "score": -0.38647456704170974, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.revenue))", "score": -0.39112465778994127, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.4090582327468487, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.41296784799667874, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),getData(movie),has_keyword.movie_id,movie.id),merge(getData(movie),getData(movie),movie.id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.popularity))", "score": -0.4244174685263617, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,>,41.8459),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.1321542917073032, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,41.8459),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.1594261841055858, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.16168888920777522, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,>,41.8459),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.201981837863927, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,41.8459),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.23163337867653888, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,>=,41.8459),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.25671524435126264, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.26575419428827485, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.popularity,>,41.8459), person.death_place),person.death_place))", "score": -0.2901578970859929, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_day))", "score": -0.30315437444382204, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.popularity,>,41.8459),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3044392817359662, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,>=,41.8459),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.3265427905078865, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,41.8459),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3336186735161855, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),movie.popularity,>,41.8459),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.36499212513406465, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.382821790350976, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places do oscar nominees have who worked in movies with a popularity greater than 41.8459?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.popularity,>,41.8459),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.3874325717367633, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,41.8459),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.release_date))", "score": -0.24747314284134705, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.runtime))", "score": -0.2504818824564608, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),oscar.number))", "score": -0.34262220291477075, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_day))", "score": -0.3433565786488011, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>=,2008-06-15),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.release_date))", "score": -0.34480035855441116, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.3473114902136957, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>=,2008-06-15),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.runtime))", "score": -0.3500684704509995, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.release_date))", "score": -0.3784345172740708, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.birth_place))", "score": -0.38056289358724343, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.runtime))", "score": -0.38144325688918457, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),movie.runtime))", "score": -0.38734968915502344, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),movie.release_date))", "score": -0.39172780329894685, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), oscar.number),movie.release_date))", "score": -0.39374472935341276, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), oscar.number),movie.runtime))", "score": -0.39675346896852653, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}, {"orig_question": "Which movie, that has oscar nominees that died on or after 2008-06-15, has the lowest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<=,2008-06-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),movie.release_date))", "score": -0.407686635675637, "correct_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,>=,2008-06-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.runtime),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.031149655323722415, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.49886536662233993, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Post Production), movie.id),movie.runtime)", "score": -0.6155722912144914, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.id),movie.runtime)", "score": -0.6287206124050134, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.6696431913235789, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6722848231560814, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.6845853854882689, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.runtime)", "score": -0.7470882394147245, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.vote_average)", "score": -0.7678921237677898, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.7731720277151908, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.id), movie.id),movie.runtime)", "score": -0.8154988359975689, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.id)", "score": -0.8178418433027193, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.release_date)", "score": -0.8442396463466825, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),production_country.movie_id,=,Post Production), movie.id),movie.runtime)", "score": -0.8549598348693284, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.id),movie.runtime)", "score": -0.8658793683188727, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.revenue),movie.popularity))", "score": -0.23801750122591075, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,art direction),movie.revenue),movie.popularity))", "score": -0.2902348638677744, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,art direction),movie.revenue),movie.popularity))", "score": -0.3159716127537046, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,art direction),movie.revenue),movie.popularity))", "score": -0.31839355351604387, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,art direction),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.revenue),movie.popularity))", "score": -0.3408223156750599, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,art direction),movie.revenue),movie.popularity))", "score": -0.3441303024019741, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,>=,art direction),movie.revenue),movie.popularity))", "score": -0.40593642351345827, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,art direction),movie.revenue),movie.popularity))", "score": -0.40847637439115814, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,art direction),movie.revenue),movie.popularity))", "score": -0.43409511399237927, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,art direction),movie.revenue),movie.popularity))", "score": -0.43421312410773993, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(min(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.revenue),movie.popularity))", "score": -0.4426316686894961, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.oscar_id),oscar.category,=,art direction),movie.revenue),movie.popularity))", "score": -0.461531994003631, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,art direction),movie.revenue),movie.popularity))", "score": -0.46268010883525923, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,art direction),movie.revenue),movie.popularity))", "score": -0.500230659076422, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity for the movie that have won the oscar for the category art direction and has the maximum revenue?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,art direction),movie.revenue),movie.popularity))", "score": -0.5044896201284188, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.category,=,art direction),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.revenue),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.id),movie.runtime)", "score": -0.08227687743017392, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.2391958572902271, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,5.1), movie.id),movie.runtime)", "score": -0.47021056773204184, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,5.1),movie.runtime)", "score": -0.4943487975326727, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,5.1), movie.id),movie.runtime)", "score": -0.5291694723495352, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.runtime),movie.runtime))", "score": -0.5764934084036213, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<,5.1), movie.id),movie.runtime)", "score": -0.627129547592095, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.runtime),movie.runtime))", "score": -0.6925872290339612, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,5.1),movie.runtime)", "score": -0.6962488460573445, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.id),movie.vote_average)", "score": -0.7834290075896506, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<,5.1),movie.runtime)", "score": -0.7887597735246018, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime))", "score": -0.8008314816870552, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,5.1), movie.id),movie.runtime)", "score": -0.8206896975625374, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.id),movie.id)", "score": -0.8532844805009765, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,=,5.1), movie.id),movie.runtime)", "score": -0.8892123251234215, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.06414758755761257, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.15148354682083567, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,is), country.name),country.name))", "score": -0.15584244289096782, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,is),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2731496497818138, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.original_language,=,is), country.name),country.name))", "score": -0.3053275417741604, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.328807508030077, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.36755980999038784, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.37032602526959035, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),movie.status))", "score": -0.3709623251022153, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),production_country.iso_3166_1))", "score": -0.37575347021975913, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,is), country.name),country.name))", "score": -0.3820184800433646, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is),movie.original_language,=,is), country.name),country.name))", "score": -0.3921447658460964, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.name), country.name),country.name))", "score": -0.4163335724708761, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),person.birth_place))", "score": -0.4245306419711913, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced with original language is?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), movie.status),country.name))", "score": -0.4289042901169267, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,77),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.17992561707811977, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,=,77),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2279416964651362, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.runtime,<=,77), movie.id),oscar.number)", "score": -0.2362606100326831, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<=,77),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2438218672325186, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<=,77), movie.id),oscar.number)", "score": -0.29131399610872716, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.id),oscar.number)", "score": -0.2982900816559281, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),movie.runtime,=,77),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2995299244774311, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,77),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.30471119764347365, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.30618195798164527, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),movie.runtime,<=,77),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3154100952448135, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,77),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.31769071069373883, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,77),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3219182108971014, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar),movie.id,oscar_winner.movie_id),movie.runtime,=,77),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3457332025373925, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,>=,77),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.34684124867224936, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,<=,77), movie.id),oscar.number)", "score": -0.34768635943328013, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.vote_count))", "score": -0.08758382329688175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.vote_count))", "score": -0.36001796927303076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.vote_count))", "score": -0.3808393668732606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,197), movie.vote_count),movie.vote_count))", "score": -0.5042764508907567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,197), movie.vote_count),movie.vote_count))", "score": -0.5127677630443941, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,197), movie.id),movie.vote_count)", "score": -0.6626203163497315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.year,>=,197), movie.vote_count),movie.vote_count))", "score": -0.6723370861072908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.runtime),movie.vote_count))", "score": -0.6889141361971269, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.sub_category,>=,197), movie.vote_count),movie.vote_count))", "score": -0.6901061247845064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,197), movie.vote_count),movie.vote_count))", "score": -0.7083884786625276, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_average),movie.vote_count))", "score": -0.7105708878298174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.vote_count)", "score": -0.7765139442867761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,197), movie.vote_count),movie.vote_count))", "score": -0.7837591170682572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,197), movie.vote_count),movie.vote_count))", "score": -0.7846377635723911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.runtime))", "score": -0.7864458516050945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,40),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.year))", "score": -0.20715160273620048, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,40),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.2581520278235957, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,40),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.number),oscar.year))", "score": -0.28853697467970396, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.number),oscar.year))", "score": -0.2935402704243366, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.number,<,40), oscar.year),oscar.year))", "score": -0.303652604637717, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,40),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.30428438059740454, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,40),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.year),oscar.year))", "score": -0.33209716723037674, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.year),oscar.year))", "score": -0.33710046297500934, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.number,<,40), oscar.year),oscar.number))", "score": -0.3539061033995653, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,40),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.3552848056847997, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,40),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.year))", "score": -0.3577917564367649, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,<,40),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.year))", "score": -0.3665047081237074, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,40),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.number),oscar.number))", "score": -0.38137820779649895, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.number),oscar.number))", "score": -0.38638150354113154, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,40),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), oscar.number),oscar.year))", "score": -0.40593660338111026, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))", "score": -0.06537546053004917, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,m),person.birth_day), person.birth_day))", "score": -0.30508530426595826, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.5107238300470937, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,m), person.birth_day),person.birth_day))", "score": -0.5140056756645208, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),movie.popularity))", "score": -0.5379597104474669, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,m),person.birth_day), person.birth_day))", "score": -0.5686874443781562, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_day),person.birth_day))", "score": -0.5856756714492803, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,m), person.birth_day),person.birth_day))", "score": -0.6025408420100575, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id),getData(person),person.birth_day,person.id), person.birth_day),person.birth_day))", "score": -0.6092513101111362, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id),getData(person),crew.movie_id,person.id), person.birth_day),person.birth_day))", "score": -0.6095527546749022, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,m), person.birth_day),person.birth_day))", "score": -0.6214704427256947, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,m),movie.popularity), person.birth_day))", "score": -0.6246141931769671, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))", "score": -0.6371823201625375, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,m),person.name), person.birth_day))", "score": -0.6678588530776324, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birthdays of all non male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.name))", "score": -0.6708612597867614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,m), oscar.year),oscar.year))", "score": -0.17558760917592767, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.17672819063590986, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.year),oscar.year))", "score": -0.2404804481799773, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),oscar.year))", "score": -0.27150357215255017, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.name),oscar.year))", "score": -0.29819406241754026, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.3170064438731024, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.gender,=,m), oscar.year),oscar.year))", "score": -0.31905028539857044, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), movie.vote_average),oscar.year))", "score": -0.34905789019781724, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.name),movie.vote_average))", "score": -0.35941012409193784, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),movie.vote_average))", "score": -0.36222252593872617, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.36426202142593767, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.36494627728366014, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.3658646240670127, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,m), oscar.year),oscar.year))", "score": -0.376468795249801, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.name))", "score": -0.3794744486265807, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.02618198702475638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,=,48000000),movie.original_language), movie.original_language))", "score": -0.393047299614409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,48000000),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.4723842262827796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.5079069029922348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.5124053752266349, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,48000000),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.5489318256312641, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.572318909693422, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,48000000), movie.original_language),movie.original_language))", "score": -0.5919159359800688, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,48000000),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6245575711854503, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.6301196473687014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.6982364959585539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,48000000),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.7011051705339348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),spoken_language.movie_id))", "score": -0.7361512440293154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.7363732142875961, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.7426666598803422, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))", "score": -0.047063248393897084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))", "score": -0.3949115763276614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,5.3), movie.original_language),movie.original_language))", "score": -0.41815557626432565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.3), movie.original_language),movie.original_language))", "score": -0.4197169273847976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,<=,5.3),movie.original_language), movie.original_language))", "score": -0.4220756404720305, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,5.3), language.name),movie.original_language))", "score": -0.4494812159807948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,5.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.4638473419532505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,5.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.47993279671653166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,5.3), movie.original_language),movie.original_language))", "score": -0.48909488987007743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.original_language),movie.original_language))", "score": -0.4964880674833694, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,5.3), language.name),movie.original_language))", "score": -0.5436645295232109, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),language.name))", "score": -0.5615036167891958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))", "score": -0.5819878709207842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,5.3), movie.original_language),movie.original_language))", "score": -0.5911045017576712, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}, {"orig_question": "What are original languages of movies that have a vote average of 5.3 or less?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,5.3), movie.original_language),language.name))", "score": -0.6042506953723326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.revenue))", "score": -0.19623789930483326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))", "score": -0.2639389261021279, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),person.death_day))", "score": -0.32288078212877735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),movie.revenue))", "score": -0.4055137931718491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.revenue))", "score": -0.4428038298501633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),person.birth_day))", "score": -0.44803049409529194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.death_day),movie.revenue))", "score": -0.4501913487329148, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),movie.release_date))", "score": -0.4732148199691437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.popularity))", "score": -0.49455376708647236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.release_date))", "score": -0.5105048566474579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.revenue))", "score": -0.5125059782876633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.death_day),movie.release_date))", "score": -0.5178923755302094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),person.death_day))", "score": -0.5321566759957932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.budget))", "score": -0.5476004108204506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.death_day))", "score": -0.5694467126741074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.budget))", "score": -0.16538989582833347, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(person),person.birth_place,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.budget))", "score": -0.21987532771090387, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.budget))", "score": -0.2258106495993685, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.budget))", "score": -0.2485202671367996, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Los Alamos, New Mexico), movie.revenue),movie.budget))", "score": -0.2647980111007552, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.2764975862667966, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.budget))", "score": -0.2796107895031882, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.budget))", "score": -0.30894102090783465, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Los Alamos, New Mexico), movie.revenue),movie.budget))", "score": -0.321102458813589, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.release_date),movie.budget))", "score": -0.3375985356544364, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico), movie.revenue),movie.budget))", "score": -0.35458166986308715, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.3725563870194978, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.39565421787658694, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,Los Alamos, New Mexico), movie.revenue),movie.budget))", "score": -0.39635509727764323, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.release_date),movie.budget))", "score": -0.39801928942547143, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.23096897294570964, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.24376163619848468, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2931597692717098, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.30595243252448484, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,1986),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.3077772516661939, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),oscar.year,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.31096097980774434, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3187527200311584, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.year,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.32375364306051935, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.33154538328393346, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),oscar.year,=,1986),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3542545785149685, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3561617875735776, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,1986),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.35644023970582855, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),oscar.year,=,1986),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.36101048070765235, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3689543941151514, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity for movies with oscar nominees from year 1986 onwards?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),oscar.year,=,1986),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3731518410680699, "correct_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1986), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.05827678225159616, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1995-07-07), movie.popularity),movie.popularity))", "score": -0.3005015556436774, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1995-07-07), movie.popularity),movie.popularity))", "score": -0.3814875487905738, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.4533358220678565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.release_date),movie.popularity))", "score": -0.4624739330929515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1995-07-07),movie.popularity), movie.popularity))", "score": -0.4957983245658397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1995-07-07),movie.release_date), movie.popularity))", "score": -0.605395888309431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.release_date))", "score": -0.617642369560599, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), person.birth_day),movie.popularity))", "score": -0.6200991016548869, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7042609755617377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1995-07-07), movie.release_date),movie.popularity))", "score": -0.7046987064850327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.revenue),movie.popularity))", "score": -0.7133008581322429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.revenue))", "score": -0.7791409161609408, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7851651906121333, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1995-07-07), movie.release_date),movie.popularity))", "score": -0.7856846693057378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.2576865906813479, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.birth_day),oscar.year)", "score": -0.25923937059344543, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.3057786330310957, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.birth_day),oscar.year)", "score": -0.3073314129431932, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.34671341100342484, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.birth_day),oscar.year)", "score": -0.34826619091552236, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.3591205469730832, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.birth_day),oscar.year)", "score": -0.3606733268851807, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1933-04-26),getData(oscar_winner),person.id,crew.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.birth_day),oscar.year)", "score": -0.36082932460400546, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.36231484848502254, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.birth_day),oscar.year)", "score": -0.36386762839712006, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1933-04-26),getData(person),oscar_winner.person_id,person.id), person.birth_day),oscar.year)", "score": -0.369786651753162, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1933-04-26),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.birth_day),oscar.year)", "score": -0.38720563852881074, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.3948054533531727, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.birth_day),oscar.year)", "score": -0.3963582332652702, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.budget),movie.budget))", "score": -0.19912862230557948, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.id),movie.budget)", "score": -0.26991051932878335, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,Foreign), movie.id),movie.budget)", "score": -0.3208416834121322, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,>=,Foreign), movie.id),movie.budget)", "score": -0.38358294042661983, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.budget),movie.budget))", "score": -0.40562731598038226, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,Foreign), movie.budget),movie.budget))", "score": -0.4857860264601186, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.id),movie.budget)", "score": -0.5388031390337404, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,Foreign), movie.id),movie.budget)", "score": -0.5556938417059131, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,Foreign), movie.budget),movie.budget))", "score": -0.5829188582720235, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,Foreign), movie.id),movie.budget)", "score": -0.6156479390759038, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>,Foreign), movie.id),movie.budget)", "score": -0.6237330658621515, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,Foreign), movie.budget),movie.budget))", "score": -0.6327683838317171, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.revenue),movie.budget))", "score": -0.6344862157711759, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.id),movie.revenue)", "score": -0.6578736028989882, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,Foreign), movie.id),movie.budget)", "score": -0.6665791031592526, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))", "score": -0.028942745266249403, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))", "score": -0.3770562932768371, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.4862691876346114, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))", "score": -0.5209995732584503, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5297585112080553, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(cast),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5367391298308832, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(crew),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5560421433697872, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),person.birth_place), person.birth_place))", "score": -0.5793538135912968, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(cast),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5802284534043272, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Oxnard, Kalifornien), person.birth_place),person.birth_place))", "score": -0.5809992099821102, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(crew),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5995314578060638, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.6065120764288918, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.name))", "score": -0.6422978507762309, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), country.name),person.birth_place))", "score": -0.6552572488726582, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "Find the birth place of the movie personalities who were not born in Oxnard, Kalifornien.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.name),person.birth_place))", "score": -0.68430289029493, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Oxnard, Kalifornien), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.13995835802326617, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.1630238687813759, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.23208253471415516, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.24155671653160793, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.2582811834671116, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.2646222272897177, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.29074660693166865, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.2976579757940695, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.3065529905796179, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3138121176897784, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.number))", "score": -0.3215668821444076, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.33153430160503533, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.number))", "score": -0.33435672590441085, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.34362657978425654, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,oscar.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.34892406458972725, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.0356101977901553, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,es), country.name),country.name))", "score": -0.2190110989613428, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.28074286148939853, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,es), country.name),country.name))", "score": -0.28096619924319755, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.33891851195496153, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.3573574983211609, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,es),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38344706844570975, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1), country.name),country.name))", "score": -0.39217430584174134, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.39714300633273314, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),company.name))", "score": -0.39755933333179955, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.status))", "score": -0.4054193971096955, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4215745296958484, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,es), country.name),country.name))", "score": -0.4224881542390629, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(company),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42370190119750023, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Which are the procuction countries of the movies that their original language is es?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,=,es), country.name),country.name))", "score": -0.4257491461241907, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))", "score": -0.08504853175327298, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))", "score": -0.2742236406120355, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,12000000), movie.vote_average),movie.vote_average))", "score": -0.40483457000300405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<,12000000),movie.vote_average), movie.vote_average))", "score": -0.42881702007071, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.budget,<,12000000),movie.vote_average), movie.vote_average))", "score": -0.5191473617596785, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,>,12000000), movie.vote_average),movie.vote_average))", "score": -0.5678365305575426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,12000000), movie.vote_average),movie.vote_average))", "score": -0.5956517174963665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,12000000), movie.vote_average),movie.vote_average))", "score": -0.6377671566915524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_count))", "score": -0.691915367369802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,12000000), movie.vote_average),movie.vote_average))", "score": -0.7170567229513836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,12000000), movie.vote_average),movie.vote_average))", "score": -0.7435082999181759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), oscar.year),movie.vote_average))", "score": -0.7744976464782667, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<=,12000000), movie.vote_average),movie.vote_average))", "score": -0.7804940119895036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,12000000), movie.vote_average),movie.vote_average))", "score": -0.7846091397696, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are all the vote averages of movies with a budget of lower than 12000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,>,12000000),movie.vote_average), movie.vote_average))", "score": -0.7944827967257879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,12000000), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,production_company.movie_id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.18525395638370726, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1987-08-25),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2698751695190107, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1987-08-25),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,company.id), company.name),company.name))", "score": -0.29619246272341093, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.31345580882424734, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_day,>=,1987-08-25),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.3245794921541384, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1987-08-25),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.person_id,company.id), company.name),company.name))", "score": -0.3399840518570762, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(crew),person.id,cast.person_id),merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),cast.movie_id,movie.id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.35176672050560726, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(crew),person.id,cast.person_id),merge(getData(movie),getData(production_company),movie.id,company.id),cast.movie_id,movie.id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.35636501046467584, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,production_company.movie_id),getData(company),production_company.company_id,company.id),person.birth_day,<=,1987-08-25), company.name),company.name))", "score": -0.3611421955094591, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,production_company.movie_id),getData(company),production_company.company_id,company.id),person.death_day,>=,1987-08-25), company.name),company.name))", "score": -0.3625775038376122, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(crew),person.id,cast.person_id),merge(getData(movie),getData(production_company),production_company.company_id,production_company.movie_id),cast.movie_id,movie.id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.36940348696145575, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(crew),person.id,cast.person_id),merge(getData(movie),getData(production_company),production_company.company_id,company.id),cast.movie_id,movie.id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.374001762722955, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1987-08-25),getData(has_keyword),person.id,cast.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38348359352143574, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(crew),person.id,cast.person_id),merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),cast.movie_id,production_company.movie_id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.39147299435565236, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(company),production_company.company_id,company.id),filter(merge(getData(production_company),merge(getData(production_company),getData(company),production_company.company_id,company.id),production_company.company_id,company.id),person.birth_day,>=,1987-08-25),movie.id,production_company.movie_id),person.death_day,>=,1987-08-25), company.name),None))", "score": -0.4147218022899697, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.1040521774738388, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.11231230388531793, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Romance), movie.title),movie.title))", "score": -0.22200187568425153, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.budget))", "score": -0.262587571385158, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.budget))", "score": -0.278858460598172, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Romance), movie.title),movie.title))", "score": -0.28515866206594315, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.29194697837721345, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.vote_count))", "score": -0.3236061107604539, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.32379266712617616, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.32594542356499784, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Romance), movie.title),movie.budget))", "score": -0.3321693266486207, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.vote_count))", "score": -0.35459299160510493, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.36306690263900726, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Romance), movie.title),movie.title))", "score": -0.3637150147174507, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Romance), movie.title),movie.budget))", "score": -0.38322878260446336, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.15126146395876014, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.15384750697413777, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.1694970459295136, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,Espa\u00f1ol),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.20412074457748017, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),country.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3022545803471986, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3122566685973969, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3188878110598399, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.3192747483283317, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3353076883624539, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),language.name,=,Espa\u00f1ol),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3404423346608607, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),movie.original_language,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.35227228038541214, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),country.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.3684605209116559, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.37052940834451287, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),language.name,=,Espa\u00f1ol),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.37924163733159777, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),movie.title), movie.title))", "score": -0.43562068832180634, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.11596585415978583, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.11957325113456878, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.runtime),movie.runtime)", "score": -0.19150504694638615, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2786033418906772, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2864427461774211, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.release_date),movie.runtime)", "score": -0.3147001142347668, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.runtime)", "score": -0.34106154940880734, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3422001716713839, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.34653946726310153, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Huckabee's),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.3538449090581032, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.3557881684929962, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.runtime),movie.runtime)", "score": -0.370510248553029, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.runtime),movie.runtime)", "score": -0.3796313359693821, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.title),movie.runtime)", "score": -0.3866742758518131, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.release_date),movie.runtime)", "score": -0.40482465498560727, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.09339458667299623, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,549),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2156682481200722, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.2568550410578498, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),movie.vote_count))", "score": -0.2756082187072004, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(keyword),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.2785314700642751, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.2862793225954394, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),has_keyword.keyword_id))", "score": -0.29999067326676443, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,549),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), movie.vote_count),keyword.name))", "score": -0.31933172827045336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.3223944570775121, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),movie.budget))", "score": -0.3305824853550956, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),company.name))", "score": -0.3363522133393051, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(movie),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.3467688581931816, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.movie_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.3712805399869625, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,movie.vote_count),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.37612308416260676, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),movie.title))", "score": -0.37880438314229237, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.08743810636967947, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)", "score": -0.16729238859741136, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.17084811094283156, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.budget)", "score": -0.2032817095486438, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.release_date),movie.budget)", "score": -0.3339474841866751, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_place,=,Alhambra, Kalifornien),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.34049338025309056, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.34369222916378, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3513584275173909, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.37274152514054976, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Alhambra, Kalifornien), movie.id),movie.budget)", "score": -0.37652290098475516, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.budget)", "score": -0.387609941017647, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.budget)", "score": -0.38791957980249797, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),company.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.41113100306967554, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)", "score": -0.41212872699734837, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),movie.revenue,movie.id), movie.id),movie.budget)", "score": -0.41370725797062685, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.025274404088122537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1984-05-01),movie.revenue), movie.revenue))", "score": -0.4378317004011478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5781574698594341, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,1984-05-01),getData(movie),movie.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.6057340575592159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.6165901871827373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,1984-05-01),getData(movie),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.6373592356468258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.vote_count))", "score": -0.6890248234813043, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.6978462787774333, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.7105257438925037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.7340518163946399, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.7468847568779893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), person.death_day),movie.revenue))", "score": -0.7476594534200558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.budget))", "score": -0.7556507165973017, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.vote_count),movie.revenue))", "score": -0.7588771071714291, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.popularity),movie.revenue))", "score": -0.7845996704381832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.vote_count))", "score": -0.0404631755372975, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,621), movie.vote_count),movie.vote_count))", "score": -0.3555960551893804, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.vote_count))", "score": -0.40584180402220227, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.vote_average))", "score": -0.5198780092468951, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,621), movie.vote_count),movie.vote_count))", "score": -0.5834879734611604, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.revenue))", "score": -0.5855993720761035, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,621), movie.vote_count),movie.vote_count))", "score": -0.6111744538939092, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,621), movie.vote_count),movie.vote_count))", "score": -0.6202382938063238, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.vote_count))", "score": -0.6287339096015785, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,621), movie.vote_count),movie.vote_count))", "score": -0.650458861986408, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),movie.vote_count))", "score": -0.6785786514228676, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,621),movie.vote_count), movie.vote_count))", "score": -0.6992231374460971, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.runtime))", "score": -0.7066062781086657, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,621), movie.vote_average),movie.vote_count))", "score": -0.7209746836742852, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.revenue),movie.vote_count))", "score": -0.7327481274551246, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.02879622677937732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.popularity),movie.original_language))", "score": -0.4902221803240536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), language.name),movie.original_language))", "score": -0.4921421651415585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.title),movie.original_language))", "score": -0.5222337488703488, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Def-Con 4),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.iso_639_1,movie.id), movie.title),movie.original_language))", "score": -0.5393841133910838, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Def-Con 4),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.5572767071380648, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.status),movie.original_language))", "score": -0.5590820555262326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.5857494320407568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Def-Con 4),getData(spoken_language),movie.id,cast.movie_id),getData(movie),spoken_language.iso_639_1,movie.id), movie.title),movie.original_language))", "score": -0.6405541370012044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Def-Con 4),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,movie.id), movie.title),movie.original_language))", "score": -0.6528623731843165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Def-Con 4),getData(spoken_language),movie.id,cast.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.6584467241029727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Def-Con 4),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.iso_639_1,language.iso_639_1), movie.title),movie.original_language))", "score": -0.6616682190595211, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6668212856784521, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), spoken_language.iso_639_1),movie.original_language))", "score": -0.6708275322489499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.title))", "score": -0.6961378036685346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.21851743005153823, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<=,127.085),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.2350192824679406, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.2361705773312282, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.24041226227763518, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.2762085431363476, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<=,127.085),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.3000629090681795, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.3097267495804162, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), oscar.year),person.name))", "score": -0.33125667796742175, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.popularity,<=,127.085), oscar.sub_category),person.name))", "score": -0.33641487775786616, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), oscar.sub_category),person.name))", "score": -0.336457593474274, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,127.085),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.name),person.name))", "score": -0.3486412616203138, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.popularity,<=,127.085), oscar.number),person.name))", "score": -0.3564446294664607, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), oscar.number),person.name))", "score": -0.3565383626950126, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.popularity,<=,127.085), oscar.year),person.name))", "score": -0.3586941158866684, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.3643509173431506, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.2544111574115538, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3118229983499564, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.32335756897155943, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.32607967033725993, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.34599844302217486, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.3615950737421032, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.380769409909962, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.38349152025198235, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.3843418253370382, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),person.death_day,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.39502609087358537, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.39929466815197273, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.4044239422404917, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),keyword.name,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4131770096144597, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.homepage,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.41690173696425803, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.4190069053231576, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))", "score": -0.0368051075420226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))", "score": -0.38467903783748625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.1), movie.budget),movie.budget))", "score": -0.48289391100843204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.budget),movie.budget))", "score": -0.4841841727538849, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.revenue))", "score": -0.4960261162414099, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.revenue),movie.budget))", "score": -0.5417560413989122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,6.1),getData(movie),movie.id,spoken_language.movie_id),getData(movie),movie.revenue,movie.id), movie.budget),movie.budget))", "score": -0.6676891388799342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))", "score": -0.6677267919621954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,6.1),getData(movie),movie.id,cast.movie_id),getData(movie),movie.revenue,movie.id), movie.budget),movie.budget))", "score": -0.6901218166288021, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.release_date),movie.budget))", "score": -0.7123563364657457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.1), movie.budget),movie.budget))", "score": -0.7308163017078186, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.vote_count))", "score": -0.7496956463946844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,6.1), movie.budget),movie.budget))", "score": -0.7645076868866454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.release_date))", "score": -0.7717966910495306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), person.death_place),movie.budget))", "score": -0.7882886603983934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.revenue),movie.revenue))", "score": -0.11263221117769717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.revenue),movie.revenue))", "score": -0.17133789870058536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.3258618673971796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.revenue),movie.revenue))", "score": -0.33615409943377017, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Released), movie.revenue),movie.revenue))", "score": -0.5379138038224482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.revenue),movie.revenue))", "score": -0.5463995895079279, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,Released), movie.revenue),movie.revenue))", "score": -0.5966194913453364, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.title,=,Released),movie.revenue), movie.revenue))", "score": -0.6209637971651318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,Released), movie.revenue),movie.revenue))", "score": -0.6402059242791438, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Released), movie.revenue),movie.revenue))", "score": -0.6463115260667109, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.revenue),movie.revenue))", "score": -0.6482494493793638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.revenue),movie.revenue))", "score": -0.6792494525980146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,Released), movie.revenue),movie.revenue))", "score": -0.698911611802032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.revenue),movie.revenue))", "score": -0.7050172135895991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have already been released? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.revenue),movie.vote_count))", "score": -0.712216901472857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))", "score": -0.07305992778128712, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2008-04-03), person.name),person.name))", "score": -0.35979269642120926, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.birth_day),person.name))", "score": -0.42140626359469024, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,<,2008-04-03),person.name), person.name))", "score": -0.47090025304351, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2008-04-03), person.name),person.name))", "score": -0.4886564483094844, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.gender),person.name))", "score": -0.49321263480669586, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), language.name),person.name))", "score": -0.5066224877882632, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.birth_day))", "score": -0.5196630434293183, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,2008-04-03), person.name),person.name))", "score": -0.5438808371472987, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,2008-04-03), person.name),person.name))", "score": -0.6011482201211038, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.gender))", "score": -0.6147598103780183, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_day),person.name))", "score": -0.645126456503931, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,2008-04-03), person.name),person.name))", "score": -0.6693063249040279, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_place),person.name))", "score": -0.6816692893553409, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,2008-04-03),person.name), person.name))", "score": -0.7005976518848911, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))", "score": -0.04867336690949742, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,1982-03-02), movie.title),movie.title))", "score": -0.3352234789781505, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1982-03-02), movie.title),movie.title))", "score": -0.34278403014468495, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.budget))", "score": -0.4889083930902416, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.vote_count))", "score": -0.5111351439409191, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,1982-03-02), movie.title),movie.title))", "score": -0.5310524443775648, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,1982-03-02),getData(movie),movie.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.5649754452315374, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,1982-03-02),getData(movie),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.5654325317495759, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,1982-03-02),getData(movie),movie.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.6057463939691708, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,1982-03-02),getData(movie),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.606203436185792, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),movie.release_date,>=,1982-03-02), movie.title),movie.title))", "score": -0.6305123069392043, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.person_id),movie.release_date,>=,1982-03-02), movie.title),movie.title))", "score": -0.6346748759291606, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.release_date,>=,1982-03-02), movie.title),movie.title))", "score": -0.6394827642135992, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1982-03-02), movie.title),movie.title))", "score": -0.6596714386396343, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}, {"orig_question": "How many different movie titles were released since 1982-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,1982-03-02), movie.title),movie.title))", "score": -0.6989076861791546, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1982-03-02), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.19762046891992213, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.22265429306571605, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.33121110010688426, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.birth_place),person.death_place))", "score": -0.3564558762664092, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.3814897004122031, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1985-12-11),person.death_place), person.death_place))", "score": -0.38797512170276605, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), company.name),person.death_place))", "score": -0.4830476332062972, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.birth_place),person.death_place))", "score": -0.4900465074533713, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.death_place),person.birth_place))", "score": -0.49418177339975955, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), company.name),person.death_place))", "score": -0.5080814573520911, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.birth_place))", "score": -0.5192155975455535, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<,1985-12-11),person.death_place), person.death_place))", "score": -0.5482961599191185, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1985-12-11),person.death_place), person.birth_place))", "score": -0.5937813174386974, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<=,1985-12-11),person.death_place), person.death_place))", "score": -0.6117627833446022, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), company.name),person.death_place))", "score": -0.6166382643932593, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,6.00342), movie.id),movie.vote_count)", "score": -0.2521120312386583, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)", "score": -0.25343370437100066, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<,6.00342), movie.id),movie.vote_count)", "score": -0.27905239201247134, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,6.00342), movie.id),movie.vote_average)", "score": -0.45499578174144917, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_average)", "score": -0.45631745487379155, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<,6.00342), movie.id),movie.vote_average)", "score": -0.48193614251526223, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>,6.00342), movie.id),movie.vote_count)", "score": -0.4869139532848671, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,6.00342), movie.id),movie.vote_count)", "score": -0.48896219082597775, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.vote_average),movie.vote_count))", "score": -0.5701535229527508, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.vote_count),movie.vote_count))", "score": -0.5991684679829632, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,6.00342), movie.id),movie.revenue)", "score": -0.6651816765943052, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.revenue)", "score": -0.6665033497266475, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>,6.00342), movie.id),movie.vote_average)", "score": -0.6897977037876579, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,6.00342), movie.id),movie.vote_count)", "score": -0.6911792592465544, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}, {"orig_question": "How much is the average of all votes from the movies with a popularity up to 6.00342?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,6.00342), movie.id),movie.vote_average)", "score": -0.6918459413287686, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,6.00342), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.022749858777388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.44823896266461816, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1965-03-02),movie.runtime), movie.runtime))", "score": -0.5426518331223633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.6173339577944716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.6551733625092311, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7241024975810433, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7414203522348544, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.vote_count))", "score": -0.7476778119889786, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7561763761186739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), oscar.sub_category),movie.runtime))", "score": -0.7839626251807204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.release_date))", "score": -0.8043382853356889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8138700106137549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),oscar.number))", "score": -0.8441023320046952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.release_date),movie.runtime))", "score": -0.860542732392787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), oscar.number),movie.runtime))", "score": -0.8877933799376478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Rumored), company.name),company.name))", "score": -0.06904379642597284, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.17304949003312475, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.22260788796868636, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Rumored), company.name),company.name))", "score": -0.24057653990523184, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Rumored), company.name),company.name))", "score": -0.28567821799086185, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3032433103767011, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Rumored), company.name),company.name))", "score": -0.3108419929799801, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.34486459823824694, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3518829117456841, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),movie.title,=,Rumored), company.name),company.name))", "score": -0.35738013593763823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),production_company.company_id,production_company.movie_id),movie.title,=,Rumored), company.name),company.name))", "score": -0.36084924951283665, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Rumored),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3657809332872836, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Rumored), company.name),company.name))", "score": -0.3839968315472557, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,Rumored), company.name),company.name))", "score": -0.38631665076559074, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,=,Rumored), company.name),company.name))", "score": -0.392332115942635, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.name),person.name))", "score": -0.31430706762330374, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1957-04-28), person.name),person.name))", "score": -0.3511372619177564, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1957-04-28), person.name),person.name))", "score": -0.361817922523187, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.birth_day),person.name))", "score": -0.38813850664155325, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1957-04-28), person.birth_day),person.name))", "score": -0.4249687009360059, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1957-04-28), person.birth_day),person.name))", "score": -0.4356493615414365, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.death_day),person.name))", "score": -0.44358697914140066, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.name),person.birth_day))", "score": -0.46783586972014746, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1957-04-28), person.death_day),person.name))", "score": -0.48041717343585333, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,1957-04-28),person.name), person.name))", "score": -0.4843869626929518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1957-04-28), person.death_day),person.name))", "score": -0.49109783404128393, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1957-04-28), person.name),person.birth_day))", "score": -0.5046660640146001, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1957-04-28), person.name),person.birth_day))", "score": -0.5153467246200307, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,1957-04-28),person.birth_day), person.name))", "score": -0.5199608177354094, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.birth_day),person.birth_day))", "score": -0.541667308738397, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.15705952148362948, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.1780875834800062, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.24248590829758526, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.26684982808837493, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_count,>=,3.5), language.name),language.name))", "score": -0.2710168324375898, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.2795131046898829, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_count,<=,3.5), language.name),language.name))", "score": -0.2920448944339665, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.309215307933804, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),movie.original_language))", "score": -0.31113687706410353, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.year,>=,3.5), language.name),language.name))", "score": -0.31377308716881314, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),movie.original_language))", "score": -0.3321649390604802, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.year,<=,3.5), language.name),language.name))", "score": -0.3348011491651898, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.3619946144854079, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.38302267648178456, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), movie.original_language),language.name))", "score": -0.3855582692421697, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.09548325444693782, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,<,132), country.name),country.name))", "score": -0.10403986269651681, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,132),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.15423727953495814, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,>,132), country.name),country.name))", "score": -0.27164827547039594, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3123789293672289, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.runtime,<,132),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3241582052024529, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.runtime,<,132), country.name),country.name))", "score": -0.3310381972734866, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34629926642119535, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<,132), country.name),country.name))", "score": -0.36839584585337043, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,132),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3790178536076745, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.status))", "score": -0.3792117163284983, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3823648198645794, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.3838413916403261, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,132),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.39570114713691734, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Is there any production country where a movie has been produced with a runtime less than 132?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,<,132), country.name),movie.status))", "score": -0.4009960109267161, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,132),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)", "score": -0.02374132696548786, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.27933433416569703, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.4801149909864948, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.vote_count),movie.vote_count)", "score": -0.5879657223002287, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6033685528417617, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.revenue)", "score": -0.6094565044693393, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,!=,pt), movie.id),movie.vote_count)", "score": -0.6172681022619328, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6204051973417615, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.revenue)", "score": -0.647466446128697, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6487299989730767, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6557306017761082, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,pt), movie.id),movie.vote_count)", "score": -0.658482720805974, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6821532352761852, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.revenue),movie.vote_count)", "score": -0.6909060894410126, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_average)", "score": -0.7087619373914629, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.1579937844856243, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,>=,2006), person.birth_day),person.birth_day))", "score": -0.20011777801603575, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.2119912254496904, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.21409803108264056, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.22158141154714692, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,2006), person.birth_day),person.birth_day))", "score": -0.27199172451597525, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.27887777550344, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.2820526605538225, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.3113542190904778, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.sub_category,>=,2006), person.birth_day),person.birth_day))", "score": -0.32420724839641046, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,=,2006), person.birth_day),person.birth_day))", "score": -0.32784457639122255, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.338543671567552, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.sub_category,>,2006), person.birth_day),person.birth_day))", "score": -0.34567086337630315, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,>=,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.38055990660744615, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.39256561193354356, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Released), movie.title),movie.title))", "score": -0.17114029421645682, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.title),movie.title))", "score": -0.21816324039536994, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,Released), movie.title),movie.title))", "score": -0.23074078901845496, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Released), movie.title),movie.vote_count))", "score": -0.41096822141844314, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,Released), movie.title),movie.title))", "score": -0.4393566135986475, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,Released), movie.title),movie.title))", "score": -0.45131992145616096, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,Released), movie.title),movie.title))", "score": -0.4528905634506373, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Released), movie.title),movie.budget))", "score": -0.4555142295284895, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.title),movie.vote_count))", "score": -0.45799116759735625, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,Released), movie.title),movie.vote_count))", "score": -0.4705687162204413, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.title),movie.budget))", "score": -0.5025371757074026, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,Released), movie.title),movie.budget))", "score": -0.5151147243304877, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.title),movie.title))", "score": -0.6309314795507817, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Released), movie.title),movie.runtime))", "score": -0.6699246835632948, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies have a non zero runtime that were released?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,Released),getData(movie),movie.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.title))", "score": -0.6740903155222349, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.015348410161095671, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.5382033187634079, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,=,69),movie.revenue), movie.revenue))", "score": -0.5983500554575585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.653149166770163, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.6996046036110783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_count))", "score": -0.7108909183152718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.popularity))", "score": -0.7337969833024545, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,69),getData(movie),movie.id,cast.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.7485622490208802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.7735228330566315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,69), movie.revenue),movie.revenue))", "score": -0.7894092467467999, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.id),movie.revenue))", "score": -0.791733761478099, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.8060739331849618, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.release_date),movie.revenue))", "score": -0.8326046664005844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,69), movie.revenue),movie.revenue))", "score": -0.8419601586501813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),spoken_language.movie_id))", "score": -0.8652451329835458, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),language.name,=,Italiano), company.name),company.name))", "score": -0.21565835705067798, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.29442083421503895, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,company.id), company.name),company.name))", "score": -0.29646439072532665, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2997045824104515, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.30547119388945254, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Italiano), company.name),company.name))", "score": -0.3126528358997658, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),spoken_language.movie_id,movie.id),getData(company),production_company.company_id,company.id),language.name,=,Italiano), company.name),company.name))", "score": -0.3139361241933458, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),language.name,=,Italiano),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),language.name,=,Italiano), company.name),company.name))", "score": -0.31645690599576637, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),language.name,=,Italiano), company.name),company.name))", "score": -0.3179675857157858, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id), company.name),company.name))", "score": -0.3244841659831057, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.326169276507695, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),has_keyword.movie_id,company.id), company.name),company.name))", "score": -0.33183929795907235, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id), company.name),company.name))", "score": -0.34057166516217086, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,company.id), company.name),company.name))", "score": -0.3451108343997545, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),language.name,=,Italiano), company.name),None))", "score": -0.3634648514547015, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.05326948926813202, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1993-12-17), person.name),person.name))", "score": -0.3583463184259017, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1993-12-17),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.41093292800007897, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1993-12-17), person.name),person.name))", "score": -0.46061498352355557, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),keyword.name))", "score": -0.485816667387553, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1993-12-17), person.name),person.name))", "score": -0.5428081197387655, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),language.name))", "score": -0.5666143694616039, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_average))", "score": -0.5687045851445873, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_day))", "score": -0.5913641253209789, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.number))", "score": -0.6125277677274426, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.birth_place))", "score": -0.6187790432668407, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1993-12-17),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), language.name),person.name))", "score": -0.6210644858775757, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.title))", "score": -0.6345353522992809, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_count))", "score": -0.6378918686605175, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.sub_category))", "score": -0.6478146115041454, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,best picture), movie.id),movie.runtime)", "score": -0.19099825188880873, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,best picture), movie.id),movie.runtime)", "score": -0.2013704372133216, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture), movie.id),movie.runtime)", "score": -0.21211317957906883, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.24571727891911582, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,best picture), movie.runtime),movie.runtime)", "score": -0.2511956789800594, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,best picture), movie.runtime),movie.runtime)", "score": -0.26197015995567996, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,best picture), movie.id),movie.runtime)", "score": -0.26541507733981534, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),getData(movie),oscar_winner.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2710479854990871, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture), movie.runtime),movie.runtime)", "score": -0.27231060667031953, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.28272470412346595, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.runtime),movie.runtime)", "score": -0.28549507220094394, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,best picture), movie.runtime),movie.runtime)", "score": -0.3260148000821737, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3530304095950845, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.runtime),movie.runtime)", "score": -0.35413548883360324, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of oscar winner movies which did not win an oscar in the category best picture?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)", "score": -0.37372250560774595, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,best picture),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.0208873585506808, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))", "score": -0.5327438328240532, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.606963914091466, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,2.6), movie.popularity),movie.popularity))", "score": -0.6142860916152131, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.6234139494372357, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.status))", "score": -0.6408871069725137, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.vote_average))", "score": -0.670982147770701, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.id),movie.popularity))", "score": -0.70169414600241, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.release_date),movie.popularity))", "score": -0.7129709275614005, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.original_language))", "score": -0.7215349331672769, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.6), movie.popularity),movie.popularity))", "score": -0.7259552890609484, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.revenue))", "score": -0.737484182434855, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.status),movie.popularity))", "score": -0.7642449887644034, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,2.6), movie.popularity),movie.popularity))", "score": -0.7743183043494355, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2.6), movie.popularity),movie.popularity))", "score": -0.7759216692938935, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.birth_day),person.name))", "score": -0.1796111310395645, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.birth_day),person.birth_day))", "score": -0.21701941588253248, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.birth_day),person.name))", "score": -0.34272723221511114, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.birth_day),person.birth_day))", "score": -0.38013551705807913, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.name),person.name))", "score": -0.3946561771008419, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.name),person.birth_day))", "score": -0.4320644619438099, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.birth_day),movie.popularity))", "score": -0.5386274824413704, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1988-02-28),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_day),person.name))", "score": -0.5439092527197681, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1988-02-28),person.name), person.name))", "score": -0.5548792909830809, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.name),person.name))", "score": -0.5577722782763885, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1988-02-28),getData(crew),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_day),person.name))", "score": -0.5749380628830808, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.name),person.birth_day))", "score": -0.5951805631193565, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.birth_day),person.name))", "score": -0.5970269324752735, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.birth_day),person.gender))", "score": -0.6082033882412361, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "In which days did person born in 1988-02-28 died ? ", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.birth_day),person.death_day))", "score": -0.6186586985859321, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,!=,1962-06-30),movie.vote_average),movie.revenue))", "score": -0.14367727133834046, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1962-06-30),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.vote_average),movie.revenue))", "score": -0.18403431576091261, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.death_day,>,1962-06-30),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.vote_average),movie.revenue))", "score": -0.25956972740265083, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_day,!=,1962-06-30),movie.vote_average),movie.revenue))", "score": -0.2640481892903841, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,>,1962-06-30),movie.vote_average),movie.revenue))", "score": -0.27941458996480256, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,!=,1962-06-30),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.vote_average),movie.revenue))", "score": -0.2865037065851801, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))", "score": -0.3099001318133533, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1962-06-30),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.vote_average),movie.revenue))", "score": -0.32452640994598664, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,!=,1962-06-30),movie.vote_average),movie.revenue))", "score": -0.34809585396674914, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.death_day,!=,1962-06-30),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.vote_average),movie.revenue))", "score": -0.3620391182269183, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,>,1962-06-30), movie.id),movie.revenue)", "score": -0.36527211836261153, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,<,1962-06-30),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.vote_average),movie.revenue))", "score": -0.3762523330391908, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,!=,1962-06-30),movie.popularity),movie.revenue))", "score": -0.377612343717169, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,!=,1962-06-30),movie.vote_average),movie.revenue))", "score": -0.377930757108174, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie with the highest vote average were a crew member is older than 1962-06-30?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,>,1962-06-30), movie.id),movie.revenue)", "score": -0.3862866675101831, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-06-30),movie.vote_average),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.01713762374856742, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.revenue),movie.budget))", "score": -0.49537429994234117, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.revenue))", "score": -0.5227919133685646, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.release_date),movie.budget))", "score": -0.5767105895865825, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,cs),getData(movie),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.5770160234587275, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cs), movie.budget),movie.budget))", "score": -0.6170358095623669, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.id),movie.budget))", "score": -0.7104203183043865, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,cs),getData(movie),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.7171249173399219, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.release_date))", "score": -0.7311444195293006, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.title),movie.budget))", "score": -0.7808898765433696, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.vote_count))", "score": -0.7812719853900489, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),language.name,=,cs), movie.budget),movie.budget))", "score": -0.7969746821981971, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.vote_count),movie.budget))", "score": -0.815759428202, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(language),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.8166567382068024, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), person.death_place),movie.budget))", "score": -0.8430690843451885, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.id),movie.runtime)", "score": -0.04124727578368977, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.runtime),movie.runtime)", "score": -0.4694046027358689, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,941), movie.id),movie.runtime)", "score": -0.589886301739086, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.id),movie.vote_average)", "score": -0.656907489931618, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.id),movie.vote_count)", "score": -0.7519682336936068, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,941), movie.id),movie.runtime)", "score": -0.8061310759255244, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,941), movie.id),movie.runtime)", "score": -0.8178677773274812, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.id),oscar.year)", "score": -0.8754708890340198, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(filter(getData(movie),movie.vote_count,>=,941),movie.runtime)", "score": -0.9069878446255254, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(filter(getData(movie),movie.vote_count,<=,941),movie.runtime)", "score": -0.9073471317607702, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.id),movie.release_date)", "score": -0.9194861624812211, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.release_date),movie.runtime)", "score": -0.9203376418044106, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),person.death_day,=,941), movie.id),movie.runtime)", "score": -0.9301168733696621, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>,941), movie.id),movie.runtime)", "score": -0.9381666363112107, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,=,941), movie.id),movie.runtime)", "score": -0.9524126334284975, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.051726235145638455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.19541673724718212, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,187),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.20829023152577125, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,187), genre.name),genre.name))", "score": -0.3072895302488992, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31068088568553676, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.3725761697676333, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.vote_average,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3840574352706823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3844390130686829, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), person.death_place),genre.name))", "score": -0.387849720209102, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.38812777251700675, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<=,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.389407449689358, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))", "score": -0.3907919136356519, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39947839840127913, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(distinct(extractValues(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id),genre.name), genre.name))", "score": -0.4315575448566472, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),has_genre.genre_id))", "score": -0.43863798248651875, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.popularity))", "score": -0.019694612792591215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))", "score": -0.43611071907253063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.vote_average))", "score": -0.5896308228493581, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.popularity))", "score": -0.6409347352237091, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.status))", "score": -0.6461891338349233, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,738), movie.popularity),movie.popularity))", "score": -0.6641268273469905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.revenue))", "score": -0.6936077281952748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.popularity))", "score": -0.7657335843123292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.original_language))", "score": -0.7847557470322499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>,738),movie.popularity), movie.popularity))", "score": -0.7985964924846485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.revenue),movie.popularity))", "score": -0.8225464442166412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.id))", "score": -0.8229123756409535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.release_date))", "score": -0.8234543010712514, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.release_date),movie.popularity))", "score": -0.826746783533963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "Show me the movie popularities of all movies with a vote count greater than 738", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.vote_average),movie.popularity))", "score": -0.8288399198445404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.04173096570598661, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Rumored),movie.vote_count)", "score": -0.4883356248856248, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.5795937676593894, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.6506013634602866, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.vote_count)", "score": -0.6814413496085512, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)", "score": -0.6874805247632646, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.6923405008565169, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Rumored), movie.id),movie.vote_count)", "score": -0.7687453790147156, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Rumored), movie.id),movie.vote_count)", "score": -0.7945085662487514, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.budget)", "score": -0.8331797814422118, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,<=,Rumored),movie.vote_count)", "score": -0.8399256082799739, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Rumored),movie.vote_count)", "score": -0.8457880235433443, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,>=,Rumored),movie.vote_count)", "score": -0.9214915165737267, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.runtime)", "score": -0.9356780548338569, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count)", "score": -0.9381546555387419, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))", "score": -0.14403432377439068, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.vote_average,>=,8.2), person.death_day),person.death_day))", "score": -0.17446610270783997, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,<=,8.2), person.death_day),person.death_day))", "score": -0.18894143446545192, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,8.2),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_day),person.death_day))", "score": -0.22910374178528187, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,8.2),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_day),person.death_day))", "score": -0.24559155531075985, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,8.2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_day))", "score": -0.26148448134287156, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.vote_average,<=,8.2), person.death_day),person.death_day))", "score": -0.27248829908067795, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2),person.birth_day,>=,8.2), person.death_day),person.death_day))", "score": -0.33853615422113914, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(person),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.vote_average,>=,8.2), person.death_day),person.death_day))", "score": -0.33879951770351696, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,8.2),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.birth_day),person.death_day))", "score": -0.34537639321624225, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,crew.movie_id),movie.vote_average,>=,8.2),getData(person),crew.person_id,person.id), person.death_day),person.death_day))", "score": -0.3599780683145136, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,8.2),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.birth_day),person.death_day))", "score": -0.3618642067417202, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,8.2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_day))", "score": -0.3654935227927692, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))", "score": -0.3818037322738086, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of crew members in movies with a vote average greater or equal to 8.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.vote_average,>=,8.2), person.death_day),person.death_day))", "score": -0.3907530841842833, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,>=,8.2), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.2165490463935754, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.2676840769072457, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,1987),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.29038166746865685, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.name,!=,1987), person.birth_day),person.birth_day))", "score": -0.31615412042532937, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.category,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3390004774075582, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,1987),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.3477995648527934, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,1987),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.3540921403788574, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),person.name,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3701649462287315, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.name,!=,1987), person.birth_day),person.birth_day))", "score": -0.3726947810800496, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,1987),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.3767524216429303, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),country.name,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.37781844135811643, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),country.name,!=,1987),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.3808358139631606, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.gender,!=,1987), person.birth_day),person.birth_day))", "score": -0.382951028776276, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.category,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.39013550792122853, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),person.gender,!=,1987),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3997841990587283, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.18047463479744236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.20754496266701689, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.22689504727621282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.2658662952381085, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.2695409425813591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),country.name))", "score": -0.28173364887953184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.2946277055030429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,17.7091), language.name),country.name))", "score": -0.3689466644632226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(production_country),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.37374812311619154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,production_country.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3799384110998889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),country.name))", "score": -0.3800823397594314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.3857977157354184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),genre.name))", "score": -0.3870247741762746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.39287235082600613, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,17.7091),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.39395070306936536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,Released), movie.id),movie.runtime)", "score": -0.1801322879801966, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,Released), movie.id),movie.runtime)", "score": -0.18709617049855926, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,Released), movie.id),movie.runtime)", "score": -0.2878747126205772, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,Released), movie.id),movie.runtime)", "score": -0.29483859513893984, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,Released), movie.runtime),movie.runtime)", "score": -0.5749146337535851, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,Released), movie.runtime),movie.runtime)", "score": -0.5818785162719478, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,Released), movie.id),movie.vote_average)", "score": -0.6755416513999204, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,Released), movie.id),movie.vote_average)", "score": -0.6825055339182831, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,Released), movie.runtime),movie.runtime)", "score": -0.6826570583939657, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,Released), movie.runtime),movie.runtime)", "score": -0.6896209409123284, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,Released), movie.id),movie.runtime)", "score": -0.7632035495543075, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,Released), movie.id),movie.runtime)", "score": -0.7648506478433228, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,Released), movie.id),movie.runtime)", "score": -0.7701674320726701, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,Released), movie.id),movie.runtime)", "score": -0.7718145303616855, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of unreleased movies?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,Released), movie.id),movie.vote_average)", "score": -0.783284076040301, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,1998-07-01),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.1584397405024053, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,1998-07-01),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.release_date),movie.popularity))", "score": -0.19489219151335413, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,1998-07-01), movie.release_date),movie.release_date))", "score": -0.22417127078730423, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,1998-07-01), movie.release_date),movie.release_date))", "score": -0.2615982152100306, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,1998-07-01), movie.release_date),movie.popularity))", "score": -0.2902123548730426, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,1998-07-01), movie.release_date),movie.popularity))", "score": -0.310503001532964, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,1998-07-01),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.release_date),movie.id))", "score": -0.3187179842881973, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,>,1998-07-01), movie.release_date),movie.release_date))", "score": -0.3226081782650132, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,>,1998-07-01), movie.release_date),movie.release_date))", "score": -0.3311074603696157, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,1998-07-01), movie.release_date),movie.release_date))", "score": -0.36094479380594796, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,1998-07-01), movie.release_date),movie.release_date))", "score": -0.3616813957390557, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,1998-07-01),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.3696515984081868, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,1998-07-01), movie.release_date),movie.release_date))", "score": -0.36997076472540646, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,1998-07-01), movie.release_date),movie.release_date))", "score": -0.37335871234793555, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any movies released after 1998-07-01 with a spoken language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,>,1998-07-01), movie.release_date),movie.popularity))", "score": -0.3800122466925491, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1998-07-01),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.07515612175290258, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.16794255708765696, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.21517391075639233, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),oscar.year),movie.budget))", "score": -0.3312770296442869, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.343735901683497, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.35593092784783226, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.35914525815767046, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.36525102125226117, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),language.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.38635386647212894, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.38877920958331563, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.budget))", "score": -0.3973756302600848, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))", "score": -0.4005707547979951, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.40256295073741766, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,spoken_language.iso_639_1),movie.vote_average),movie.budget))", "score": -0.4339619708140939, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),language.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.43992943736154416, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.10502807051655033, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.17534038367384713, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.18689325548413832, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.budget),movie.budget)", "score": -0.19854828750257897, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.25846306335310604, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.3124807575757644, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.budget)", "score": -0.3511963988336832, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,blind date),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.35867345676464507, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.budget)", "score": -0.37270426907464366, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.38176866130919157, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(getData(keyword),keyword.name,=,blind date), movie.id),movie.budget)", "score": -0.3871932071935309, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date), movie.budget),movie.budget)", "score": -0.39015764822981513, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.budget)", "score": -0.39054250324040823, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date), movie.id),movie.revenue)", "score": -0.40280282209434015, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget of all movies with the keyword blind date?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,blind date),getData(movie),has_keyword.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.42654611494029004, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,blind date),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.1088279739262442, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.12172840160839161, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.16032681626583437, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2658901840689455, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.30658238428849044, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3098668145712381, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3525252024964247, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3542890847586158, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.36184984373336376, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.37209972234753685, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3731631428209137, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3775938912834872, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.4029930677998565, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.41438299809622703, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.42299234448130163, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,!=,235483004), genre.name),genre.name))", "score": -0.38125044194338736, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,235483004),getData(company),oscar_winner.oscar_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4153237889076123, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),company.name,!=,Tulsa, Oklahoma), genre.name),genre.name))", "score": -0.42511962358918953, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,235483004),getData(company),oscar_winner.oscar_id,oscar.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.42515239313314096, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,235483004),getData(company),oscar_winner.oscar_id,person.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.43324787903016776, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),person.death_place,!=,Tulsa, Oklahoma),getData(oscar_nominee),company.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4335818583941685, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,235483004),getData(company),oscar_winner.oscar_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.43362835917980386, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),company.name,!=,Tulsa, Oklahoma),getData(company),oscar_winner.oscar_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.43483025063180064, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,Tulsa, Oklahoma),getData(company),oscar_winner.oscar_id,oscar.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.4434569634053325, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),company.name,!=,Tulsa, Oklahoma),getData(company),oscar_winner.oscar_id,oscar.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4446588548573293, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,Tulsa, Oklahoma),getData(company),oscar_winner.oscar_id,person.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.4515524493023593, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),company.name,!=,Tulsa, Oklahoma),getData(company),oscar_winner.oscar_id,person.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4527543407543561, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),company.name,!=,235483004),getData(company),oscar_winner.oscar_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.453134866458783, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_winner),company.id,oscar_winner.oscar_id),company.name,!=,Tulsa, Oklahoma),getData(company),oscar_winner.oscar_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.person_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4602495164453582, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(oscar_nominee),company.id,oscar_winner.oscar_id),company.name,!=,235483004),getData(company),oscar_winner.oscar_id,oscar.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.46296347068431165, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.13541395000512352, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.21137479258717995, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.23177846597821686, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.273542715620873, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.2802374426832072, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.30773930856027326, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.sub_category))", "score": -0.3214623459800882, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.34414576594655705, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.34950355820292944, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.sub_category))", "score": -0.35588821133609505, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.36076678265169415, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.36369605147364037, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.37553696320214014, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.37904715471664774, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.38093349107632796, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Belgium), person.death_day),person.death_day))", "score": -0.19493338084963022, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.2719179437156113, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.2742341281346106, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Belgium), person.death_day),person.death_day))", "score": -0.2748723378638836, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.2868919955330682, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.28920817995206755, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Belgium), person.birth_day),person.death_day))", "score": -0.3021048953084806, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Belgium), person.death_day),person.death_day))", "score": -0.31236577471788407, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_place,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.32431851952640317, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Belgium), person.death_day),movie.revenue))", "score": -0.33366759953743697, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_place,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.3392925713438601, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,Belgium), person.death_day),person.death_day))", "score": -0.3406714786194099, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.3450250019648584, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.35999908257823654, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}, {"orig_question": "On which different dates did the persons, who won an oscar for their performance in a movie produced in Belgium, die?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),oscar.category,=,Belgium),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.36097715597860347, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Belgium),merge(getData(production_country),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),movie.runtime),movie.vote_average))", "score": -0.17336272368641356, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.runtime),movie.vote_average))", "score": -0.17659049263001136, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.runtime),movie.vote_average))", "score": -0.22525034979833422, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.runtime),movie.vote_average))", "score": -0.2406910832210346, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),oscar.year),movie.vote_average))", "score": -0.29033278574882265, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.runtime),movie.vote_average))", "score": -0.2969175489012232, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),movie.runtime),movie.vote_average))", "score": -0.317060855266423, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),movie.vote_average),movie.vote_average))", "score": -0.353673738322388, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),movie.runtime),movie.runtime))", "score": -0.35698390478070086, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),movie.runtime),movie.vote_count))", "score": -0.37202586624071216, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.3744562849856107, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano),movie.runtime),movie.vote_average))", "score": -0.3852974777517559, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),movie.popularity),movie.vote_average))", "score": -0.3917587984535052, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.runtime),movie.vote_count))", "score": -0.39970419431266435, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}, {"orig_question": "Find the voting average of the movie with the highest runtime between all the movies whose language is Italiano.", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.vote_average))", "score": -0.40122969368119477, "correct_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano),movie.runtime),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.12619864209662485, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.12766838803976716, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.19515957172415507, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.2407517914308422, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.33695425332200446, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.budget,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.33956962794631323, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(movie),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.35160875275797204, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.36140085326953436, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.37166123548682145, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),keyword.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.3790691506337624, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.vote_count,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3839453716662734, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),keyword.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.38402341138322643, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.40213444054618597, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.4026435423210755, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),oscar.number,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4109388194352823, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.24790304324415047, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,f), person.birth_day),person.birth_day))", "score": -0.29304294458415825, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.gender))", "score": -0.3570996465423377, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,f), person.birth_day),person.gender))", "score": -0.4022395478823455, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.death_place))", "score": -0.4316590519883903, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.birth_day))", "score": -0.4430783110001357, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_place))", "score": -0.47265846452501137, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,f), person.birth_day),person.death_place))", "score": -0.47679895332839806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,f), person.birth_day),person.birth_place))", "score": -0.5177983658650192, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.gender))", "score": -0.552274914298323, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,f),person.birth_day), person.death_place))", "score": -0.5675924010283779, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,f),person.birth_day), person.gender))", "score": -0.5677525736100506, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.568033380273846, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.name))", "score": -0.5896419378259452, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,f),person.birth_day), person.birth_day))", "score": -0.5915408320433926, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))", "score": -0.025322267254523467, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,48000000), movie.runtime),movie.runtime))", "score": -0.4203087956921081, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<=,48000000),movie.runtime), movie.runtime))", "score": -0.4794386303256033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,48000000), movie.runtime),movie.runtime))", "score": -0.4973021111727576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,48000000), movie.runtime),movie.runtime))", "score": -0.634376343274198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,48000000), movie.runtime),movie.runtime))", "score": -0.7444239220858435, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.runtime),movie.runtime))", "score": -0.745501336576126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.release_date))", "score": -0.7667880259032245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))", "score": -0.7800284342083614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.vote_count))", "score": -0.8088073335165973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.runtime),movie.runtime))", "score": -0.808957752706192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.vote_count),movie.runtime))", "score": -0.8110156880502473, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.title),movie.runtime))", "score": -0.8199983464364777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), oscar.sub_category),movie.runtime))", "score": -0.8567352520112763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,>=,48000000),movie.runtime), movie.runtime))", "score": -0.8800196297670482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)", "score": -0.09480254040060714, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.16097647290060169, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.budget)", "score": -0.1949171625326637, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_company.movie_id,movie.id), movie.id),movie.budget)", "score": -0.24997541513035926, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea), movie.id),movie.budget)", "score": -0.26411669026010315, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.release_date),movie.budget)", "score": -0.30162620445320376, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.title),movie.budget)", "score": -0.31104799473466715, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.budget)", "score": -0.31610440603531564, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_company.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.31614934763035385, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea), movie.id),movie.budget)", "score": -0.3672914611514269, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.release_date),movie.budget)", "score": -0.39440194118310845, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.budget)", "score": -0.40134840662274146, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.revenue),movie.budget)", "score": -0.4262501671687357, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.43161583466906267, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}, {"orig_question": "What is the average budget of movies produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.budget)", "score": -0.43283842424512686, "correct_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)", "score": -0.02290783933637038, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,sv), movie.id),movie.vote_average)", "score": -0.4711582328644616, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,sv), movie.id),movie.vote_average)", "score": -0.5254002783352169, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,sv), movie.id),movie.vote_average)", "score": -0.5387308768218446, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sv),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.5557623035489957, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,sv), movie.id),movie.vote_average)", "score": -0.5751050526525773, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),movie.original_language,!=,sv),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.5865872628647305, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,sv), movie.id),movie.vote_average)", "score": -0.5929729222925998, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.5932084711138021, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,!=,sv), movie.id),movie.vote_average)", "score": -0.6114335279811757, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.6265855641366997, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sv),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.6334409428355615, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,sv), movie.id),movie.vote_average)", "score": -0.6339347657389879, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,sv), movie.id),movie.vote_average)", "score": -0.6596322181078828, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}, {"orig_question": "Whats the total vote average of movies where the original language is not sv?", "inferred_code": "sum(distinct(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.6718819486101426, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,sv), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,art direction),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.19051732347736783, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,!=,art direction), person.birth_place),person.birth_place))", "score": -0.21223201247397458, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,!=,art direction), person.birth_place),person.birth_place))", "score": -0.26484628946146016, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,!=,art direction), person.birth_place),person.birth_place))", "score": -0.2653303533275535, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,art direction),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.27205744225073064, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),person.birth_place,!=,art direction), person.birth_place),person.birth_place))", "score": -0.2762419895458641, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,art direction),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30187932117998406, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,art direction),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.31724739261053864, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,!=,art direction), person.birth_place),person.birth_place))", "score": -0.31794463031503906, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,art direction),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32183989401041907, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,art direction),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3239468195773429, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),person.birth_place,!=,art direction), person.birth_place),person.birth_place))", "score": -0.32885626653334965, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.birth_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich), person.birth_place),person.birth_place))", "score": -0.329340330399443, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,!=,art direction), person.birth_place),person.birth_place))", "score": -0.34489147019900585, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of persons nominated for an oscar in the category art direction who didn't die in London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,art direction),getData(oscar_nominee),oscar.id,crew.person_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.36536962047642574, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,art direction),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,London Borough of Hillingdon, England, Vereinigtes K\u00f6nigreich),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.08525064344094044, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.1391968782284836, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.1470294896081167, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.27657657588525286, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.2903270399757936, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,movie.id), movie.popularity),movie.popularity))", "score": -0.30567416424133426, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3119067512989431, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3203049580794937, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.324975484054102, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3302881183710454, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3326038524418046, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3450467736493586, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3627780076334215, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.revenue))", "score": -0.3657308284949356, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.vote_average))", "score": -0.378510657555103, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.11288078460606073, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.13815180261880514, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,medal of valor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.15230840950621394, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.20845831095113018, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.2663729605107044, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.266377763634299, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,medal of valor), movie.title),movie.title))", "score": -0.2843702506883743, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.2985373225390855, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.30132562593666384, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.3041421293174345, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,medal of valor), movie.title),movie.title))", "score": -0.30949412937855847, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,medal of valor), movie.title),movie.title))", "score": -0.31547675554594595, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.31711805987717867, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.33997127216523265, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "In how many movies with different titles occure the keyword medal of valor?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,medal of valor),keyword.name,=,medal of valor), movie.title),movie.title))", "score": -0.3479661521116075, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,medal of valor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.16386160468528888, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.name,=,Romance), country.name),country.name))", "score": -0.2514262924990742, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.268381791686509, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,production_country.movie_id), country.name),country.name))", "score": -0.2902835200333598, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.2909000092278523, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(country),has_genre.genre_id,country.iso_3166_1), country.name),country.name))", "score": -0.3003772305462308, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.307367069401531, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.3122177844764329, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,production_country.movie_id), country.name),country.name))", "score": -0.3288847035734998, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),genre.name,=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.33100367158779725, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),has_genre.genre_id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.33398963575515295, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),oscar.category,=,Romance),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3395181108499771, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.genre_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,production_country.movie_id), country.name),country.name))", "score": -0.3522762567666839, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,production_country.movie_id), country.name),country.name))", "score": -0.3544327890916526, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,country.iso_3166_1), country.name),country.name))", "score": -0.3561658928509283, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.1028974762441839, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,War),movie.budget),movie.release_date))", "score": -0.1543136638201602, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,War),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.21436584421682292, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.budget),movie.release_date))", "score": -0.2309129554694639, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,War),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.budget),movie.release_date))", "score": -0.25646899500116416, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,War),movie.budget),movie.release_date))", "score": -0.2911637289151256, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,War),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.3348023686741846, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,War),movie.budget),movie.release_date))", "score": -0.3794664497921533, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.3889197186713457, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.39137189662831035, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.name,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.43980952459711237, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),oscar.category,=,War),movie.budget),movie.release_date))", "score": -0.4430852106258448, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(language),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.4472378191478542, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.release_date))", "score": -0.47223488325943935, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,spoken_language.iso_639_1),movie.budget),movie.release_date))", "score": -0.4785120825249947, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.2640785942057846, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.3350800046900986, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.3782261781717664, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,cast.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.37931166921862136, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.39805018080806975, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(crew),person.id,cast.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.3991356718549247, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.4053270607288416, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,crew.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.4064125517756965, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.4186305592622266, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.42515106336514497, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(crew),person.id,crew.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.42623655441199987, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(crew),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.43845456189852994, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.44573148141369345, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Christopher J. Wood),getData(oscar_winner),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.name))", "score": -0.4601481438742398, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.46636567210953217, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2008-08-21), movie.id),movie.runtime)", "score": -0.0806555999655596, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,2008-08-21), movie.id),movie.runtime)", "score": -0.2105454219485647, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,2008-08-21), movie.id),movie.runtime)", "score": -0.5039888102095786, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)", "score": -0.5719246391126512, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2008-08-21), movie.runtime),movie.runtime)", "score": -0.6998729804681917, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,2008-08-21), movie.id),movie.runtime)", "score": -0.7052764236175543, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2008-08-21), movie.id),movie.vote_average)", "score": -0.7211951036036938, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2008-08-21), movie.id),movie.runtime)", "score": -0.74703018066557, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,2008-08-21), movie.runtime),movie.runtime)", "score": -0.8297628024511968, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,2008-08-21), movie.id),movie.runtime)", "score": -0.8351662456005594, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2008-08-21), movie.id),movie.vote_count)", "score": -0.8488709960135896, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,2008-08-21), movie.id),movie.vote_average)", "score": -0.8510849255866989, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,null,2008-08-21), movie.id),movie.runtime)", "score": -0.8588082088204414, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(person),movie.release_date,>,2008-08-21), movie.id),movie.runtime)", "score": -0.9256847570253847, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2008-08-21), movie.id),movie.release_date)", "score": -0.9322679215970606, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))", "score": -0.08368623783462681, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.budget))", "score": -0.20568156024091877, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.revenue))", "score": -0.430672539077932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.vote_count))", "score": -0.444536281429464, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.budget),movie.title))", "score": -0.45760699050151743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.original_language))", "score": -0.5025231965410057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,98337295), movie.title),movie.title))", "score": -0.5533830641361419, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.release_date))", "score": -0.553888989292318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.budget),movie.budget))", "score": -0.5796023129078094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.original_language),movie.title))", "score": -0.5974176420422737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,98337295), movie.title),movie.budget))", "score": -0.6753783865424339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.budget))", "score": -0.6761555645134649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.release_date),movie.title))", "score": -0.690590907499427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,98337295), movie.title),movie.title))", "score": -0.6933901427837554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.original_language),movie.budget))", "score": -0.7194129644485656, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))", "score": -0.032746938355558086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,440603537), movie.vote_count),movie.vote_count))", "score": -0.34517971921741264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,440603537), movie.vote_count),movie.vote_count))", "score": -0.45880292106448906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,440603537), movie.vote_count),movie.vote_count))", "score": -0.49380804348766105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))", "score": -0.5211692162847612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,440603537), movie.vote_count),movie.vote_count))", "score": -0.5746912228132715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,440603537),getData(movie),movie.id,has_keyword.movie_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.6149725139666878, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,440603537),getData(movie),movie.id,has_keyword.movie_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.6297374232232896, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,440603537),getData(movie),movie.id,movie.id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.6732384424055069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.title),movie.vote_count))", "score": -0.721725313058414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,440603537), movie.vote_count),movie.vote_count))", "score": -0.7318939392644097, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_average),movie.vote_count))", "score": -0.7538113874106784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,440603537), movie.vote_count),movie.vote_count))", "score": -0.7719963060881128, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), person.death_day),movie.vote_count))", "score": -0.7833163422255893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies who have received a higher revenue than 440603537?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), keyword.name),movie.vote_count))", "score": -0.791402785172977, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,440603537), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.44424511137591927, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4460887244757041, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4499214217118705, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4517650348116553, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.46270363649292395, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4645472495927087, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4683799468288752, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.47022355992865994, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4790774442406245, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.48092105734040924, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.4847537545765757, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.48659736767636047, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.49753603344128655, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,Andrea Raffaghello), movie.id),oscar.number)", "score": -0.49901618672059206, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}, {"orig_question": "What was the average oscar nominee vote for Andrea Raffaghello", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,Andrea Raffaghello), oscar.id),oscar.number)", "score": -0.49937964654107136, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,Andrea Raffaghello),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.02855353276390815, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.40843444068013923, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_count))", "score": -0.5000721508185961, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,65), movie.vote_average),movie.vote_average))", "score": -0.5195186388227739, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,65), movie.vote_average),movie.vote_average))", "score": -0.628288443062047, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,65), movie.vote_average),movie.vote_average))", "score": -0.6380545680658543, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))", "score": -0.6872822965087835, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_count),movie.vote_average))", "score": -0.7008427567561739, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,65), movie.vote_average),movie.vote_average))", "score": -0.7220586490366259, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.runtime))", "score": -0.7393057042281725, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,65), movie.vote_average),movie.vote_average))", "score": -0.769547934505681, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.popularity))", "score": -0.7701865130584338, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.status))", "score": -0.781698732964287, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), oscar.year),movie.vote_average))", "score": -0.8042419142802828, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.title))", "score": -0.8285098963897326, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.08584007417537216, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.13724882755874326, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.21354737630042453, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.2145235408872689, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Angola), company.name),company.name))", "score": -0.21536081708610394, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3502557053239586, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola),getData(movie),production_company.company_id,company.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3682219295823292, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id), company.name),company.name))", "score": -0.37791105472882297, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),production_company.company_id,production_company.movie_id), company.name),company.name))", "score": -0.3789124979574586, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3951418240382843, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),company.name,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.40132365020143607, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4074820798462293, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Angola), company.name),company.name))", "score": -0.42267071814839496, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,production_company.movie_id),movie.title,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4258752345456694, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),genre.name))", "score": -0.46663068762960935, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,!=,Bluegrass Films),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.vote_count),movie.release_date))", "score": -0.09041084070831026, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,!=,Bluegrass Films),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.revenue),movie.release_date))", "score": -0.22216198536723603, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))", "score": -0.22802722257363114, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))", "score": -0.24537434626002155, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.vote_count),movie.release_date))", "score": -0.3193915331929843, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),keyword.name,=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))", "score": -0.36254595319022165, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),keyword.name,!=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))", "score": -0.37989307687661206, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,Bluegrass Films),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.vote_count),movie.release_date))", "score": -0.3981779784281962, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.vote_count,!=,Bluegrass Films),movie.vote_count),movie.release_date))", "score": -0.3992458635207496, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,!=,Bluegrass Films),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.vote_average),movie.release_date))", "score": -0.39933370189629047, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,!=,Bluegrass Films),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.death_day),movie.release_date))", "score": -0.4034406913664369, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,!=,Bluegrass Films),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,company.name),movie.vote_count),movie.release_date))", "score": -0.42030528789214605, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.revenue),movie.release_date))", "score": -0.4245952448852448, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id),movie.vote_count),movie.release_date))", "score": -0.42969409390240815, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum vote count that was not produced by company Bluegrass Films?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Bluegrass Films),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id),movie.vote_count),movie.release_date))", "score": -0.4512652789109283, "correct_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,!=,Bluegrass Films),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.vote_count),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.1555349792324705, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.1841478824419565, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.23426542313282547, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.24713485340099903, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.25076652198817667, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.282877606880839, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.29163970943819406, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.32874369329644626, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.release_date),movie.title))", "score": -0.33820537991213306, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.34889233228846367, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.3546266803972366, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3553927324082186, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3609273498906619, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3621978789582451, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(crew),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.3727504154736974, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.04519360030826647, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.3475371076056035, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.4033374910807586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.42604111025866587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.4275144429340967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.43551407118873336, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>,17.7091),movie.original_language), movie.original_language))", "score": -0.44377617179998197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.5052261451214813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.5204144440959895, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.5583022909650011, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5625213053944226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,17.7091), movie.original_language),movie.original_language))", "score": -0.5825058595073642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),language.name))", "score": -0.6087096109188292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6302383309846784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,17.7091),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.640886191026804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.10155890465830453, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.runtime,=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.2574984836683143, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.48932692178641446, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.48954721124027856, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Spider-Man 2), oscar.year),movie.runtime))", "score": -0.5420335415110458, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,Spider-Man 2), movie.id),movie.runtime)", "score": -0.6105405114033833, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(distinct(filter(getData(movie),movie.release_date,=,Spider-Man 2), movie.id))", "score": -0.6243268457280265, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.6283025923476089, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Spider-Man 2), movie.id),movie.runtime))", "score": -0.6372489217028487, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Spider-Man 2), movie.release_date),movie.runtime))", "score": -0.6421956899866927, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.6452665007964242, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.runtime,<,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.6454867902502883, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Spider-Man 2), person.birth_day),movie.runtime))", "score": -0.64800934822415, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,Spider-Man 2), movie.id),movie.runtime)", "score": -0.6557925552836912, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.6626436650112737, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),oscar.category,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.20109115084134485, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2677930348672886, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),genre.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.28862689717086, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,!=,Bangkok, Thailand), movie.title),movie.title))", "score": -0.2951191139232964, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),language.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.29582063219167354, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.29605383485225556, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),genre.name,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2991984927773941, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3056265885540001, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),keyword.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.30848139247267975, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),company.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3260764091696235, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3333938160269266, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),oscar.category,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3472006704476547, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),country.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.34923396318267874, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,!=,Bangkok, Thailand), movie.title),movie.title))", "score": -0.3503476707064006, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),genre.name,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.355328796148532, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,m),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.1374417630701554, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,m),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.18335978684501986, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,=,directing), person.death_place),person.death_place))", "score": -0.19219912095001943, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.23015765011597128, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,directing),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.28387673099409294, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,m),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.30607039422269383, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,m),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,directing),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.3182682324932375, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,m),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.3357321750462804, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,m),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.3417399163410508, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,directing),getData(person),oscar_nominee.movie_id,movie.id),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.34579500974912464, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,m),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.3749767116615919, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,=,m), person.death_day),person.death_place))", "score": -0.3861782962518412, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,directing),filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),person.birth_place,!=,m),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3911026381027967, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,m),filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),person.birth_place,=,m),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.4029875184217534, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there for m that were nominated in the oscar category directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,directing),filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),person.death_place,!=,m),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.4182112179675261, "correct_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id),person.gender,=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.01494015846401453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.4550410278036288, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))", "score": -0.5017854440957308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),movie.original_language,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5349218257290775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5617351699372721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),movie.original_language,!=,no),getData(movie),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5863397147006602, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.vote_average),movie.vote_count))", "score": -0.6302792921196669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.6507910542444854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),movie.original_language,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.iso_639_1,movie.id), movie.vote_count),movie.vote_count))", "score": -0.6673034631748771, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_average),movie.vote_count))", "score": -0.6965568371560501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.7155004503438249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,no), movie.vote_count),movie.vote_count))", "score": -0.7219811441609636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.7459465277788695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), person.death_day),movie.vote_count))", "score": -0.7477114095818251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.vote_count))", "score": -0.7584951415192336, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.33782099140335825, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),oscar.category))", "score": -0.35887710062701733, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),oscar.number))", "score": -0.38770502520534306, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.original_language,=,en), oscar.category),oscar.category))", "score": -0.3942350478095433, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.original_language,=,en), oscar.category),oscar.category))", "score": -0.3971900542356335, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), oscar.category),movie.title))", "score": -0.4042274713637827, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.original_language,=,en), movie.title),oscar.category))", "score": -0.4140628337868827, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.original_language,=,en), movie.title),oscar.category))", "score": -0.41701784021297295, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.4208950046638268, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),language.name,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.42182515722111774, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), oscar.category),oscar.category))", "score": -0.42528358058744176, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.original_language,=,en), oscar.category),oscar.number))", "score": -0.43148613376029266, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.original_language,=,en), oscar.category),oscar.number))", "score": -0.43444114018638286, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,en),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),oscar.category))", "score": -0.44195111388748587, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}, {"orig_question": "Are there movies with an oscar in an a original language in English in the oscar categories?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),language.name,=,en),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),oscar.category))", "score": -0.4428812664447768, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.original_language,=,en), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,7.4),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.14759054542015976, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,7.4),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.22369052989362118, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.number,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.2662206412328701, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.number,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.2768259752370095, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,7.4),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.2834287412150814, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,>=,7.4),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.29696997887417825, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.number,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.3071954828134105, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.vote_count,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3078961826851841, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.vote_count,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_nominee.oscar_id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3144911861090656, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.number,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.31780081681754996, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,7.4),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3299100932828061, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,7.4),getData(oscar_winner),movie.id,has_keyword.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3363173597097617, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.34391547546648316, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.3517685985738616, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,7.4),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.36516026142051466, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))", "score": -0.04925034969346598, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.death_day), person.death_day))", "score": -0.3656691116921138, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,f), person.death_day),person.death_day))", "score": -0.4517163534765132, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_place))", "score": -0.479571504809428, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,f), person.death_day),person.death_day))", "score": -0.4848164816503413, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),movie.revenue))", "score": -0.4898474051733501, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.5368138983030804, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_day))", "score": -0.5693831046228297, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),genre.name,=,f), person.death_day),person.death_day))", "score": -0.6761003931169398, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.death_day), person.birth_day))", "score": -0.6874115271202754, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.death_day))", "score": -0.6897631486062892, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_place),person.death_day))", "score": -0.690553285588976, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.death_day), person.death_place))", "score": -0.7015667361847591, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,f),person.death_day), person.death_day))", "score": -0.7448163916997146, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),cast.person_id))", "score": -0.7660404577036388, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.popularity))", "score": -0.08015268687449861, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.popularity,>,10.521),movie.popularity), movie.id))", "score": -0.2847206269216258, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.revenue))", "score": -0.44783128071867395, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.revenue),movie.popularity))", "score": -0.46482312977605034, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.popularity,>,10.521),movie.popularity), movie.revenue))", "score": -0.5070495952677447, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.vote_average),movie.popularity))", "score": -0.512331131103565, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.popularity,>,10.521),movie.popularity), movie.popularity))", "score": -0.5264811266970355, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.vote_average))", "score": -0.5473471658333438, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.id),movie.popularity))", "score": -0.560452821853687, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.id))", "score": -0.6171180682285922, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.release_date))", "score": -0.6309869961842196, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.release_date),movie.popularity))", "score": -0.6383097201614873, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.popularity,>,10.521),movie.popularity), movie.release_date))", "score": -0.6760405053209979, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>=,10.521), movie.popularity),movie.popularity))", "score": -0.701642992629786, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,10.521), movie.popularity),movie.popularity))", "score": -0.7476698874525027, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),language.name))", "score": -0.1646774988429271, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.17851634456305318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,6.24827),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2531650634081584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,6.24827),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.2555161174727018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),country.name))", "score": -0.2884521279109492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.300715033776361, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.31455387949648705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id),movie.popularity,<,6.24827), language.name),language.name))", "score": -0.3755349454104381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),genre.name))", "score": -0.3799416605493599, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.38937379113056414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,6.24827), language.name),language.name))", "score": -0.39528458645652736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,genre.id),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),language.name))", "score": -0.3961497864908677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),spoken_language.iso_639_1))", "score": -0.39804297156359, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),language.name))", "score": -0.4006481485254923, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.4035643503516217, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Fritz Rasp),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.17299407341728387, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Fritz Rasp),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.20495215139012968, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.26514667412463344, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Fritz Rasp),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.revenue))", "score": -0.30461619461337014, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Fritz Rasp),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.30679219496526494, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.31625715196435666, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Fritz Rasp),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.3251788970248357, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.32657762426452364, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,Fritz Rasp),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.339127320985415, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,=,Fritz Rasp),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.revenue))", "score": -0.34274338460926207, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),language.name,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.34445992678145365, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.3490518360716932, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),keyword.name,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.3551342176028985, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,Fritz Rasp), movie.revenue),movie.revenue))", "score": -0.35805213931258045, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "How much revenue did movies generate in which Fritz Rasp was part of the cast?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Fritz Rasp),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.3644355237107404, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Fritz Rasp),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))", "score": -0.0723307704047329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_average),movie.vote_count))", "score": -0.21530157825509377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,130), movie.vote_count),movie.vote_count))", "score": -0.4409740747378237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,130), movie.vote_count),movie.vote_count))", "score": -0.45161466612080403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,130), movie.vote_count),movie.vote_count))", "score": -0.5330453099177248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_average))", "score": -0.535292810151077, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))", "score": -0.5433218496327754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.revenue),movie.vote_count))", "score": -0.5692603190855152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,130), movie.vote_count),movie.vote_count))", "score": -0.5735377253458864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,130), movie.vote_average),movie.vote_count))", "score": -0.5839448825881846, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,130), movie.vote_average),movie.vote_count))", "score": -0.5945854739711649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,130), movie.vote_count),movie.vote_count))", "score": -0.6450779022143251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,130), movie.vote_average),movie.vote_count))", "score": -0.6760161177680857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_average),movie.vote_average))", "score": -0.6782636180014379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.revenue))", "score": -0.692470794865585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.10040833518599114, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.21880634257395176, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2202645142476929, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.22275579503504286, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.224213966708784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.23345134775706178, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.23650994215170718, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2508543395249625, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(has_keyword),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.26613606240430354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(has_keyword),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.27008551486539467, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2719106693969354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.29021055753521713, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.29166876659248614, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.2941600473798361, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.2956182190535772, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.0897987474389356, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.12157056150364619, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.14354960628176897, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2075994714241219, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.23428124594346916, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))", "score": -0.23717212864407367, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2879766718740472, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(has_keyword),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.29203947143794673, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3038583730526429, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3340235163344194, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.34490390101252294, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3662677294078377, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id), movie.title),movie.title))", "score": -0.37586624399460633, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.3762607656424456, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.4054240885540754, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)", "score": -0.05310495124138367, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<=,732), movie.id),movie.popularity)", "score": -0.25691815834523096, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.popularity),movie.popularity))", "score": -0.6149024703845498, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>,732), movie.id),movie.popularity)", "score": -0.6331087166887391, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(filter(getData(movie),movie.vote_count,>=,732),movie.popularity)", "score": -0.642124194477687, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,732), movie.popularity),movie.popularity))", "score": -0.7792140544697759, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.vote_count,>=,732),getData(movie),movie.revenue,movie.id), movie.id),movie.popularity)", "score": -0.7953048395808388, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.vote_average)", "score": -0.8059708611093725, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.popularity),movie.popularity)", "score": -0.8093796814877423, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.popularity),movie.popularity))", "score": -0.8520171682430373, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.revenue)", "score": -0.8711341558881882, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(filter(getData(movie),movie.vote_count,<=,732),movie.popularity)", "score": -0.8959193309718246, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),person.death_day,>=,732), movie.id),movie.popularity)", "score": -0.896840510630127, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,732), movie.id),movie.popularity)", "score": -0.9041821972569433, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.id)", "score": -0.9418827454499996, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.033252686711826955, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.5285226779358878, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(filter(getData(movie),movie.original_language,=,fr),movie.vote_count)", "score": -0.5701107673810757, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,fr), movie.vote_count),movie.vote_count))", "score": -0.610384390114632, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.revenue)", "score": -0.6238534348232787, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.6314507449769129, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,fr), movie.vote_count),movie.vote_count))", "score": -0.6430627536174143, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.6575939761808051, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_average)", "score": -0.7084375749399707, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.budget)", "score": -0.7687584207685075, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.vote_average),movie.vote_count)", "score": -0.8160007213361831, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,fr), movie.id),movie.vote_count)", "score": -0.8211536449004728, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.revenue)", "score": -0.8426731121336921, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.8453493544110667, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.runtime)", "score": -0.8550702999252989, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.09135630395380535, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.14038412293901917, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,rock opera), movie.id),movie.popularity)", "score": -0.14956125180399926, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(merge(filter(getData(keyword),keyword.name,=,rock opera),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.315686279856109, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.popularity)", "score": -0.3217633051746098, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.popularity)", "score": -0.33369150922669205, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera), movie.id),movie.popularity)", "score": -0.36037601667796737, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3684495776391126, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3776726836296053, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,rock opera), movie.popularity),movie.popularity)", "score": -0.39772917989324147, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),filter(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),movie.title,=,rock opera),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4054350073977167, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4179337522479805, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4486903707381812, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity)", "score": -0.4511576326649713, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4645629804846545, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.07070235729691765, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.20663641904534702, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))", "score": -0.2327529601182563, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2589686583192438, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2864561818850314, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.2866552734190721, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.30383842897236923, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))", "score": -0.31437638047972, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.356347126822184, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3658170194339553, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.40052948570835206, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,380), country.name),country.name))", "score": -0.4034936270607284, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),company.name))", "score": -0.4118075987559304, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(company),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4179545001466109, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.4248654592209019, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.death_day),person.death_day))", "score": -0.16061332494427916, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1988-02-28), person.death_day),person.death_day))", "score": -0.1703112539689755, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))", "score": -0.1919937399070477, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.death_day),person.birth_day))", "score": -0.4737850813980913, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1988-02-28), person.death_day),person.birth_day))", "score": -0.48348301042278763, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.birth_day))", "score": -0.5051654963608598, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1988-02-28), person.death_day),person.death_day))", "score": -0.528645080034039, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,1988-02-28),person.death_day), person.death_day))", "score": -0.5605064200499328, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.death_day),person.death_day))", "score": -0.5894342777173733, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1988-02-28),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_day),person.death_day))", "score": -0.6057291590781758, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,1988-02-28),person.death_day), person.death_day))", "score": -0.6319478320219787, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.6357644288655138, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.6454623578902101, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.6671448438282823, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,1988-02-28), person.death_day),person.death_day))", "score": -0.6724159833829617, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.09646861614428909, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.19082536709632197, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.budget,>=,13000000), person.death_place),person.death_place))", "score": -0.21420072036077203, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.24621090969815615, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3027660476320663, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3030383656506556, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3061427692171001, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,13000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3298029298535549, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3347182896632682, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.3402062784839089, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),person.death_place), person.death_place))", "score": -0.3683914626813112, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.3790809032222914, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3844639720772627, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(person),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.38701392551412295, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,cast.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.39238296857693106, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.16018680097079788, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.22642712625062844, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,has_keyword.keyword_id), person.gender),person.gender))", "score": -0.2565524937859683, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar_winner.person_id,has_keyword.keyword_id), person.gender),person.gender))", "score": -0.27266839455331543, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.290868995624547, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,has_keyword.movie_id), person.gender),person.gender))", "score": -0.2965962057092843, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar_winner.person_id,has_keyword.movie_id), person.gender),person.gender))", "score": -0.31271210647663145, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(filter(getData(movie),keyword.name,!=,national park),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.31305995329426134, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(crew),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.3300248353026847, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(filter(getData(movie),keyword.name,!=,national park),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.35519907998821604, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),oscar_winner.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.35735760542870615, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),production_country.iso_3166_1,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.36033649695959863, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(getData(has_keyword),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))", "score": -0.36080576453952395, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,keyword.name), person.gender),person.gender))", "score": -0.3621753581724535, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(getData(has_keyword),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))", "score": -0.3658341526069061, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.06252869833406294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,140), movie.vote_count),movie.vote_count))", "score": -0.2598634572714218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,140), movie.vote_count),movie.vote_count))", "score": -0.3202635856359848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,140), movie.vote_count),movie.vote_count))", "score": -0.37512799222167814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.6188411625116714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,140), movie.vote_count),movie.vote_count))", "score": -0.6635146649568924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_average),movie.vote_count))", "score": -0.6743034428000101, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.revenue),movie.vote_count))", "score": -0.6745334571241983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,140), movie.vote_count),movie.vote_count))", "score": -0.7107256563394913, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), person.death_day),movie.vote_count))", "score": -0.7962734406828531, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,140), movie.vote_count),movie.vote_count))", "score": -0.7999880109346122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_average))", "score": -0.8110356019824394, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,140), movie.id),movie.vote_count)", "score": -0.8173301287955568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.8239668106107274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.revenue))", "score": -0.8417230533450493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,93820758),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.13040750657124564, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,<,93820758),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.19286804378870456, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,93820758),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.19793951941453697, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue,<,93820758), movie.revenue),movie.revenue))", "score": -0.20659638914454354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,93820758),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.revenue),movie.revenue))", "score": -0.26296505630225925, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue,<,93820758), movie.revenue),movie.revenue))", "score": -0.3194979284776875, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue,<,93820758), movie.revenue),movie.revenue))", "score": -0.33382260964180677, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,93820758),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id), movie.revenue),movie.revenue))", "score": -0.33573223301596455, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,93820758),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.genre_id,movie.id),genre.id,has_genre.genre_id), movie.revenue),movie.revenue))", "score": -0.37828340564434015, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget,<,93820758), movie.revenue),movie.revenue))", "score": -0.38294823595695787, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,93820758),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.revenue),movie.vote_count))", "score": -0.3868052983206538, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,93820758),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.revenue),movie.revenue))", "score": -0.3879900361042887, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,93820758),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.revenue),movie.budget))", "score": -0.4018911536249099, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.4033198049819207, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Does any movie with a revenue below 93820758 have a genre?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,93820758),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.budget),movie.revenue))", "score": -0.40483677507263244, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,93820758),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-08-02),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.17143568595931297, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,<,1975-08-02),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.20449676255950894, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,<,1975-08-02), movie.title),movie.release_date))", "score": -0.21919132533386396, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.24253859311238823, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-08-02),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.2555765172192513, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,<,1975-08-02),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.2752906400258486, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-08-02),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,person.id), movie.title),movie.release_date))", "score": -0.27644259551347145, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-08-02),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.2817763754008996, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-08-02),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.31697213016184145, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,person.id), movie.title),movie.release_date))", "score": -0.3254471051381679, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,<,1975-08-02),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.3328930173718384, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.33684532375814435, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-08-02),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.33696669895335246, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,<,1975-08-02), movie.title),movie.title))", "score": -0.34136156306945664, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "In how many movies were people part of the crew who died before 1975-08-02?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.35959389774686396, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,<,1975-08-02),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.1441713750877546, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.19516729401582344, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.24754790024785192, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.26090784523023003, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.3048806671265002, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.34339635200091534, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.3484498859754915, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.3900756646360418, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.3926986637470545, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.42327829730446753, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.popularity))", "score": -0.4256727465768475, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.44797645015263104, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.revenue),movie.status))", "score": -0.4504874475372029, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),getData(movie),country.iso_3166_1,movie.id),movie.budget),movie.status))", "score": -0.4527087190277662, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.46222564453173776, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,!=,Post Production), company.name),company.name))", "score": -0.0728443912687158, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))", "score": -0.12949516166624941, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,!=,Post Production), company.name),company.name))", "score": -0.2513812659391899, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,!=,Post Production), company.name),company.name))", "score": -0.3387205185477097, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,!=,Post Production),movie.title,!=,Post Production), company.name),company.name))", "score": -0.34598700005141614, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.name,!=,Post Production), company.name),company.name))", "score": -0.35204858221697855, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,!=,Post Production), company.name),company.name))", "score": -0.3596223340100274, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Post Production),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37606027094168515, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,Post Production), company.name),company.name))", "score": -0.38158284859247743, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),person.name,!=,Post Production), company.name),company.name))", "score": -0.38491738004507103, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,!=,Post Production), company.name),company.name))", "score": -0.39221031479946655, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,!=,Post Production), company.name),company.name))", "score": -0.4024819115523625, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,!=,Post Production), company.name),company.name))", "score": -0.4048050903344994, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,!=,Post Production), company.name),oscar.category))", "score": -0.4209914626188177, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,!=,Post Production), company.name),movie.title))", "score": -0.4517951595257339, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.19386560042350146, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.2052366290010306, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,!=,3854), company.name),company.name))", "score": -0.27756805180442273, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),oscar.number))", "score": -0.31495281022345073, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),oscar.number))", "score": -0.3172138283501668, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,!=,3854), company.name),company.name))", "score": -0.3302718176548216, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),person.birth_place))", "score": -0.3310462725154954, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,!=,3854), oscar.category),company.name))", "score": -0.34994533280675355, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,person.id), company.name),company.name))", "score": -0.3527896739268956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,!=,3854), company.name),oscar.number))", "score": -0.3593480073756058, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),keyword.name))", "score": -0.3646887156391239, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),person.name))", "score": -0.36621856762190247, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.36625803349190034, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),oscar.sub_category))", "score": -0.3676526222199465, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,3854),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),country.name))", "score": -0.3776643526736166, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.12463165243210048, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.18249834339346827, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.1962471759697921, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2323717372266285, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.2349899464953597, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2640359508521039, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.2659139695787936, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.32498408383520383, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.3317333130739048, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.35069331051852376, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.runtime),movie.runtime)", "score": -0.3535714176031901, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id), movie.release_date),movie.runtime)", "score": -0.3604821044381929, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.3636932995378963, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.37491607642425356, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),genre.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.3931271522941209, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42), movie.status),movie.status))", "score": -0.2097683729269065, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(getData(person),oscar.number,<,42), movie.status),movie.status))", "score": -0.2392519001441542, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,<,Camera), movie.status),movie.status))", "score": -0.2679276633895712, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,42),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.3138953138770635, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),crew.movie_id,movie.id),oscar.category,<,Camera), movie.status),movie.status))", "score": -0.323497410748009, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,42),getData(oscar_nominee),oscar.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.3239182791701568, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),oscar.id,crew.person_id),oscar.number,<,42), movie.status),movie.status))", "score": -0.3332628907786557, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(getData(oscar),oscar.number,<,42), movie.status),movie.status))", "score": -0.34473221344524063, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,42),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.34636140374698793, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,<,42),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.35147401766891007, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,42),getData(oscar_winner),oscar.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.3563843502119789, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<,42), movie.status),movie.status))", "score": -0.36821985773881927, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.number,<,42), movie.status),movie.status))", "score": -0.3746843819099013, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Camera),oscar.category,<,42), movie.status),movie.status))", "score": -0.38207405476056305, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),crew.movie_id,movie.id),oscar.category,<,42), movie.status),movie.status))", "score": -0.3861609331830883, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))", "score": -0.10132255491043907, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,The Croods), movie.budget),movie.budget))", "score": -0.25588830646302085, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,The Croods), movie.budget),movie.budget))", "score": -0.304826521241921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))", "score": -0.4476705407105328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.revenue))", "score": -0.515956796167302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.revenue),movie.budget))", "score": -0.5725251766125439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,The Croods), movie.budget),movie.budget))", "score": -0.5809293602906109, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,The Croods), movie.budget),movie.budget))", "score": -0.6285044186952291, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,The Croods), movie.budget),movie.budget))", "score": -0.6505258892975689, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,The Croods), movie.budget),movie.revenue))", "score": -0.6705225477198837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.number,=,The Croods), movie.budget),movie.budget))", "score": -0.704951786363381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,The Croods), movie.budget),movie.budget))", "score": -0.7094730966928182, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,The Croods), movie.budget),movie.revenue))", "score": -0.7194607624987839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,=,The Croods), movie.id),movie.budget)", "score": -0.7227262391389807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,The Croods), movie.revenue),movie.budget))", "score": -0.7270909281651257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.1453842941118637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.title),movie.title))", "score": -0.2144858462195161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.2421794486127501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,no), movie.title),movie.title))", "score": -0.2617511622492059, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.2645017366437979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,no), movie.title),movie.title))", "score": -0.2960403450274295, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),movie.original_language,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3102978704563438, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.title),movie.title))", "score": -0.31041106370921184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3326201584873916, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.35842756993093067, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,no),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3948353397983936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.3999533010490172, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.4155496742350806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,no), movie.title),movie.title))", "score": -0.47258293176128063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.4983810274534335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.18643666096426065, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,1984),movie.runtime),movie.title))", "score": -0.30164030187905067, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.sub_category,=,1984),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.316523693732226, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,1984),movie.runtime),movie.title))", "score": -0.31939277467330457, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,1984),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.3245229348426608, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,1984),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.34345194695657133, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,1984),movie.runtime),movie.title))", "score": -0.36433401960638295, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.36848887508245676, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,>=,1984),movie.runtime),movie.title))", "score": -0.3717053678693708, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,1984),movie.runtime),movie.title))", "score": -0.376229708758565, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1984),movie.runtime),movie.title))", "score": -0.38208649240063686, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1984),movie.runtime),movie.title))", "score": -0.38945784066362465, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.40689670622932345, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.runtime),movie.title))", "score": -0.4168877730052504, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}, {"orig_question": "What ist the movie title wit the maximum runtime with an oscar since 1984?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,1984),movie.runtime),movie.title))", "score": -0.4228718352225134, "correct_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1984),movie.runtime),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,2.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.number),oscar.number))", "score": -0.12118558968042763, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))", "score": -0.2125198128653058, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.category),oscar.number))", "score": -0.242667955119823, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_average,>=,2.3),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.24504370931194688, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,2.3),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.24814799241362367, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>=,2.3), oscar.number),oscar.number))", "score": -0.25661102200290137, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,2.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.number))", "score": -0.26455928647617166, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>=,2.3), oscar.category),oscar.number))", "score": -0.28182824373820253, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,2.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.number),oscar.number))", "score": -0.2871596866220375, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,2.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.number),oscar.category))", "score": -0.29881208683875077, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,2.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), oscar.number),oscar.number))", "score": -0.3143201357572571, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,2.3),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,person.id), oscar.year),oscar.number))", "score": -0.3534741468410128, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_average,>=,2.3),getData(oscar),oscar_winner.oscar_id,person.id), oscar.year),oscar.number))", "score": -0.357068243570326, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.category))", "score": -0.36052333338262554, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}, {"orig_question": "How many oscar winner are there where the movie vote average must be at least 2.3?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,2.3),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.person_id,oscar.id), oscar.year),oscar.number))", "score": -0.363011626192518, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_average,>=,2.3), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,172),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2298098471171508, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))", "score": -0.2791537075234493, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,172),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.death_place))", "score": -0.2864678467207598, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,172), person.birth_place),person.birth_place))", "score": -0.287321323674405, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.death_place))", "score": -0.2988085540581379, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.death_place),person.birth_place))", "score": -0.30083921584274304, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.death_place),person.death_place))", "score": -0.32049406237743155, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id),movie.runtime,>,172), person.birth_place),person.birth_place))", "score": -0.3294984154643945, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id),movie.runtime,>,172), person.death_place),person.birth_place))", "score": -0.34130931507679496, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id),movie.runtime,>,172), person.birth_place),person.death_place))", "score": -0.34524019755295476, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id),movie.runtime,>,172), person.death_place),person.death_place))", "score": -0.3570510971653552, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,172),getData(crew),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3953129934121834, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,172),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.death_place),person.birth_place))", "score": -0.40728274683160925, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,172),getData(cast),movie.id,crew.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.414580977820441, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}, {"orig_question": "Where were the actors born, who played in a movie which runs longer than 172 minutes?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172),person.name,>,172), person.birth_place),person.birth_place))", "score": -0.4467730689628585, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,172), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), person.death_place),oscar.number))", "score": -0.32424228675723976, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),oscar.number))", "score": -0.328059084972062, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1450),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),oscar.number))", "score": -0.34287602624326363, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3584447182643543, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), person.death_place),person.death_place))", "score": -0.36068053030366565, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), person.death_place),movie.budget))", "score": -0.36461891743991337, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1450),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3732616595355559, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,<,1982-04-27), person.death_place),oscar.number))", "score": -0.37688540396737713, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,>,1982-04-27), person.death_place),oscar.number))", "score": -0.38410364210209036, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), movie.budget),oscar.number))", "score": -0.3937506478475463, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(person),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.death_place),oscar.number))", "score": -0.4958421676675281, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(person),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.death_place),person.death_place))", "score": -0.5027163308493323, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(person),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.death_place),oscar.number))", "score": -0.5095401851995855, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1450),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,person.id),merge(getData(person),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.death_place),oscar.number))", "score": -0.510571810411848, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(person),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.death_place),person.death_place))", "score": -0.5164143483813898, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.19395623769898954, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.year,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.20776120169517698, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>=,1960), movie.title),movie.title))", "score": -0.24920667946767663, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>=,1960), movie.title),movie.title))", "score": -0.2636430582739851, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.27144209570093725, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.2767830712871676, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.29116442764776496, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.2912194500934761, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.year,!=,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.30496939164395237, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,!=,1960), movie.title),movie.title))", "score": -0.32249750885610046, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),person.name,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3261572710031805, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3336152916664778, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,!=,1960), movie.title),movie.title))", "score": -0.33693388766240895, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3399622588113797, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,=,1960), movie.title),movie.title))", "score": -0.3420289405025198, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)", "score": -0.08509024122086362, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,189), movie.id),movie.budget)", "score": -0.36554254094277944, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,189), movie.id),movie.budget)", "score": -0.3684065701007528, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,189), movie.budget),movie.budget))", "score": -0.4090802324062679, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,189),movie.budget)", "score": -0.49663327929105616, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,189), movie.budget),movie.budget))", "score": -0.5952339873038, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,189), movie.budget),movie.budget))", "score": -0.6626027719175909, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<=,189),movie.budget)", "score": -0.6684963677010655, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.runtime,<,189),getData(movie),movie.budget,oscar_nominee.movie_id), movie.id),movie.budget)", "score": -0.7344533576800613, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.revenue)", "score": -0.7498334151278923, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,189), movie.id),movie.budget)", "score": -0.7664911378178431, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,189), movie.budget),movie.revenue))", "score": -0.7702747275179718, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,189), movie.revenue),movie.budget))", "score": -0.8187806111818645, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,189), movie.budget),movie.budget))", "score": -0.8453346353344386, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,189), movie.budget),movie.budget))", "score": -0.8505080847826321, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.12863315334027992, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.1562450830385485, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.gender),person.gender))", "score": -0.17265161880008065, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.sub_category,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.22541883552411038, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.name,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.26825523151920017, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.gender),person.gender))", "score": -0.28242202717232706, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.30066597745421486, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Cheap Thrills),person.gender,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.3028758293281548, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.gender))", "score": -0.3311834940713321, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.33949393358944147, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.gender))", "score": -0.36112903132600793, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.37146665336240464, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.39325090112182415, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),language.name,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.40238670351167505, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.40358419479726815, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime,<,105), movie.title),movie.title))", "score": -0.19252828269118274, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),movie.title))", "score": -0.2672126596702677, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<,105), movie.title),movie.title))", "score": -0.28290591771561474, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(movie),oscar_winner.oscar_id,oscar.id), movie.runtime),movie.title))", "score": -0.28448269889058425, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),movie.title))", "score": -0.28609574007473837, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(movie),oscar_winner.oscar_id,oscar.id), oscar.number),movie.title))", "score": -0.3033657792950549, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.title),movie.title))", "score": -0.31207005088071127, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(movie),oscar_winner.oscar_id,oscar.id), movie.title),movie.title))", "score": -0.3293400901010279, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime,=,105), movie.title),movie.title))", "score": -0.3306195582325558, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,=,105),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),movie.title))", "score": -0.3516329221197237, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,<,105),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.35610716252042873, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,105),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.oscar_id,oscar.id), movie.title),movie.title))", "score": -0.35952824179181936, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.36302012180371007, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.release_date),movie.title))", "score": -0.36414714660278025, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<,105), movie.title),movie.title))", "score": -0.36639155717945, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)", "score": -0.06091879985001895, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,151),movie.revenue)", "score": -0.35153630532178365, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,151), movie.revenue),movie.revenue))", "score": -0.5751931266386237, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.popularity)", "score": -0.6483827101337886, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,151), movie.id),movie.revenue)", "score": -0.7118475469714496, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue))", "score": -0.7210217238862242, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.id)", "score": -0.7373450361954882, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.budget)", "score": -0.7876576078299424, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,151), movie.id),movie.revenue)", "score": -0.792242497038421, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_count)", "score": -0.8100674786180078, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,151), movie.id),movie.revenue)", "score": -0.8206152147644639, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,151),movie.revenue)", "score": -0.8223746852545303, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,151), movie.id),movie.revenue)", "score": -0.8322506303820879, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,151),movie.popularity)", "score": -0.8366251906781031, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,151),movie.revenue)", "score": -0.8367769371213563, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),movie.status))", "score": -0.04580334198544733, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),movie.title))", "score": -0.31532438096473925, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))", "score": -0.4035270074091386, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,85), movie.status),movie.status))", "score": -0.47514073640923016, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,85), movie.status),movie.status))", "score": -0.5317371049604844, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), country.name),movie.status))", "score": -0.5653109089180361, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),production_country.movie_id))", "score": -0.6059834509796929, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,85),getData(production_country),movie.id,production_country.movie_id),getData(movie),production_country.iso_3166_1,country.iso_3166_1), movie.status),movie.status))", "score": -0.6274416922960009, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),movie.runtime))", "score": -0.6504914909310173, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,85),getData(production_country),movie.id,production_country.movie_id),getData(movie),movie.runtime,country.iso_3166_1), movie.status),movie.status))", "score": -0.6584099722907327, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),country.name))", "score": -0.6691333800263237, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.title))", "score": -0.6730480463884305, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.title),movie.status))", "score": -0.6741130486770999, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),movie.original_language))", "score": -0.681627467245562, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}, {"orig_question": "How many distinct status have movies with a runtime different than 85 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,85), movie.status),oscar.sub_category))", "score": -0.7184165864891838, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,!=,85), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(person),oscar.year,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.id),oscar.number)", "score": -0.249251923442267, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.id),oscar.number)", "score": -0.2493915191984125, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(person),oscar.category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.id),oscar.number)", "score": -0.2724366965564106, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.id),oscar.number)", "score": -0.27257629231255615, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(person),oscar.year,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), oscar.id),oscar.number)", "score": -0.27549833922634365, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), oscar.id),oscar.number)", "score": -0.2756379349824891, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(person),oscar.category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), oscar.id),oscar.number)", "score": -0.2986831123404873, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), oscar.id),oscar.number)", "score": -0.29882270809663275, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(person),oscar.sub_category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.id),oscar.number)", "score": -0.29926052310731865, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id), oscar.id),oscar.number)", "score": -0.2994001188634642, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(person),oscar.sub_category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), oscar.id),oscar.number)", "score": -0.3255069388913953, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,f),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), oscar.id),oscar.number)", "score": -0.3256465346475408, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,f), oscar.id),oscar.number)", "score": -0.35837837316206866, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,f), oscar.id),oscar.number)", "score": -0.3823351535906271, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,f),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3867904326901443, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.06423809737783662, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.14234556070640175, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.20965742620745342, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>,0.545825), company.name),company.name))", "score": -0.2351582478956387, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.35420025907772906, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3719302128855291, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.39375103736905565, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.39531711656326046, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.39832613333478983, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.41725841621626053, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(distinct(extractValues(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name), company.name))", "score": -0.4247064422168, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4422605494881205, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4494643646258589, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id), company.name),company.name))", "score": -0.45026117919273484, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.46008864385421594, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.06727994383196555, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(movie),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.1712773280851493, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Aloha Pictures), movie.id),movie.runtime)", "score": -0.2573881929836835, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.runtime),movie.runtime)", "score": -0.332099071451227, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(genre),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3547083384442339, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(country),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.35654309552282865, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),movie.title,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.36733294117116694, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Aloha Pictures), movie.runtime),movie.runtime)", "score": -0.395581465242669, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.id),movie.runtime)", "score": -0.39812904086546647, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,Aloha Pictures),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.4002248951610919, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.40240081975699915, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4050996434430272, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_company.company_id), movie.id),movie.runtime)", "score": -0.4081539768897847, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(filter(getData(company),oscar.category,=,Aloha Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4090698446426803, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Aloha Pictures?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,Aloha Pictures),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4124681326399693, "correct_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Aloha Pictures), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Switzerland), movie.id),movie.vote_average)", "score": -0.11182512077083767, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Switzerland), movie.id),movie.vote_average)", "score": -0.1918125034730885, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Switzerland), movie.id),movie.vote_average)", "score": -0.20425574985763303, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,Switzerland), movie.id),movie.vote_average)", "score": -0.5547569895216768, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),country.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.6010957050592663, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.status,=,Switzerland), movie.id),movie.vote_average)", "score": -0.7001209240540641, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),production_country.movie_id,=,Switzerland), movie.id),movie.vote_average)", "score": -0.7105160078564151, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,Switzerland), movie.id),movie.vote_average)", "score": -0.7393200208058823, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),country.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.7504816367624454, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,Switzerland), movie.id),movie.vote_average)", "score": -0.7598344272988782, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),oscar.category,=,Switzerland), movie.id),movie.vote_average)", "score": -0.7768750879852855, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.tagline,=,Switzerland), movie.id),movie.vote_average)", "score": -0.8170414390671309, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Switzerland), movie.vote_average),movie.vote_average))", "score": -0.8457054344980861, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),person.gender,=,Switzerland), movie.id),movie.vote_average)", "score": -0.8459180849972099, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.homepage,=,Switzerland), movie.id),movie.vote_average)", "score": -0.8609236458909375, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))", "score": -0.03145457949358388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))", "score": -0.39231899255901226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,176), movie.vote_average),movie.vote_average))", "score": -0.43218993913251325, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,176), movie.vote_average),movie.vote_average))", "score": -0.48407220613080426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,176), movie.vote_average),movie.vote_average))", "score": -0.6001435495527403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,176), movie.vote_average),movie.vote_average))", "score": -0.6020644284399168, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_count))", "score": -0.6401791440403031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), oscar.year),movie.vote_average))", "score": -0.7176211722508015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,176), movie.vote_average),movie.vote_average))", "score": -0.743059070835443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.popularity),movie.vote_average))", "score": -0.7533135064259113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,176), movie.vote_average),movie.vote_average))", "score": -0.7722671009214537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,=,176),movie.vote_average), movie.vote_average))", "score": -0.7876546004627016, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.status))", "score": -0.788131044999318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.popularity))", "score": -0.809097396031575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of the movies with a runtime equal to 176?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,176), movie.vote_average),movie.vote_average))", "score": -0.8126630854421819, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,176), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.10314161704961548, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.15705923730344917, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.17978756554447006, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,Released), genre.name),genre.name))", "score": -0.2086905609812963, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.22419597961130913, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.24394987736167395, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.28875052027146414, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3099959117306101, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3418509594907131, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),movie.original_language,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36060936223130174, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37876013356285837, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),person.gender,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3907520619182637, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.category,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3940916806553228, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4008946834480318, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.original_language,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.44057248584860736, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.02280393101318623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.37473749879791285, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.5946591771025851, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.6243570288643241, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>,12.8674),movie.vote_average), movie.vote_average))", "score": -0.6335997244968894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_count))", "score": -0.6358289839517965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.6973823696425825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.status))", "score": -0.7557581187975302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_count),movie.vote_average))", "score": -0.7622473828778311, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.popularity))", "score": -0.7930076243173971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.status),movie.vote_average))", "score": -0.8158497803196951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8164192825606733, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8252244979194074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8268421679786115, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), oscar.year),movie.vote_average))", "score": -0.8747312419400259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))", "score": -0.10428737008789264, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,2000 ad),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.12360037820391455, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,2000 ad),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.14540911477553353, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,2000 ad),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.vote_count))", "score": -0.25880610418875033, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,2000 ad),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.27779217875617224, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.vote_count))", "score": -0.2795431787935322, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,2000 ad),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.vote_count))", "score": -0.30192925493517886, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,2000 ad),getData(movie),has_keyword.movie_id,movie.id),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3120780051195888, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,2000 ad),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3273051330499741, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,2000 ad), movie.title),movie.title))", "score": -0.33335006331557576, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.title,=,2000 ad), movie.title),movie.title))", "score": -0.35595949975217955, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad),movie.title,=,2000 ad), movie.title),movie.title))", "score": -0.35853047652909986, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.budget))", "score": -0.37626376962311503, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,2000 ad),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.budget))", "score": -0.39801512110122556, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,2000 ad),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.vote_count))", "score": -0.4157673203472066, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.08772539528631533, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Lithuania),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.22201314133241182, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.2533257189552308, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.2846469062551164, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Lithuania),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.2969324730996218, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.31938810648500554, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.33204379093112646, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.34457714033602443, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania),movie.title,=,Lithuania), movie.title),movie.title))", "score": -0.34920835002836176, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.original_language,=,Lithuania), movie.title),movie.title))", "score": -0.3495570089374297, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,Lithuania), movie.title),movie.title))", "score": -0.35984206141517405, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Lithuania),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.36681646812214863, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_company.company_id),country.name,=,Lithuania), movie.title),movie.title))", "score": -0.3690989258986685, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Lithuania), movie.title),movie.title))", "score": -0.4315648138799588, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have been produced in Lithuania?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Lithuania), movie.title),movie.budget))", "score": -0.4322920748230983, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Lithuania),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.release_date,<=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2185951185754404, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23931754925480497, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,2016-01-13),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2571752736255546, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.birth_day,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.27853575546734927, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.status,<=,Released), genre.name),genre.name))", "score": -0.27868946293036606, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),person.gender,<=,Released), genre.name),genre.name))", "score": -0.3008620387518449, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.runtime,<=,2016-01-13),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30719646461545, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),movie.runtime,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.33228732957906154, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3368159885223149, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.release_date,<=,Released),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35298931624674296, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.35347800805347074, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36004714448714864, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,<=,Released), genre.name),genre.name))", "score": -0.3607178614034445, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.status,<=,Released), genre.name),genre.name))", "score": -0.3656125688366373, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,<=,Released), genre.name),genre.name))", "score": -0.37463759154371196, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),oscar.year))", "score": -0.4146926304369033, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), oscar.category),oscar.year))", "score": -0.42092946370466994, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),oscar.year))", "score": -0.4316017371503252, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), oscar.category),oscar.year))", "score": -0.4378385704180918, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),oscar.year))", "score": -0.43795839782388096, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), oscar.category),oscar.year))", "score": -0.4466370543300638, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),oscar.year))", "score": -0.4578420434582735, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), oscar.category),oscar.year))", "score": -0.46652069996445633, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,oscar.id),oscar.category,!=,directing), movie.popularity),oscar.year))", "score": -0.47227676888615266, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,!=,directing), movie.popularity),oscar.year))", "score": -0.47258851352943715, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), oscar.sub_category),oscar.year))", "score": -0.4999250229701843, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,oscar.id), person.gender),oscar.year))", "score": -0.5042640854147721, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),oscar.year))", "score": -0.5069138993771941, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id), person.gender),oscar.year))", "score": -0.5079751420432987, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do oscar nominated movies have, except movies nominated for directing?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,directing),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),movie.popularity))", "score": -0.5118373905487317, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,directing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.12417895924761435, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.14352780012804892, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.20216483290413914, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.20941412477057034, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,special effects), person.birth_place),person.birth_place))", "score": -0.21386813052272569, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.22980038457669236, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.3397223076724234, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,company.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.34276627522079356, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special effects),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3440704434063546, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3527900392389009, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_place))", "score": -0.3630131398516751, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),filter(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.birth_place,=,special effects),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.38157643870271923, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,country.iso_3166_1),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3846220947854399, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,oscar.id),oscar.category,=,special effects), person.birth_place),person.birth_place))", "score": -0.3849701707841734, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3941729765561273, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.026189328356849728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,=,50.0736),movie.release_date), movie.release_date))", "score": -0.34485758477967465, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.release_date))", "score": -0.6108197492540057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.release_date),movie.release_date))", "score": -0.6583101076066669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7032641095102008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,50.0736), movie.release_date),movie.release_date))", "score": -0.7046001476228412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.budget))", "score": -0.7679571022272285, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7749038261354144, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,50.0736), movie.release_date),movie.release_date))", "score": -0.7998924178064044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.popularity))", "score": -0.8108387102365668, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,50.0736),movie.release_date), movie.release_date))", "score": -0.8393904609620222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.8673935714468826, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,50.0736), movie.release_date),movie.release_date))", "score": -0.8838257116258319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,50.0736), movie.release_date),movie.release_date))", "score": -0.8846124333322223, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.id),movie.release_date))", "score": -0.8926485651281837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.06989845136922668, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.3939123979471333, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,2016-12-24),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.4190762535951, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.status))", "score": -0.4224848380945332, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.4325941249302394, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),person.name))", "score": -0.43871679405492614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,<,2016-12-24),person.name), person.name))", "score": -0.4828524492913857, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))", "score": -0.4929156840480573, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), movie.vote_average),person.name))", "score": -0.5288661370686896, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.sub_category))", "score": -0.5463737479112751, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,2016-12-24), person.name),person.name))", "score": -0.5664176355749078, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.5776815048120625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,<,2016-12-24), language.name),person.name))", "score": -0.5935827773833112, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,<,2016-12-24), person.name),person.name))", "score": -0.5945857774167962, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), keyword.name),person.name))", "score": -0.6094954858235724, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.09080811244778338, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.1754180193249335, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.18548007636277206, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.26021474555132706, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.29068436493404354, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.31999939986233145, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.32433640284478316, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3322082862408105, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3493230620481886, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),company.name))", "score": -0.3496201420506006, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,production_company.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.38962370579130157, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),production_company.company_id,keyword.id), keyword.name),keyword.name))", "score": -0.390526459029538, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Colombiana),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.39399994826956575, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.39886945477231567, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.40131342942210346, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22), movie.id),movie.revenue)", "score": -0.1371107782862781, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,22), movie.id),movie.revenue)", "score": -0.14441020570989407, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,22), movie.id),movie.revenue)", "score": -0.19614008787669915, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,22), movie.id),movie.revenue)", "score": -0.2055151714059397, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,!=,22),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.27277572369385344, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(filter(getData(oscar),oscar.number,!=,22),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22), movie.id),movie.revenue)", "score": -0.28763270015373815, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,22), movie.id),movie.revenue)", "score": -0.3239304354482342, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,>,22), movie.id),movie.revenue)", "score": -0.3428162601849856, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(filter(getData(oscar),oscar.number,!=,22),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,22), movie.id),movie.revenue)", "score": -0.34879250278316026, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,<,22), movie.id),movie.revenue)", "score": -0.37566031761503926, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,22), movie.id),movie.revenue)", "score": -0.3861752452496877, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(filter(getData(oscar),oscar.category,!=,22),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22), movie.id),movie.revenue)", "score": -0.3895073356649633, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(filter(getData(movie),oscar.number,!=,22),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22), movie.id),movie.revenue)", "score": -0.3906697953245675, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22), movie.id),movie.revenue)", "score": -0.39359133132656987, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue for the movies who have been oscar nominated other than movies with the oscar number 22?", "inferred_code": "avg(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.title,!=,22),movie.revenue,!=,22), movie.id),movie.revenue)", "score": -0.42111347788751097, "correct_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,22),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.048067111492855474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.4415200508010457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>=,19.0433),movie.vote_average), movie.vote_average))", "score": -0.45024891899811337, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.popularity))", "score": -0.4937699669681024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.status))", "score": -0.5237751835666131, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_count))", "score": -0.6103554600558709, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_count),movie.vote_average))", "score": -0.6258126562170219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>=,19.0433),movie.vote_average), movie.id))", "score": -0.6384043316720636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), person.name),movie.vote_average))", "score": -0.6680911844305228, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,19.0433), movie.vote_average),movie.vote_average))", "score": -0.6716966740495991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.title))", "score": -0.678612374671502, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.revenue))", "score": -0.7015158170543145, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),person.name))", "score": -0.7146566146693658, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.status),movie.vote_average))", "score": -0.7250205343298148, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.7511022798425984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.0571740301020327, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,2009-03-29),person.gender), person.gender))", "score": -0.3091546561627183, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.4499147733367863, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))", "score": -0.4684404175422969, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,2009-03-29),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.4717578209051705, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(person),crew.person_id,person.id),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.49856847074789, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(person),crew.person_id,person.id),person.gender,=,2009-03-29), person.gender),person.gender))", "score": -0.5125556641939327, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,2009-03-29),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.5212108572245344, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5318754923703772, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5332069582369854, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5379837319747625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id),person.gender,=,2009-03-29), person.gender),person.gender))", "score": -0.5458625750628767, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,2009-03-29), person.gender),person.gender))", "score": -0.5489680370010319, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,2009-03-29), person.gender),person.gender))", "score": -0.5812786560200038, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,=,2009-03-29),person.gender), person.gender))", "score": -0.6265538472362095, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.gender))", "score": -0.2083185927476734, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.birth_day))", "score": -0.33622342511080205, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.id))", "score": -0.38134557171724737, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.gender))", "score": -0.40270210220478475, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.death_place))", "score": -0.4612286703195423, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,f),person.name), person.gender))", "score": -0.49104429155938795, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,f),person.gender), person.gender))", "score": -0.4992364742023772, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))", "score": -0.5081895010080189, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,f),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.5103385926535101, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.birth_place))", "score": -0.5243352071847767, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.birth_day))", "score": -0.5306069345679134, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,f),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.gender),person.name))", "score": -0.5311287870500647, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,f),person.name), person.birth_day))", "score": -0.5339948966082354, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,f),person.gender), person.birth_day))", "score": -0.5421870792512247, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}, {"orig_question": "Are there non female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.death_place), person.gender))", "score": -0.5442994923796505, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.05786352619936706, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.17764292618533886, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,visual effects), movie.title),movie.title))", "score": -0.18295252201992426, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2222928540805229, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2436190183354399, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2506516737234651, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2644865067533152, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.32601126907468875, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.32927212927065186, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.34494390948596615, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects), movie.title),movie.title))", "score": -0.35969990987680983, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.37171839720551597, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.vote_count))", "score": -0.39686925911780285, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.budget))", "score": -0.4004891102034965, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.4209041729351493, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.16374103657624273, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.18534612273948553, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.24050292188012906, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),spoken_language.iso_639_1))", "score": -0.27267729577752303, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),language.name))", "score": -0.29322440733483746, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),language.name))", "score": -0.29657047566171707, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),genre.name))", "score": -0.31382842155771923, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),language.name))", "score": -0.31699555106744376, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),language.name))", "score": -0.32034161939432343, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),movie.original_language))", "score": -0.33223343554539275, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),movie.original_language))", "score": -0.3355795038722724, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.3408740451637607, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),movie.original_language))", "score": -0.3560045792779991, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.35736534368142825, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,16.4734), language.name),movie.original_language))", "score": -0.3593506476048787, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))", "score": -0.009945819365384523, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), person.death_day),movie.vote_count))", "score": -0.6273793388172635, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.vote_count),movie.vote_count))", "score": -0.6850192310000155, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.movie_id),movie.original_language,=,ar), movie.vote_count),movie.vote_count))", "score": -0.7101438051813511, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(movie),spoken_language.iso_639_1,movie.id), movie.vote_count),movie.vote_count))", "score": -0.7107399397297454, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.vote_count),movie.vote_count))", "score": -0.7239547853100057, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.iso_639_1),movie.original_language,=,ar), movie.vote_count),movie.vote_count))", "score": -0.7371821717934262, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,movie.id), movie.vote_count),movie.vote_count))", "score": -0.7518281646524828, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,ar), movie.vote_count),movie.vote_count))", "score": -0.761784244888986, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,ar), movie.vote_count),movie.vote_count))", "score": -0.7619413031279691, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,!=,ar), movie.vote_count),movie.vote_count))", "score": -0.7997070392957539, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.revenue))", "score": -0.8061236672583618, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),person.death_day))", "score": -0.8397450380507507, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.revenue),movie.vote_count))", "score": -0.842149715499545, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many different vote counts are there for movies with the original language of ar?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_average))", "score": -0.8501065902892151, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.11972646258495093, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.15952717907406638, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.217538),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.19663654420362817, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.19690933761207274, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.23055620122326825, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.2952732865068499, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.number))", "score": -0.3228767063073683, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.year))", "score": -0.3405176724343188, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.number))", "score": -0.3461549478421229, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,!=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3532963619805991, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.36677597138434476, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.year))", "score": -0.36758609514393986, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.status,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.38280635481569025, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.39635744843259735, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3986203617449585, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5314135663118685, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5348426023330373, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.5552464529297433, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.5586754889509121, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5621313184692541, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5655603544904229, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5736703137029334, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5766920956552956, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5770993497241022, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5801211316764643, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.5859642050871289, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5870012082327667, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.5893932411082977, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.5904302442539355, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.5975032003208082, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.04102780204295825, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,=,17500000), country.name),country.name))", "score": -0.2048246803588401, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,=,17500000), country.name),country.name))", "score": -0.2822503205074647, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),movie.status))", "score": -0.31162267129423604, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,=,17500000), country.name),country.name))", "score": -0.31959887843652185, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,=,17500000), country.name),country.name))", "score": -0.32489683176779255, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,!=,17500000), country.name),country.name))", "score": -0.3471895217450692, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.id,=,17500000), country.name),country.name))", "score": -0.34781657757261336, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))", "score": -0.36579677787412496, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),production_country.iso_3166_1))", "score": -0.37163305217668763, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,17500000), country.name),country.name))", "score": -0.38191088158522773, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,=,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3898788686125155, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))", "score": -0.3926122018088929, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.39862204956622554, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,17500000), country.name),country.name))", "score": -0.40118633631997486, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.0659075910843967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),movie.budget))", "score": -0.1715652393795608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.release_date))", "score": -0.5605771029986499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.release_date),movie.budget))", "score": -0.5612238255016564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.revenue))", "score": -0.5855654562510608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,149), movie.budget),movie.budget))", "score": -0.613353387281677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.revenue),movie.budget))", "score": -0.6142063346378563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),person.death_place))", "score": -0.6374128545321582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_place),movie.budget))", "score": -0.6412743535511254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),movie.release_date))", "score": -0.666234751293814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.release_date),movie.budget))", "score": -0.6668814737968205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),movie.revenue))", "score": -0.6912231045462249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,149), movie.budget),movie.budget))", "score": -0.7190110355768411, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.revenue),movie.budget))", "score": -0.7198639829330205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,149),movie.budget), movie.budget))", "score": -0.7250995429985778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.1051889769481666, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,<=,1986-11-27), movie.id),movie.popularity)", "score": -0.2002614359017813, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.21069099999870516, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.2164017811750122, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,<=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.2327466752838582, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,<=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.26810574001371656, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),spoken_language.movie_id,movie.id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.3170329507542777, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.34717672717937714, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3611508533540885, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1986-11-27), movie.id),movie.popularity)", "score": -0.36495465704123264, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3812411980493236, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,<=,1986-11-27), movie.id),movie.popularity)", "score": -0.3818427465067954, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1986-11-27), movie.id),movie.popularity)", "score": -0.3857932383492804, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.39044481403038744, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.4083385470486607, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.14887089955407545, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),oscar.year))", "score": -0.22898292949063082, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),oscar.year))", "score": -0.24543740176946102, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.24626863369209895, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.26044459104704626, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.2627231059709291, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.birth_day),oscar.year))", "score": -0.2660769641266389, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.sub_category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.2710099014678768, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.27689906332587644, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.28837645560663017, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3029280888265602, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.birth_day),person.death_day))", "score": -0.3117382931565319, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.birth_day),person.name))", "score": -0.3181026702046586, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,best picture), person.birth_day),oscar.year))", "score": -0.34149839139505445, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3428920141510304, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.37051612537088563, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.3710157672610557, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.38819313837614294, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.movie_id), oscar.id),oscar.year)", "score": -0.3942204301277081, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.movie_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.40363554403869656, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.409661556385561, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.4173494803761513, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.4203098685988922, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.4213125082723208, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)", "score": -0.4328662192522134, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(movie),person.name,=,Akbar Kurtha),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.43618033111639987, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,crew.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.44276746120055144, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,crew.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.4457278324099319, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,cast.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.4556558903904599, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.movie_id), oscar.id),oscar.year)", "score": -0.45612318799401946, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,<=,2500000), genre.name),genre.name))", "score": -0.12041314653997427, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),person.death_day,<=,1978), genre.name),genre.name))", "score": -0.14459279807149641, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<=,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18144632487624643, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<=,1978), genre.name),genre.name))", "score": -0.24373226400534248, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,<=,1978), genre.name),genre.name))", "score": -0.2724210998539639, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>=,2500000), genre.name),genre.name))", "score": -0.33535548004678106, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.359012386041111, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),person.death_day,>=,1978), genre.name),genre.name))", "score": -0.3595351315783032, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,1978), genre.name),genre.name))", "score": -0.3610308808838244, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36709285823027743, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37071419462914323, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),oscar.year,<=,1978), genre.name),genre.name))", "score": -0.37594412014577583, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<=,1978),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3806654716067349, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<=,1978),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39567451157602723, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),movie.vote_count,<=,2500000), genre.name),genre.name))", "score": -0.4135268208002551, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.2569604545910352, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))", "score": -0.2665165962257311, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,reference to family circus),getData(crew),keyword.id,has_keyword.keyword_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2824494886447422, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,person.id), person.birth_place),person.birth_place))", "score": -0.2943402901043885, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,None,reference to family circus), None),None))", "score": -0.2956912944260613, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,None), None),None))", "score": -0.3007554916862102, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,reference to family circus),getData(crew),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3028947688283168, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,production_country.movie_id), person.birth_place),person.birth_place))", "score": -0.3090195588114368, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(crew),getData(person),crew.person_id,person.id),has_keyword.movie_id,person.id), person.birth_place),person.birth_place))", "score": -0.31648323219157737, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(crew),getData(person),crew.person_id,person.id),has_keyword.movie_id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3179812408841463, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,None,reference to family circus), None),None))", "score": -0.322811739250227, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32641129871926206, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar_winner.person_id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.32790930741183094, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3435450508390834, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}, {"orig_question": "Were there any crew members of movies with the keyword reference to family circus?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,reference to family circus),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar_nominee.person_id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.34504305953165226, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,reference to family circus),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)", "score": -0.043958995608617026, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime)", "score": -0.40970043693987407, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.id),movie.runtime)", "score": -0.5008675039708694, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,Released), movie.id),movie.runtime)", "score": -0.542476880316101, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.runtime),movie.runtime))", "score": -0.6235472209591535, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_average)", "score": -0.6263422675591549, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.runtime),movie.runtime)", "score": -0.7268293916449643, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Released), movie.id),movie.runtime)", "score": -0.7296848844433683, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,Released), movie.id),movie.runtime)", "score": -0.7356019621148671, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_count)", "score": -0.7361617702264877, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.id),movie.runtime)", "score": -0.7766244330092055, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,Released), movie.id),movie.runtime)", "score": -0.7785739732152277, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,Released), movie.id),movie.runtime)", "score": -0.8666089453021265, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,Released), movie.id),movie.runtime)", "score": -0.8753938380318719, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),production_country.movie_id,!=,Released), movie.id),movie.runtime)", "score": -0.8963509866469948, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.025874189741443843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_average))", "score": -0.3061734462971799, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.6281197656862787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.status))", "score": -0.6590655058971606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,1045),movie.vote_average), movie.vote_average))", "score": -0.6676729859318584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_count))", "score": -0.7295895427814685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,1045),getData(movie),movie.id,movie.revenue),getData(movie),movie.revenue,movie.id), movie.vote_count),movie.vote_average))", "score": -0.7485139821357133, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,1045),getData(movie),movie.id,movie.revenue),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_average))", "score": -0.7553130961906264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_count),movie.vote_average))", "score": -0.782845817215275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.popularity))", "score": -0.8072801441303454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.status),movie.vote_average))", "score": -0.8176312071154825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1045), movie.vote_average),movie.vote_average))", "score": -0.8216012145276181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.8630832721537445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.vote_average),movie.vote_average))", "score": -0.8675763036007993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.title))", "score": -0.8681984752765857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,!=,1887-05-28), person.name),person.name))", "score": -0.19113236958219204, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,!=,1887-05-28), person.name),person.name))", "score": -0.32027477691008244, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,!=,1887-05-28), person.name),person.name))", "score": -0.3237449058137268, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.name,!=,1887-05-28), person.name),person.name))", "score": -0.3353101274864381, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,1887-05-28), person.name),person.name))", "score": -0.3499846860213438, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.3525768229685958, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.37993333799382384, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.name))", "score": -0.38252748722542873, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,!=,1887-05-28), person.name),person.name))", "score": -0.40338949763069615, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.name))", "score": -0.4098840022506567, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(oscar_winner),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.41480741367964313, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,1887-05-28),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.41481722198963505, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.name,!=,1887-05-28), person.name),person.name))", "score": -0.41495472927122634, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(crew),person.id,crew.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.4277155707953291, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}, {"orig_question": "How many persons were not born on May 28th 1887?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1887-05-28),getData(oscar_winner),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.name),person.name))", "score": -0.44216391543175115, "correct_code": "count(filter(getData(person),person.birth_day,!=,1887-05-28))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,af), movie.title),movie.title))", "score": -0.1437884625629522, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,af), movie.title),movie.title))", "score": -0.3015986416379609, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,af), movie.title),movie.title))", "score": -0.36808872944815424, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.37138500298200683, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,spoken_language.iso_639_1),country.name,=,af), movie.title),movie.title))", "score": -0.3777496945701963, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1),country.name,=,af), movie.title),movie.title))", "score": -0.3860847714346345, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.title,=,af), movie.title),movie.title))", "score": -0.42384170868849735, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.title),movie.title))", "score": -0.42409837438026443, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,movie.id),country.name,=,af), movie.title),movie.title))", "score": -0.4303637146094616, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,af), movie.title),movie.title))", "score": -0.43590976030766343, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.43787509079220016, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,production_country.iso_3166_1),country.name,=,af), movie.title),movie.title))", "score": -0.4395878057351011, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,spoken_language.iso_639_1),country.name,=,af), movie.title),movie.title))", "score": -0.4442397819650638, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,af),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4698528815902731, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,af),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4699671792468654, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.17258547783861403, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.2652953727586585, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.2654997617774391, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.27940767562218155, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3311919965678469, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,crew.person_id),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3337306782099417, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3394059755081399, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3492302555899279, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3654142721463821, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_company.company_id),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.36584264913094966, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.37211759020097995, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.37232195291579406, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Kyrgyz Republic),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3725025701109624, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,movie.id),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3792488892962284, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.4261282522493275, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,columbine),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.12933281343892275, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.24897996444465095, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,columbine),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.vote_count))", "score": -0.25580110039231735, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,columbine),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.29668103504661064, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,columbine),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue),movie.vote_count))", "score": -0.3110781044655641, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.3239830790522281, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))", "score": -0.32819719792086904, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,columbine),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_count))", "score": -0.33414090454260115, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.33614523574198846, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),person.death_day,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.340172695307827, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,=,columbine),movie.revenue),movie.vote_count))", "score": -0.35613430960045184, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.3617489751817178, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.3638275653177525, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,columbine),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.revenue),movie.vote_count))", "score": -0.41085558675559253, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}, {"orig_question": "How much is the vote count of the movie with the keyword columbine that has the lowest revenue?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue,=,columbine), movie.vote_count),movie.vote_count))", "score": -0.4265265246191771, "correct_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,columbine),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.0386605975436396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,!=,26500000),movie.popularity), movie.popularity))", "score": -0.48913684312356054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.5124376968233264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.5296511518608895, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6396601626802294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.status),movie.popularity))", "score": -0.6427385858478374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.id),movie.popularity))", "score": -0.647747283357603, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6625501685994095, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6673381501095719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6864904933827347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.revenue))", "score": -0.6973587244501687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.vote_average),movie.popularity))", "score": -0.7027825764598674, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,26500000), movie.popularity),movie.popularity))", "score": -0.7091301852124161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.vote_average))", "score": -0.7251284688463784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,!=,26500000),movie.popularity), movie.id))", "score": -0.7342048027749115, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.0963964905240573, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1967-08-13), person.gender),person.gender))", "score": -0.1760234046378173, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,1967-08-13),person.gender), person.gender))", "score": -0.4177299520088127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1967-08-13), person.gender),person.gender))", "score": -0.4816466956981458, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1967-08-13),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.4940580521755673, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1967-08-13),person.gender), person.gender))", "score": -0.4982008716178825, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1967-08-13),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.5000276814449865, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id),person.birth_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5072719921773015, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5098806974831854, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5375460066773068, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id),person.gender,=,1967-08-13), person.gender),person.gender))", "score": -0.5393270756483752, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1967-08-13), person.gender),person.gender))", "score": -0.5612736098119058, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1967-08-13), person.gender),person.gender))", "score": -0.5996671706088819, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))", "score": -0.6272440343745984, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,1967-08-13), person.gender),person.gender))", "score": -0.6596231866278686, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),person.death_day,<,139),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),movie.revenue))", "score": -0.39846431297475143, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),person.death_day,<,139),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id), person.death_day),movie.revenue))", "score": -0.44534932689257456, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,movie.id),person.death_day,<,87), movie.revenue),movie.revenue))", "score": -0.4622030447418136, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,movie.id),person.death_day,<,87), person.death_day),movie.revenue))", "score": -0.46248784969324785, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,movie.id),person.death_day,>,139), movie.revenue),movie.revenue))", "score": -0.48001947549220014, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,movie.id),person.death_day,>,139), person.death_day),movie.revenue))", "score": -0.4803042804436343, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id),person.death_day,<,139), movie.revenue),movie.revenue))", "score": -0.481766231644142, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id),person.death_day,<,139), person.death_day),movie.revenue))", "score": -0.4820510365955762, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_nominee.oscar_id),person.death_day,<,139), person.death_day),movie.revenue))", "score": -0.4884558553524624, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_nominee.oscar_id),oscar.number,<,87), person.death_day),movie.revenue))", "score": -0.4978157436125019, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),person.death_day,<,139), person.death_day),movie.revenue))", "score": -0.4988697407818098, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id),person.death_day,>,87), movie.revenue),movie.revenue))", "score": -0.49958271114339275, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id),person.death_day,>,139), person.death_day),movie.revenue))", "score": -0.49986751609482694, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,movie.id),person.death_place,<,139), movie.revenue),movie.revenue))", "score": -0.5010209876665039, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,movie.id),person.death_day,<,87), movie.revenue),person.death_day))", "score": -0.5034746305057463, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.04619567847986602, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.15354233058422287, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)", "score": -0.2780803401571589, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.2972340304106054, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.title,=,documentary (feature)),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.30573435245046404, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.33681030885347335, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,documentary (feature)),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.36502100121414455, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.4018615616020138, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)", "score": -0.41424054769092067, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.41538866185346207, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),production_company.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.4164200999412114, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.42550009124551985, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.4263876226795898, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.4368692206898894, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.budget)", "score": -0.448262497480203, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.053023663611440425, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.1361196629082026, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.24295382947675362, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04),oscar_winner.person_id,person.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.3254029609563436, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.32608570461499997, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.vote_count))", "score": -0.3576906432496927, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>=,1947-09-04), movie.title),movie.title))", "score": -0.3646160881303312, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1947-09-04),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.release_date),movie.title))", "score": -0.37446781594691214, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1947-09-04),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.title))", "score": -0.3819435472093041, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),person.death_day,>,1947-09-04),oscar_winner.person_id,person.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.38249143648856815, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.39321412091256297, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.budget))", "score": -0.4165481240487503, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.42744560637307505, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),production_country.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4434929464184856, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,1947-09-04), movie.title),movie.title))", "score": -0.4488512398765053, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.1860978825054052, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.status,=,Post Production), oscar.sub_category),oscar.sub_category))", "score": -0.23875219180885698, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.24006398841834573, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.2442272960922537, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.25807821236948636, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.277951025644346, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production), oscar.sub_category),oscar.sub_category))", "score": -0.2812794507057426, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.2974212460225042, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.status,=,Post Production), oscar.sub_category),oscar.number))", "score": -0.3179498709282672, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.status,=,Post Production), oscar.sub_category),oscar.sub_category))", "score": -0.32413544745623646, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.32993813632762803, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.3353082832485044, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.number))", "score": -0.3377505545942423, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.34848657049818876, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.status,=,Post Production), oscar.number),oscar.sub_category))", "score": -0.35211561346820647, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.10725673697925231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.16932674907184264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.3532355245206418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.41300765834785125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.535904830684558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.5513679179366591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.popularity),movie.popularity))", "score": -0.5716073926541867, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.6046331584357176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Released), movie.popularity),movie.popularity))", "score": -0.6057565029714169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.6084040923979046, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Released), movie.popularity),movie.popularity))", "score": -0.6134379300292494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.revenue))", "score": -0.6704741044904949, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.popularity), movie.popularity))", "score": -0.6788053621985455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,=,Released), movie.popularity),movie.popularity))", "score": -0.7039450224492612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.7103945537473919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.27466433924564626, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,Clare Niederpruem),movie.vote_average),movie.status))", "score": -0.3022378129971912, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.4377409604683412, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.48005716058826087, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.4877789195446786, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5019540218822723, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5088887442367943, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),getData(movie),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5148294939266613, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5296360792271978, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5333672185188308, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_winner.oscar_id),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.535286523153416, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,Clare Niederpruem), movie.id),movie.vote_count)", "score": -0.5369054185973607, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(spoken_language),movie.id,cast.movie_id),getData(movie),spoken_language.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.5378503608908528, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_count,=,Clare Niederpruem),movie.revenue),movie.status))", "score": -0.5453099051567155, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,Clare Niederpruem),movie.revenue),movie.status))", "score": -0.5775936214340618, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.1537077674332515, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.24421483485634973, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.2789947250584456, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)), movie.revenue),movie.revenue))", "score": -0.2800453131947567, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.2809309634728301, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.281786104199798, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue))", "score": -0.28201134544575784, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(movie),oscar_nominee.movie_id,movie.id), person.death_day),movie.revenue))", "score": -0.2969088027777382, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.3277359823214638, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.revenue))", "score": -0.3277663347669377, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.33270709530151055, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.333588389370172, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)), person.death_day),movie.revenue))", "score": -0.3438922197953469, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,writing (story and screenplay--based on factual material or material not previously published or produced)), movie.revenue),movie.revenue))", "score": -0.3573087376060622, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}, {"orig_question": "What is the revenue of the oscar nominated movie in the writing subcategory with the shortest runtime?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.36445206919770257, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (story and screenplay--based on factual material or material not previously published or produced)),movie.runtime),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_count),movie.vote_count))", "score": -0.1649338708666619, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_average),movie.vote_count))", "score": -0.304228979483014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_count),movie.vote_count))", "score": -0.349613186714123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_average),movie.vote_count))", "score": -0.406346787509392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_count),movie.vote_count))", "score": -0.42381385604676325, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))", "score": -0.479327571898466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,238), movie.id),movie.vote_count)", "score": -0.48656802211534406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_average),movie.vote_count))", "score": -0.5168563526385697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_average),movie.vote_count))", "score": -0.6186226805148181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_count),movie.vote_average))", "score": -0.6451025715505239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,>,238), movie.vote_count),movie.vote_count))", "score": -0.6530101996322628, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,238), movie.vote_count),movie.vote_count))", "score": -0.6581275433709379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))", "score": -0.6638797529012663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,238), movie.id),movie.vote_average)", "score": -0.6716118402515082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,238), movie.id),movie.vote_count)", "score": -0.6757732494373591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.17238225470529386, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.17748262673956966, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.1890197081520223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.23524659712622392, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.2678115353554618, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2689090766517229, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.27721831818206805, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(oscar_nominee),getData(person),crew.person_id,person.id),oscar.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.2833561200616384, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.30015440969349483, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.30256226236916656, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3145970979844846, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.31597005262132244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(oscar_nominee),getData(person),crew.person_id,person.id),oscar.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.3221078545008928, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(person),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.328043097400002, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.33174185227171143, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,184376254),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.1263676893456976, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,>,184376254), country.name),country.name))", "score": -0.14383436585345302, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.16341799395319967, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,184376254), country.name),country.name))", "score": -0.22542616887529002, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,>,184376254), country.name),country.name))", "score": -0.2625052473668836, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,184376254), country.name),country.name))", "score": -0.2680277496382087, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.33303883570963305, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,184376254), country.name),country.name))", "score": -0.3676738725996241, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,>,184376254), country.name),country.name))", "score": -0.3744547101124078, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.death_day,>,184376254), country.name),country.name))", "score": -0.3781352009780795, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,184376254),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3788794992128985, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,>,184376254), country.name),country.name))", "score": -0.38693643950588663, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,184376254),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3900267028594805, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,>,184376254), country.name),country.name))", "score": -0.4032729385587224, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries have movies been produced that had a revenue off more than 184376254?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,>,184376254), country.name),country.name))", "score": -0.40959133011812776, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,184376254),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1999-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.09106043113963917, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1999-03-07), oscar.number),oscar.number))", "score": -0.14217104696053937, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,1999-03-07),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.28512732633666843, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,<,1999-03-07), oscar.number),oscar.number))", "score": -0.28944876185300233, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,1999-03-07),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number))", "score": -0.29927784782954564, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1999-03-07),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.3251709556821301, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.birth_day,<,1999-03-07), oscar.number),oscar.number))", "score": -0.33727343541226557, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1999-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.number),oscar.number))", "score": -0.3377839820166646, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,person.id),person.death_day,<,1999-03-07), oscar.number),oscar.number))", "score": -0.34087885088113723, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1999-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.sub_category))", "score": -0.3591189833369698, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1999-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.36385955451031016, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1999-03-07), oscar.number),oscar.sub_category))", "score": -0.37142858160695824, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))", "score": -0.38458639271453454, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1999-03-07), oscar.sub_category),oscar.number))", "score": -0.3878767398435953, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}, {"orig_question": "What are the oscar number of the oscar nomineed persons which have died before 1999-03-07?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1999-03-07), oscar.number),oscar.number))", "score": -0.39183270772040824, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1999-03-07), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.08267091894332394, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,>=,200000), country.name),country.name))", "score": -0.2313587454300182, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.23563757264790225, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.24337962741797303, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>=,200000), country.name),country.name))", "score": -0.2591096493924736, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,200000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.261428495104469, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.278236974888626, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,>=,200000), country.name),country.name))", "score": -0.2815506829424089, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))", "score": -0.2900434772825193, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.runtime,>=,200000), country.name),country.name))", "score": -0.2926868188078761, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>=,200000), country.name),country.name))", "score": -0.3774533878416682, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,>=,200000), country.name),country.name))", "score": -0.3811810085797597, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.38544465480947604, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3919342969314007, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39634631794810443, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.07582968960957491, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.13707623694016438, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(merge(filter(getData(genre),genre.name,=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.1846242158231591, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.246325424369103, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.29286180846185456, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3068446411628203, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(merge(filter(getData(genre),genre.name,=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.3648102685239956, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(language),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.39066738814085106, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.39733548154505144, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.42227569546831084, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),language.iso_639_1,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.4400290388983004, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.name,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.45211126505365345, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),oscar.category,=,TV Movie), movie.id),movie.popularity)", "score": -0.45629667069442925, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(oscar_nominee),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.46085058951360686, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of movie popularity of all movies with the genre name TV Movie?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),genre.id,movie.id),genre.name,=,TV Movie), movie.id),movie.popularity)", "score": -0.4617047425777244, "correct_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,TV Movie), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.029115579047356732, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.4072646554122912, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.47177717644080985, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.5675826426158892, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.6127090807567583, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.66880128342018, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.release_date),movie.runtime))", "score": -0.7111018582509132, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.vote_average),movie.runtime))", "score": -0.7304424329922767, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.runtime),movie.release_date))", "score": -0.7402409421774792, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.7656532879482256, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.runtime),movie.vote_count))", "score": -0.7780602681013988, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.7896152492176043, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)", "score": -0.7975142840593676, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.tagline,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.8139572497020708, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}, {"orig_question": "What is the runtime of the movie Only the Strong?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.number,=,Only the Strong), movie.runtime),movie.runtime))", "score": -0.8224002182978438, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Only the Strong), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.sub_category),oscar.year))", "score": -0.26114711839701243, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), movie.vote_average),oscar.year))", "score": -0.2666694141054084, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.sub_category),movie.vote_average))", "score": -0.284218406059936, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), movie.vote_average),movie.vote_average))", "score": -0.28974070176833194, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.year),oscar.year))", "score": -0.2917440162880478, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), person.name),oscar.year))", "score": -0.31007232776444016, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.year),movie.vote_average))", "score": -0.31481530395097135, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), person.name),movie.vote_average))", "score": -0.3331436154273637, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.oscar_id,oscar.id),movie.vote_count,<=,4524), oscar.sub_category),oscar.year))", "score": -0.33481395433410854, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.oscar_id,oscar.id),movie.vote_count,<=,4524), movie.vote_average),oscar.year))", "score": -0.34329831368436803, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.oscar_id,oscar.id),movie.vote_count,<=,4524), oscar.sub_category),movie.vote_average))", "score": -0.35469235025055296, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.sub_category),oscar.year))", "score": -0.35592521169252667, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.vote_count,<=,4524), oscar.sub_category),oscar.year))", "score": -0.35965616457210225, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), movie.vote_average),oscar.year))", "score": -0.3614475074009226, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), oscar.year),oscar.year))", "score": -0.4326774508899944, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Paul Hirsch), movie.title),movie.title))", "score": -0.1896440194310553, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.21418176968972982, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,Paul Hirsch), movie.title),movie.title))", "score": -0.25563594666417555, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,Paul Hirsch), movie.title),movie.title))", "score": -0.26038565579438233, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,Paul Hirsch),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2656560147743678, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.27013030867638893, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,Paul Hirsch),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.27514960028162816, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,Paul Hirsch),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.28250560588006984, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,Paul Hirsch),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3035737650892302, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Paul Hirsch), movie.title),movie.runtime))", "score": -0.3479638548287612, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Paul Hirsch), movie.release_date),movie.title))", "score": -0.35593526800392916, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Paul Hirsch), movie.title),movie.title))", "score": -0.35961422604056287, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Paul Hirsch), movie.title),movie.title))", "score": -0.36861256157386574, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.status,=,Paul Hirsch), movie.title),movie.title))", "score": -0.37165038174682, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there for which Paul Hirsch received an Oscar?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Paul Hirsch),oscar.category,=,Paul Hirsch), movie.title),movie.title))", "score": -0.3793035466019145, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,Paul Hirsch),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.07593640388475369, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.19567558327806214, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))", "score": -0.22387612679954982, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))", "score": -0.25401755436161755, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))", "score": -0.2719577347395749, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),oscar.category,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.32023690314140146, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Adventure),getData(movie),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3244984564658345, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3251188939224043, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.35208821140627117, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.353045005695297, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.3602679565107211, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3638193765361294, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),language.iso_639_1,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.38131829432181724, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),oscar.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3867951899377807, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies in the Adventure genre ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(has_genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.39774719596103314, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,A Fine Step), movie.title),movie.title))", "score": -0.18344814494048478, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.title))", "score": -0.187599212407248, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.title))", "score": -0.2808993040987727, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.vote_count))", "score": -0.31410964116603374, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.title))", "score": -0.3263826100983815, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Poland),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3419040030136916, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,Poland), movie.title),movie.title))", "score": -0.35598236486112, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Poland),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3641688276763806, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,A Fine Step), movie.title),movie.title))", "score": -0.3765470401922357, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.title))", "score": -0.3819661807190313, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_company.company_id),country.name,=,Poland), movie.title),movie.title))", "score": -0.38756830647383733, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.title))", "score": -0.39852765421102715, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.vote_count))", "score": -0.4074097328575584, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Poland), movie.title),movie.title))", "score": -0.4119692546600464, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}, {"orig_question": "How many films with the movie title A Fine Step and which were produced in Poland are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),country.name,=,Poland), movie.title),movie.title))", "score": -0.4189786927381647, "correct_code": "count(extractValues(distinct(filter(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),movie.title,=,A Fine Step),getData(genre),has_genre.genre_id,genre.id),country.name,=,Poland), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.title))", "score": -0.04286117044102866, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.budget))", "score": -0.33896906611335, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.vote_count))", "score": -0.3429137611092301, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1564), movie.title),movie.title))", "score": -0.5246187037118943, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1564), movie.title),movie.title))", "score": -0.5566058939584764, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.title))", "score": -0.6443432960259088, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),oscar.number))", "score": -0.686307384938118, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.runtime))", "score": -0.7124181532562943, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),production_company.movie_id))", "score": -0.7457654022873612, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),has_keyword.movie_id))", "score": -0.7473473095597001, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.original_language))", "score": -0.7523040914238663, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1564), movie.title),movie.title))", "score": -0.7529174870142015, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),keyword.name))", "score": -0.7584535622299882, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),movie.revenue))", "score": -0.7594547414482804, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}, {"orig_question": "Do movies exist with a higher vote count than 1564?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.title),company.name))", "score": -0.7789183401764603, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1564), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.16841515616660935, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.2426192858531894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,Rumored), language.name),language.name))", "score": -0.2564190507925221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id), language.name),language.name))", "score": -0.2869564610259652, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.28909715165354466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,Rumored), language.name),movie.original_language))", "score": -0.32104719876583565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(spoken_language),movie.id,production_country.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.34157005617326497, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),production_country.iso_3166_1,language.iso_639_1), language.name),language.name))", "score": -0.34470024590879145, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),production_country.iso_3166_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3543082856072027, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.35450770117323077, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id),movie.status,=,Rumored), language.name),language.name))", "score": -0.35476918508419725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),country.name))", "score": -0.3547931768022638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id), language.name),movie.original_language))", "score": -0.3611605907125453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,Rumored), movie.original_language),language.name))", "score": -0.37112704483221487, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}, {"orig_question": "In which languages were films produced with the status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_country),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.37924925699474715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.1260568846778484, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.19798236966718866, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.27206959717939533, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.2906888010087289, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.3439950821687356, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), oscar.id),movie.popularity)", "score": -0.35640366313980226, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.36261428599806916, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.vote_average),movie.popularity)", "score": -0.36993319544668635, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.3705969206618478, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>,4000000), movie.id),movie.popularity)", "score": -0.3720531072203854, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(filter(getData(movie),movie.budget,>=,4000000),movie.popularity)", "score": -0.3825615910671629, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.4147877810452218, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.4179501688038714, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), oscar.id),movie.popularity)", "score": -0.4283291481291425, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies with a budget of at least 4000000?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.budget,>=,4000000), movie.id),movie.popularity)", "score": -0.4392030073105974, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.budget,>=,4000000), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.18956372895377352, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.22579062201593428, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.2650476626152918, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2650872111307129, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),person.death_day,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.28337888281979456, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.30127455567745254, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,=,89), movie.id),movie.popularity)", "score": -0.30753277964961584, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,=,89), movie.id),movie.popularity)", "score": -0.3437596727117766, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.35475025814857564, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),person.death_day,=,89),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3752214919027518, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3807253588640982, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),person.death_day,=,89),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)", "score": -0.38087342720183537, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,=,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.38246883359313183, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,=,89), movie.id),movie.popularity)", "score": -0.3830167133111341, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,89), movie.id),movie.popularity)", "score": -0.38898107118056635, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.status),movie.title))", "score": -0.11551379395314143, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))", "score": -0.16784201545306132, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), oscar.sub_category),movie.title))", "score": -0.42674922926016734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.status),movie.status))", "score": -0.4488615894842951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.status))", "score": -0.501189810984215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.5150048135001271, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), country.name),movie.title))", "score": -0.5403298137862294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,260000000), movie.status),movie.title))", "score": -0.5527751076187997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.status),movie.runtime))", "score": -0.5769050026465266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,260000000), movie.title),movie.title))", "score": -0.6051033291187196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.6057052610594837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.status),movie.vote_average))", "score": -0.6089819276858179, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.status),movie.title))", "score": -0.6139735158558324, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.runtime))", "score": -0.6292332241464464, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,260000000), movie.status),movie.title))", "score": -0.6454376804795174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2318551450986812, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2369747147664392, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.24862472223890592, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2587515347658358, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,!=,1981-03-24),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.27287300000091574, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,!=,1981-03-24),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.32950282296365574, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3303528199651107, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_place,!=,1981-03-24), oscar.id),oscar.number)", "score": -0.33076272663381107, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,!=,1981-03-24),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.33589810883549187, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.33871421966836684, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.34359918990784943, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.34383378933612485, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,1981-03-24),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.3536474218170219, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,!=,1981-03-24),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3656106263488818, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars won by a person that was not born in 1981-03-24 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.36959088166031023, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1981-03-24),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.14059825048822847, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.18357940580741378, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.19587171168974357, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.20329882094178914, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.22987147998002247, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.2332840853085461, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))", "score": -0.24222622942601818, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.3197657286472039, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.32664602068404247, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>,2012-08-06), company.name),company.name))", "score": -0.3366881828887803, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.33902641223380886, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,2012-08-06), company.name),company.name))", "score": -0.3617186214774025, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>=,2012-08-06), company.name),company.name))", "score": -0.36612025081362015, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36677499022259913, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,2012-08-06), company.name),company.name))", "score": -0.3810765864943053, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.13002576103409622, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.20736919974875193, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id), genre.name),genre.name))", "score": -0.21549034327888636, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),has_keyword.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2399169348605542, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),keyword.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24741844185034895, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),has_keyword.keyword_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2522874424814801, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_genre),movie.id,keyword.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.25494721107317125, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_genre),movie.id,has_keyword.movie_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.256130528695214, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.26800598926171526, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.26845785537802486, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2737371510543746, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2824426057944801, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_genre),movie.id,has_keyword.keyword_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2825574760145775, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_genre),movie.id,keyword.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id), genre.name),genre.name))", "score": -0.3080435249121112, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}, {"orig_question": "Are there any genres with movie titled The Gatekeepers and the keyword elimination derby?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_genre),movie.id,has_keyword.movie_id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id), genre.name),genre.name))", "score": -0.30922684253415395, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,elimination derby),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,The Gatekeepers), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.06640627183677884, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.18982726133918473, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.status,=,Rumored), person.birth_place),person.birth_place))", "score": -0.213913684573399, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.status,=,Rumored), person.birth_place),person.birth_place))", "score": -0.3003833587171553, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.death_place))", "score": -0.3273521032919666, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,production_country.movie_id), person.birth_place),person.birth_place))", "score": -0.3348282041943091, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_country),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.34050498586687017, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,company.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3424284252081071, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),production_country.iso_3166_1,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3523114572757292, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,country.iso_3166_1),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3524515322657358, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(crew),movie.id,production_country.movie_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3615378790301436, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.3671660769023307, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3740151291761093, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,crew.movie_id),movie.status,=,Rumored),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.38437089798587687, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.birth_place))", "score": -0.3866201916386774, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.15082298354494478, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.1840486285754172, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.18663565120804765, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.28334097427016797, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.2939239671998615, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(has_keyword),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.31744205374543544, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.32107114460770797, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<=,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.32761429227253547, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.3279252361677025, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_keyword),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.3367018187417204, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.35157940710652763, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36176763338003226, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36514648923255605, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.37522247679599324, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.3779447265138316, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.vote_average))", "score": -0.28569232860443966, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special effects),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number),movie.vote_average))", "score": -0.29702192388559673, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,>=,special effects),oscar.year),movie.vote_average))", "score": -0.3034714419629615, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,special effects),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number),movie.vote_average))", "score": -0.3038963697317624, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special effects),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year),movie.vote_average))", "score": -0.3170128542622255, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,special effects),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year),movie.vote_average))", "score": -0.3238873001083912, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number),movie.vote_average))", "score": -0.3282401274467758, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,!=,special effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number),movie.vote_average))", "score": -0.32953595517452877, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,special effects),oscar.year),movie.vote_average))", "score": -0.3350321747788487, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,!=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.vote_average))", "score": -0.344210970013402, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,!=,special effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year),movie.vote_average))", "score": -0.3464091954605177, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,special effects),oscar.year),movie.vote_average))", "score": -0.3466496481259118, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,>=,special effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number),movie.vote_average))", "score": -0.357358961943295, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,>=,special effects),oscar.year),movie.vote_average))", "score": -0.36510439769456665, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie that had an oscar nominee with the lowest oscar number excluding the oscar sub category special effects? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,>=,special effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year),movie.vote_average))", "score": -0.3742322022292839, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,special effects),oscar.number),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))", "score": -0.21372642175265355, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,1938-12-16), person.name),person.name))", "score": -0.3176399226576905, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.name),person.name))", "score": -0.3531027640492539, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1938-12-16), person.name),person.name))", "score": -0.4009989108235459, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.name),person.name))", "score": -0.4311826433331589, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,1938-12-16),person.name), person.name))", "score": -0.43317056955129374, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1938-12-16),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_day),person.name))", "score": -0.4565700553733727, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1938-12-16), person.name),person.name))", "score": -0.47497775212832494, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1938-12-16),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.4765665455778706, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,1938-12-16),person.name), person.name))", "score": -0.49194063009053934, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1938-12-16),person.name), person.name))", "score": -0.4979924684885191, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.birth_day),person.name))", "score": -0.5049858297497849, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.birth_day))", "score": -0.5156691893280367, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1938-12-16),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5200648335431018, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,1938-12-16),person.name), person.name))", "score": -0.5611536479118513, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Documentary), movie.title),movie.title))", "score": -0.3418246861328953, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.3525486420621746, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5119809899663276, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5213623023917655, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,has_keyword.keyword_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5222165045992652, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Documentary),getData(movie),movie.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.5301368502171541, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5362625258973189, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5383391282516474, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5477204406770855, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,has_keyword.keyword_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5485746201801087, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Documentary),getData(has_keyword),movie.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.5563481736055954, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Documentary),getData(movie),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.5583271799376477, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5626206414781625, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.563331723526985, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Documentary),getData(movie),movie.id,has_keyword.keyword_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.5687165852344557, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))", "score": -0.046335552375239786, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1980-03-27),person.gender), person.gender))", "score": -0.271476462148712, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1980-03-27), person.gender),person.gender))", "score": -0.409263590372575, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1980-03-27),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.509879960734176, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1980-03-27), person.gender),person.gender))", "score": -0.5364711825022823, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1980-03-27),getData(crew),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.gender),person.gender))", "score": -0.5767215116233195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.birth_place),person.gender))", "score": -0.5970372986266739, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,1980-03-27),person.gender), person.gender))", "score": -0.6242273735260824, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1980-03-27),getData(crew),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.gender),person.gender))", "score": -0.6295362015773845, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1980-03-27),getData(crew),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.gender),person.gender))", "score": -0.6963777524665281, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1980-03-27), person.gender),person.gender))", "score": -0.7251820508608944, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1980-03-27), person.gender),person.gender))", "score": -0.7439840976367122, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.birth_place))", "score": -0.7618583654038957, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,=,1980-03-27),person.gender), person.gender))", "score": -0.790418320131721, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1980-03-27), person.gender),person.gender))", "score": -0.8132692519793636, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.20349087050522127, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.23673686542413264, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2527438379006544, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),company.name,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.29196720427038086, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),genre.name,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.29227059558647694, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),company.name,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2948369784540536, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2972737181287652, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_average)", "score": -0.3061306419204828, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),company.name,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3108439509305754, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.313280690605287, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.3197434614198661, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.33326820276446706, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,=,New York City, New York, USA), movie.vote_average),movie.vote_average)", "score": -0.33466689224626495, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.3509212979978121, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,New York City, New York, USA),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_average)", "score": -0.35567582175103196, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))", "score": -0.01885212208799203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<,683),movie.release_date), movie.release_date))", "score": -0.4286489464902843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,683), movie.release_date),movie.release_date))", "score": -0.5538040587744035, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,683), movie.release_date),movie.release_date))", "score": -0.5805485436758318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))", "score": -0.7471106252014579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.popularity))", "score": -0.8183026450169564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.budget))", "score": -0.8209132688534737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,683), movie.release_date),movie.release_date))", "score": -0.849993486150197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.popularity),movie.release_date))", "score": -0.8772980899848335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,683), movie.release_date),movie.release_date))", "score": -0.913929969236051, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.original_language))", "score": -0.9209781425488472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.runtime))", "score": -0.9292386310589791, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.original_language),movie.release_date))", "score": -0.9333173961676948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,683), movie.release_date),movie.release_date))", "score": -0.9379630984512914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), person.gender),movie.release_date))", "score": -0.9526633949317329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.16408038614539638, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.category,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1890541776830863, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2063961554570843, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.sub_category,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.22102799906443646, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.22260863193181818, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.22295004263414514, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.23708797165249598, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.30246627802095744, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(has_genre),has_genre.genre_id,genre.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.333745775290077, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.homepage,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37413059609809185, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3754345374335733, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.vote_average,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3773527001991279, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.title,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.4182367464099868, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.43863763665712885, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id), genre.name),genre.name))", "score": -0.4398413394738336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))", "score": -0.03505719684108044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2011-09-10), movie.title),movie.title))", "score": -0.34110729627354885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))", "score": -0.4864607404815615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-09-10),movie.title), movie.title))", "score": -0.5058359999875393, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-09-10), movie.title),movie.title))", "score": -0.5257020168755844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,2011-09-10), movie.title),movie.title))", "score": -0.658679421274428, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.id),movie.release_date,<=,2011-09-10), movie.title),movie.title))", "score": -0.6745543814587327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.budget))", "score": -0.6874848378174647, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-09-10), movie.title),movie.title))", "score": -0.6876512937997177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.original_language))", "score": -0.7190499079697474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2011-09-10),getData(movie),movie.id,cast.movie_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.740718040162136, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.vote_count))", "score": -0.7413692248337611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2011-09-10),getData(movie),movie.id,cast.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.7465425512789587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<,2011-09-10), movie.title),movie.title))", "score": -0.7703736003386439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.budget),movie.title))", "score": -0.7968947482113435, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.015646621824998874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_count))", "score": -0.5241451147085172, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.revenue))", "score": -0.5770541678721202, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.revenue), movie.revenue))", "score": -0.6083622901351191, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.revenue))", "score": -0.7292637478167308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.revenue),movie.revenue))", "score": -0.754273242673662, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.768311012077902, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), person.death_day),movie.revenue))", "score": -0.7841522942835581, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.7899977814013255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Released), movie.revenue),movie.revenue))", "score": -0.822515077314165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.revenue))", "score": -0.8260149608904612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.revenue))", "score": -0.8319721471125376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.revenue),movie.revenue))", "score": -0.8335247108552721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_average))", "score": -0.8480949881559354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.popularity), movie.revenue))", "score": -0.850429865589831, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))", "score": -0.025542914401739836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.release_date),movie.budget))", "score": -0.498590771574527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.revenue))", "score": -0.5087267654016614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.revenue),movie.budget))", "score": -0.523039881605655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))", "score": -0.5295434245999786, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.release_date))", "score": -0.5999584393575788, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Rumored),movie.budget), movie.budget))", "score": -0.6077249588051927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Rumored), movie.budget),movie.budget))", "score": -0.647416457766667, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.budget))", "score": -0.6760696214623749, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.title),movie.budget))", "score": -0.6918459576554596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Rumored),getData(movie),movie.id,production_country.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.7034128070031219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Rumored), movie.budget),movie.budget))", "score": -0.7218307110015303, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,!=,Rumored), movie.budget),movie.budget))", "score": -0.7909945698920637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.title))", "score": -0.7943729357793927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), person.death_place),movie.budget))", "score": -0.8198452633805573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.07759141227901722, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.12327621664358968, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.18566414170943474, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy), movie.title),movie.title))", "score": -0.2801943412967781, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2892885961821671, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3059728176876094, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.32519297800535124, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.32948961472222504, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3325481960604968, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3326397306161414, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.33806627524186156, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.3601615670356661, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),company.id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.36335021534021594, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy),movie.title),movie.title))", "score": -0.38136851594320875, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.39586119830168814, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.12709610712748146, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.1473903091379291, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,jewelry store),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.15441581307310023, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.vote_count))", "score": -0.24462652452668834, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,jewelry store), movie.title),movie.vote_count))", "score": -0.2713346536129592, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.27872975252576554, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,jewelry store),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.29079669253710966, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.3079274624560602, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,jewelry store),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.vote_count))", "score": -0.31618984548192125, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.budget))", "score": -0.3388884575792871, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,jewelry store),getData(has_keyword),movie.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3444694691390921, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),language.iso_639_1,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.36128387193513206, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.vote_count))", "score": -0.3654095421126083, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,jewelry store), movie.title),movie.budget))", "score": -0.36654272317420494, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),language.name,!=,jewelry store), movie.title),movie.title))", "score": -0.36680796683483746, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.name,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.1384536545753883, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.13969177053195161, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.1793575816542276, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Viernheim), movie.id),movie.budget)", "score": -0.22654239649057958, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,!=,Viernheim),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.23224118670476485, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,!=,Viernheim), movie.id),movie.budget)", "score": -0.2889718290146199, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.name,!=,Viernheim),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.budget)", "score": -0.30515426442375165, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.name,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.35400187758235363, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.35432382861932665, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(person),person.name,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(person),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.budget)", "score": -0.3555537708925476, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(person),person.name,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.budget)", "score": -0.3640720968985867, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(person),person.birth_place,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(person),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.budget)", "score": -0.36531338746595254, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3949058046611929, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,!=,Viernheim), movie.id),movie.budget)", "score": -0.40610890597182653, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies with at least one oscar winner person that was not born in \"Viernheim\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,Viernheim),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4119534564619192, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,!=,Viernheim), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))", "score": -0.030639212080131983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))", "score": -0.45006535685024573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,288), movie.runtime),movie.runtime))", "score": -0.49170826418776414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,288), movie.runtime),movie.runtime))", "score": -0.5566304006752034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,=,288),movie.runtime), movie.runtime))", "score": -0.5692474801580829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,288), movie.runtime),movie.runtime))", "score": -0.5866243694581499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.vote_count))", "score": -0.6390357487507572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),oscar.number))", "score": -0.7133127920933475, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), oscar.sub_category),movie.runtime))", "score": -0.7246084850885381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.title),movie.runtime))", "score": -0.7444265526391973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,288), movie.runtime),movie.runtime))", "score": -0.749499842957448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,288), movie.runtime),movie.runtime))", "score": -0.7671305392541399, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.release_date),movie.runtime))", "score": -0.8102068346597662, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.release_date))", "score": -0.8165203802891483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.title))", "score": -0.8185232751675358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.15002475501342757, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.16492891335107612, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.17776715453458827, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evolution),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.18945513368460054, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.20864276232362677, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.2517636175291283, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.27060008568602684, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.28783159669235775, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),keyword.id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.2883288889121275, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,evolution), movie.title),movie.title))", "score": -0.29451015974262046, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.29606614256164243, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.release_date),movie.title))", "score": -0.29660141880505914, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.2987382721867659, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,evolution),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.3049380327882926, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.vote_count))", "score": -0.3395589091164265, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)", "score": -0.06424808548523007, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,=,127),movie.popularity)", "score": -0.34230635456173925, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,127), movie.id),movie.popularity)", "score": -0.5175920665902396, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,127), movie.id),movie.popularity)", "score": -0.6308456515760406, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,127), movie.id),movie.popularity)", "score": -0.6319520376760571, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity))", "score": -0.6551222971120296, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,127), movie.id),movie.popularity)", "score": -0.6858280671706721, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity))", "score": -0.6938576857501175, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,127),movie.popularity)", "score": -0.7130612637189574, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<=,127),movie.popularity)", "score": -0.7414500504935291, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,127), movie.id),movie.popularity)", "score": -0.7888097880160543, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.vote_average)", "score": -0.808330131942603, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity)", "score": -0.8357732278682228, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.revenue)", "score": -0.9026903834703884, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,127),movie.popularity)", "score": -0.9245171999968949, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2077037969991566, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.2566478887753355, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.264997607752422, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,production_country.movie_id), country.name),country.name))", "score": -0.2759982859654614, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,production_company.company_id), country.name),country.name))", "score": -0.2954717058252298, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.30017455540014354, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,production_company.company_id), country.name),country.name))", "score": -0.30910318256657865, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_winner.movie_id,production_country.iso_3166_1),movie.runtime,=,art direction (black-and-white)), country.name),country.name))", "score": -0.31227555011354, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3142594149451123, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,production_country.iso_3166_1),movie.runtime,=,art direction (black-and-white)), country.name),country.name))", "score": -0.3210776802909516, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,production_company.movie_id), country.name),country.name))", "score": -0.3235834655306004, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3308397901260404, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.33163559695906947, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.33622165126904036, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}, {"orig_question": "In which countries are movies produced that were nominated for an oscar in the subcategory of art direction (black-and-white)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,art direction (black-and-white)),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,country.iso_3166_1), country.name),country.name))", "score": -0.3380486883108786, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (black-and-white)), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,evil doctor), movie.id),movie.vote_count)", "score": -0.06775646348044458, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor), movie.id),movie.vote_count)", "score": -0.15486080614794465, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,evil doctor), movie.vote_count),movie.vote_count)", "score": -0.2617882576699719, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.27726595962213796, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.27774752392193014, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor), movie.vote_count),movie.vote_count)", "score": -0.3208092968349689, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,!=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.3604366193287622, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.37408966718764486, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.37775039791398196, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,evil doctor), movie.id),movie.vote_count)", "score": -0.3992784010622648, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count,!=,evil doctor), movie.id),movie.vote_count)", "score": -0.40231208269974655, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,evil doctor), movie.id),movie.revenue)", "score": -0.41452979801138323, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),language.name,!=,evil doctor), movie.id),movie.vote_count)", "score": -0.41709728266683643, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,evil doctor), movie.id),movie.vote_count)", "score": -0.43535158110717037, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count for movies with a keyword other than evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.4433800888945428, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.025058748804440256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,160583018), movie.vote_average),movie.vote_average))", "score": -0.4100159338195226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.revenue,>=,160583018),movie.vote_average), movie.vote_average))", "score": -0.4855346522417676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.6845636236466817, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.status))", "score": -0.7149162630303181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.7242322946622153, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_count))", "score": -0.7280194501145161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_count),movie.vote_average))", "score": -0.7467643128693453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.popularity))", "score": -0.7665733436806477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.status),movie.vote_average))", "score": -0.8103515015900484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), oscar.year),movie.vote_average))", "score": -0.8193860756218783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8364036547936848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,160583018), movie.vote_average),movie.vote_average))", "score": -0.8514732948024175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.popularity),movie.vote_average))", "score": -0.8705067740738741, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.revenue,<=,160583018),movie.vote_average), movie.vote_average))", "score": -0.877496614226402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.10544349032082127, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.16026752802924416, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.18859328780076634, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))", "score": -0.23284356151781638, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2666288537386664, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.2969519362632168, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2016-11-20),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2990701059408467, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3121502345913599, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.34076737191871376, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))", "score": -0.34150128874022667, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3416746910363932, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.34278039287895645, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.3801017247444365, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.title),movie.title))", "score": -0.39001262426384353, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.title),movie.title))", "score": -0.41501601757687784, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.death_day))", "score": -0.18086709997078287, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.name))", "score": -0.2573704960050236, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.name),person.death_day))", "score": -0.2782842757405888, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.name),person.name))", "score": -0.3547876717748295, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Atsuko Maeda), person.death_day),person.death_day))", "score": -0.4882607793661009, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.birth_day))", "score": -0.49891599437614786, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),person.death_day))", "score": -0.5200293304624211, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Atsuko Maeda),person.name), person.death_day))", "score": -0.529232095410407, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), oscar.year),person.death_day))", "score": -0.552414322108234, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.death_place))", "score": -0.5602724196614872, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Atsuko Maeda), person.death_day),person.name))", "score": -0.5647641754003416, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Atsuko Maeda), person.name),person.death_day))", "score": -0.5856779551359068, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.name),person.birth_day))", "score": -0.5963331701459538, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),person.name))", "score": -0.5965327264966618, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), oscar.year),person.name))", "score": -0.6289177181424748, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)", "score": -0.04823686176785215, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,3.7),movie.popularity)", "score": -0.3598143714020513, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,3.7), movie.id),movie.popularity)", "score": -0.6407273044154361, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.popularity),movie.popularity))", "score": -0.6639569683266018, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.popularity),movie.popularity)", "score": -0.7478810204025198, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.status,=,3.7),movie.popularity)", "score": -0.7566519709213274, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,!=,3.7),movie.popularity)", "score": -0.7815826363530338, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.popularity),movie.popularity))", "score": -0.7889415052959521, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,3.7), movie.id),movie.popularity)", "score": -0.8006185199959869, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.vote_average)", "score": -0.8202641838930955, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,3.7), movie.id),movie.popularity)", "score": -0.9116065315452032, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,3.7), movie.id),movie.popularity)", "score": -0.9230237224654365, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,3.7), movie.id),movie.popularity)", "score": -0.9419023541573506, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.id)", "score": -0.9576977948662815, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.revenue)", "score": -0.95887543761136, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
