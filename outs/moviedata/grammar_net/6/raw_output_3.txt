{"index": 0, "beams": [{"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))", "score": -0.0754131315406994, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.death_day),person.birth_day))", "score": -0.3063946770635084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1998-05-14), person.birth_day),person.birth_day))", "score": -0.35359276404051343, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.death_day))", "score": -0.4245500186589197, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),movie.release_date))", "score": -0.4361648777630762, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1998-05-14), person.birth_day),person.birth_day))", "score": -0.5475429402795271, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1998-05-14), person.death_day),person.birth_day))", "score": -0.5845743095633225, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1998-05-14), person.birth_day),person.birth_day))", "score": -0.6204503983390168, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),movie.revenue))", "score": -0.6523811737206415, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.death_day),person.death_day))", "score": -0.6555315641817288, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.name),person.birth_day))", "score": -0.6597262131181196, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.death_day),movie.release_date))", "score": -0.6671464232858852, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1998-05-14), person.birth_day),person.birth_day))", "score": -0.6714116543662385, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.id),person.birth_day))", "score": -0.6756983505692915, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}, {"orig_question": "On which dates were the persons, which didn't die on 1998-05-14, born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,!=,1998-05-14),person.birth_day), person.birth_day))", "score": -0.6858599378901999, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1998-05-14), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.16195603806513487, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.19799716370702863, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),person.name,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.2083217955511948, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.20925177090281663, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.26104413255571907, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.2745861538696814, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.27623292615295536, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.28240299766509575, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.2845293593713174, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.name,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.29308043617578583, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.3059580966760341, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.30609523614337786, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.30994591173419694, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.homepage,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))", "score": -0.3153415231097281, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}, {"orig_question": "Do countries exist which produced movies other than Teenage Mutant Ninja Turtles: Out of the Shadows?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),movie.status))", "score": -0.4624846556308234, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Teenage Mutant Ninja Turtles: Out of the Shadows), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.3386583748892804, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.death_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.3804408844686055, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.year))", "score": -0.3865595835770431, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.status),oscar.year))", "score": -0.3875403903748564, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.year))", "score": -0.40769104065121853, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.41220946845903406, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.41369427254564756, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.death_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.year))", "score": -0.42834209315636823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.death_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.status),oscar.year))", "score": -0.42932293982545705, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),person.birth_day,>,1960-04-23), person.name),oscar.year))", "score": -0.431106691524226, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),person.birth_day,>,1960-04-23), person.name),oscar.year))", "score": -0.4318385509377546, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),person.birth_day,>,1960-04-23),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.gender),oscar.year))", "score": -0.44022529711191755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.movie_id),person.birth_day,>,1960-04-23), person.name),oscar.year))", "score": -0.44360677942502724, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.movie_id),person.birth_day,>,1960-04-23), person.name),oscar.year))", "score": -0.4443386388385559, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.release_date,>,1960-04-23), person.name),oscar.year))", "score": -0.45603067018599347, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),person.name))", "score": -0.1836661233744026, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,1992-11-20), person.name),person.name))", "score": -0.19957302570546312, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),person.name))", "score": -0.2323584844925866, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.2469729239853839, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,1992-11-20), person.name),oscar.year))", "score": -0.2628798263164444, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),movie.vote_average))", "score": -0.27405976742332183, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,1992-11-20), person.name),movie.vote_average))", "score": -0.28996666975438234, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.2956652851035679, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),movie.vote_average))", "score": -0.3227521285415058, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,1992-11-20), person.name),person.name))", "score": -0.33339228788977204, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.35027446080594143, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.3643683320648035, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.sub_category))", "score": -0.36764767213251426, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),person.name))", "score": -0.36894450530559253, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),person.name))", "score": -0.38055442157066605, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.15954906419052012, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.17761227155574438, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.23478238668287085, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.25284559404809515, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.28904066046983756, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.2947441954914125, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242), person.birth_place),person.birth_place))", "score": -0.30626591464978603, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.death_place))", "score": -0.30644256396623487, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.3071038678350619, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.runtime,>,242),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3097177603069368, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),crew.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.3128074028566368, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.death_place))", "score": -0.32450577133145914, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,production_country.movie_id), person.birth_place),person.birth_place))", "score": -0.3436589452942195, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,242),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3642739829621883, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,242),merge(getData(cast),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3699775445646136, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))", "score": -0.03234174536555656, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<,1947-11-11),movie.status), movie.status))", "score": -0.37792283893577405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1947-11-11), movie.status),movie.status))", "score": -0.44428559221341857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1947-11-11), movie.status),movie.status))", "score": -0.5622254220397735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))", "score": -0.6081993349289405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), country.name),movie.status))", "score": -0.6536874802877719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.popularity))", "score": -0.654814839046594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.vote_average))", "score": -0.6861381527596677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.title),movie.status))", "score": -0.7297229798605258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1947-11-11), movie.status),movie.status))", "score": -0.7322260347755218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.original_language),movie.status))", "score": -0.7391624482443149, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),production_country.iso_3166_1))", "score": -0.7546798583680356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<=,1947-11-11),movie.status), movie.status))", "score": -0.7626921696682984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.title))", "score": -0.7692691084557737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),country.name))", "score": -0.7789620753937925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.original_language),movie.revenue))", "score": -0.30100722230417887, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.original_language),movie.popularity))", "score": -0.33216280854685465, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.3660204521511332, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.popularity))", "score": -0.397176038393809, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.revenue))", "score": -0.40117680645926157, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.popularity))", "score": -0.43233239270193735, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), language.name),movie.revenue))", "score": -0.4360379240606562, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.original_language),movie.vote_average))", "score": -0.44239158547861734, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.revenue))", "score": -0.4489899835680262, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), language.name),movie.popularity))", "score": -0.467193510303332, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.popularity))", "score": -0.480145569810702, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.status),movie.revenue))", "score": -0.4855483732317225, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.vote_average))", "score": -0.5074048153255717, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,66787908), movie.original_language),movie.revenue))", "score": -0.5129470712636248, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.status),movie.popularity))", "score": -0.5167039594743983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.24245281225375948, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.2665986538522702, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.40350264018707094, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,>,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4284380011849862, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4463011593215924, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>,TV Movie),movie.revenue),movie.vote_count))", "score": -0.45258384278349695, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,>=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.49814584186606226, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.522291683464573, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5264184445732099, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.tagline,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5475928754203778, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.revenue,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5862474114292127, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5894878291182977, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.popularity,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.6262449374080461, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,>,TV Movie),movie.revenue),movie.vote_count))", "score": -0.632286356169061, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),spoken_language.movie_id,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.6554231395602983, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.04337084800117579, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,nl),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.17261413470899134, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.19215221354404544, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,nl),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3361394645543937, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.3936549117363443, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.40382011337483986, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,production_country.movie_id),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4084435834425255, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.name),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4086532886313802, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.status))", "score": -0.41130285976665876, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,!=,nl),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4126986029251773, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4176510024219799, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1), country.name),country.name))", "score": -0.41962359847739306, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.425730203714238, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.4298781904081485, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,nl), country.name),country.name))", "score": -0.430088933544816, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))", "score": -0.023200783307402162, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>,162),movie.popularity), movie.popularity))", "score": -0.44583051541121677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,162), movie.popularity),movie.popularity))", "score": -0.46972987836852553, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.revenue))", "score": -0.6614987946923065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.status),movie.popularity))", "score": -0.6949799136600632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), person.gender),movie.popularity))", "score": -0.7090845183811325, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.original_language),movie.popularity))", "score": -0.7132695989093918, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,162), movie.popularity),movie.popularity))", "score": -0.7265064496423292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,162), movie.popularity),movie.popularity))", "score": -0.7280143279458571, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))", "score": -0.7508961987696239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.revenue),movie.popularity))", "score": -0.769903548189177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),person.gender))", "score": -0.7807183362419892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.original_language))", "score": -0.8124401666100312, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.status))", "score": -0.8143633104737091, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for movies with a longer runtime than 162?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,162), movie.popularity),movie.popularity))", "score": -0.8262112912016164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,162), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.14891810965467464, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(has_keyword),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.19493647931195396, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.category),oscar.sub_category))", "score": -0.23850471256986375, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(has_keyword),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.category),oscar.sub_category))", "score": -0.28452308222714306, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,paris),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.2849496509556996, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.29629921630233, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.category))", "score": -0.312814773590382, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.number),oscar.sub_category))", "score": -0.3410023676983583, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(has_keyword),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3423175859596093, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(has_keyword),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.category))", "score": -0.3588331432476613, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.number))", "score": -0.3628156036488938, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3700849163338259, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3828304102743677, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.category),oscar.sub_category))", "score": -0.38588581921751913, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(has_keyword),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.number),oscar.sub_category))", "score": -0.38702073735563763, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)", "score": -0.04352723707550508, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,2.9), movie.id),movie.budget)", "score": -0.5551052160035924, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,2.9),movie.budget)", "score": -0.5667808971660395, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,2.9),movie.budget)", "score": -0.6890500376889356, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,2.9),movie.runtime)", "score": -0.7340150898374868, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.runtime),movie.budget))", "score": -0.7415976590345963, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.runtime),movie.budget)", "score": -0.8200200666349757, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,2.9), movie.id),movie.budget)", "score": -0.8342340107374694, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.vote_count)", "score": -0.8398650786969882, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,2.9),movie.runtime)", "score": -0.8562842303603828, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.revenue)", "score": -0.8686978070108833, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,2.9), movie.id),movie.budget)", "score": -0.8708746694262993, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,2.9), movie.id),movie.budget)", "score": -0.874429640230104, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,2.9),movie.vote_count)", "score": -0.9173629277928983, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}, {"orig_question": "How much is the average budget of all movies with a vote average of at least 2.9?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.vote_count),movie.budget))", "score": -0.9366807738188072, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,2.9), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.023414689210767392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.3931174204699346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.vote_count),movie.revenue))", "score": -0.4988112702048966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>=,2004-03-05),movie.revenue), movie.revenue))", "score": -0.5259672994798166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6825160766511544, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), person.death_day),movie.revenue))", "score": -0.7128960146583267, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.budget),movie.revenue))", "score": -0.728564466444368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7483138070456334, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.popularity))", "score": -0.7535070250523859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7779303192291991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.vote_count))", "score": -0.8101883600247675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.budget))", "score": -0.82082373600133, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.8235162513810792, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2004-03-05),movie.revenue), movie.revenue))", "score": -0.8362635667508584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.8365916030961671, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))", "score": -0.08687911230663303, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,100), movie.vote_count),movie.vote_count))", "score": -0.2872176771197701, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.vote_count),movie.vote_count))", "score": -0.2981799845729256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,100), movie.vote_count),movie.vote_count))", "score": -0.36051849510113243, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,=,100),movie.vote_count), movie.vote_count))", "score": -0.43011619465687545, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,100), movie.vote_count),movie.vote_count))", "score": -0.5384685793105746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,100), movie.vote_count),movie.vote_count))", "score": -0.5608570599142695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,100), movie.vote_count),movie.vote_count))", "score": -0.5688257520232582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,100), movie.vote_count),movie.vote_count))", "score": -0.571819367367425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.vote_count),movie.vote_count))", "score": -0.5781126921210671, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<=,100),movie.vote_count), movie.vote_count))", "score": -0.6692997099671629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))", "score": -0.6801524732145481, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>=,100),movie.vote_count), movie.vote_count))", "score": -0.6957102002415922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,100), movie.vote_count),movie.vote_count))", "score": -0.7275653877441073, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,100), movie.vote_count),movie.vote_count))", "score": -0.7388071441237116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))", "score": -0.05294291150494246, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Tango & Cash), movie.status),movie.status))", "score": -0.294221556156117, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Tango & Cash), movie.status),movie.status))", "score": -0.5354513585261884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Tango & Cash), movie.status),movie.status))", "score": -0.5509789645366254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), oscar.sub_category),movie.status))", "score": -0.5628631481595221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.title))", "score": -0.5720086417786661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.runtime),movie.status))", "score": -0.5953019031949225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.vote_average))", "score": -0.6146535001389566, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.popularity),movie.status))", "score": -0.6184869179196539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),oscar.sub_category))", "score": -0.6208834372155252, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.runtime))", "score": -0.6304944477669778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.vote_average),movie.status))", "score": -0.632766462273139, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Tango & Cash), movie.status),movie.status))", "score": -0.6490390956096235, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Tango & Cash), movie.status),movie.status))", "score": -0.6720578133754316, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.title),movie.status))", "score": -0.6850383648343268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))", "score": -0.04435901118267793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,5500000), movie.popularity),movie.popularity))", "score": -0.37043077645648737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,5500000), movie.popularity),movie.popularity))", "score": -0.3903651624714257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.popularity),movie.popularity))", "score": -0.5064874175732257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,5500000), movie.popularity),movie.popularity))", "score": -0.551326343396795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,=,5500000),movie.popularity), movie.popularity))", "score": -0.5582334494083625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,5500000), movie.popularity),movie.popularity))", "score": -0.6547883633320453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,5500000), movie.popularity),movie.popularity))", "score": -0.6600026372616412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,5500000), movie.popularity),movie.popularity))", "score": -0.6685440033470513, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.revenue))", "score": -0.742612492016633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,5500000), movie.popularity),movie.popularity))", "score": -0.7471729997341754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,null,5500000), movie.popularity),movie.popularity))", "score": -0.7687175959144952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.status))", "score": -0.805742215088685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,5500000), movie.popularity),movie.popularity))", "score": -0.820861542437342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.vote_average),movie.popularity))", "score": -0.8278010048234137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.30375947159357714, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),country.name,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.34848721027619795, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.3521830825939506, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.3900663437265661, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.birth_place,!=,Los Alamos, New Mexico),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.budget))", "score": -0.39377124572769934, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.41274941806983156, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Los Alamos, New Mexico),movie.vote_average),movie.budget))", "score": -0.41520681597659065, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.budget))", "score": -0.41763384079704946, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.budget))", "score": -0.4197881169052568, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.birth_place,!=,Los Alamos, New Mexico),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_average),movie.budget))", "score": -0.4197965873362415, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),company.name,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.42197394385445713, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.birth_place,!=,Los Alamos, New Mexico),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.budget))", "score": -0.43514834373481154, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))", "score": -0.4426330549647895, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Los Alamos, New Mexico),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_average),movie.budget))", "score": -0.445813458513799, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the movie with the smallest popularity among all the movies that have at least one cast member that was not born in \"Los Alamos, New Mexico\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,!=,Los Alamos, New Mexico),movie.vote_average),movie.budget))", "score": -0.45405800216240877, "correct_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Los Alamos, New Mexico),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.25151521832113943, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.year),oscar.year)", "score": -0.2823399792894479, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.28870915532422015, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.year),oscar.year)", "score": -0.3195339162925286, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.3280689089828664, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,crew.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3345916243989303, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.year)", "score": -0.3428072904506374, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,crew.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3438523004260391, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3490604030843208, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3583210791114295, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.year),oscar.year)", "score": -0.35889366995117483, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.35995150625687694, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.3652628459859471, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.year),oscar.year)", "score": -0.37363205340383787, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.37977561186393316, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,>=,Foreign),movie.vote_count),movie.budget))", "score": -0.40509170979930786, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.id),movie.budget)", "score": -0.44196737333896097, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.id),movie.budget)", "score": -0.4499268469455715, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,>=,Foreign),movie.revenue),movie.budget))", "score": -0.4936489978499594, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,Foreign), movie.id),movie.budget)", "score": -0.4946060771741964, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,>=,Foreign),movie.runtime),movie.budget))", "score": -0.5000104823775473, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,>=,Foreign),movie.budget),movie.budget))", "score": -0.5285939642853918, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>=,Foreign),movie.vote_count),movie.budget))", "score": -0.5670523041553679, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,Foreign),movie.vote_count),movie.budget))", "score": -0.5811699175901595, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>=,Foreign),movie.vote_count),movie.budget))", "score": -0.6139392995901289, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.vote_count),movie.budget))", "score": -0.6390137524649617, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,Foreign), movie.id),movie.budget)", "score": -0.655316622961589, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>=,Foreign),movie.revenue),movie.budget))", "score": -0.6556096073400113, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>=,Foreign),movie.runtime),movie.budget))", "score": -0.6619710918675992, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(distinct(filter(getData(movie),movie.runtime,>=,Foreign), movie.id))", "score": -0.7189996851118592, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))", "score": -0.052936366977519356, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.death_place))", "score": -0.26604991148633417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1979-03-24),person.birth_place), person.birth_place))", "score": -0.49932433615322225, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),genre.name))", "score": -0.5141155619494384, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.death_place),person.birth_place))", "score": -0.5163820271700388, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.gender))", "score": -0.5692246456019348, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1979-03-24), person.birth_place),person.birth_place))", "score": -0.6019239851593738, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),company.name))", "score": -0.6162868637911743, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1979-03-24), person.birth_place),person.birth_place))", "score": -0.6463954278588062, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1979-03-24),person.birth_place), person.death_place))", "score": -0.6569792697846424, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1979-03-24), person.birth_place),person.birth_place))", "score": -0.6641469427704578, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_day))", "score": -0.6648543972842162, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1979-03-24), person.birth_place),person.birth_place))", "score": -0.6955632227327442, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),movie.original_language))", "score": -0.7144340772501891, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birthplaces of persons born after 1979-03-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),crew.person_id))", "score": -0.7220363516680663, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1979-03-24), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))", "score": -0.11140832650562515, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1980-04-16), person.name),person.name))", "score": -0.19927059459587326, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1980-04-16), person.name),person.name))", "score": -0.442248309693241, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.birth_day),person.name))", "score": -0.4506479703923105, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.revenue,>,1980-04-16), person.name),person.name))", "score": -0.4928876643170952, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1980-04-16), person.name),person.name))", "score": -0.49493054878985276, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1980-04-16), person.name),person.name))", "score": -0.5301105777834891, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1980-04-16), person.birth_day),person.name))", "score": -0.5385102384825586, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.birth_day))", "score": -0.5565895221297978, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.birth_place))", "score": -0.5667173049514531, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,1980-04-16), person.name),person.name))", "score": -0.5827928168801009, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.death_day))", "score": -0.5840043208663701, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.birth_place),person.name))", "score": -0.5911766790886759, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>,1980-04-16), person.name),person.name))", "score": -0.6111374382962822, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}, {"orig_question": "Which persons have a deathday after 1980-04-16?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1980-04-16), person.name),person.birth_day))", "score": -0.644451790220046, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1980-04-16), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.11396238296006096, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.20868122089488722, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.25214860751402757, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,production_company.movie_id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.2772703911448703, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.birth_day,>=,1987-08-25),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.28218153838224214, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,company.id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.29088316933064257, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>=,1987-08-25),cast.movie_id,production_company.movie_id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.29631968732668806, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,production_company.company_id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.3117702247584015, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,production_company.movie_id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.31574336407644754, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.3293561422622199, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>=,1987-08-25),cast.movie_id,production_company.company_id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.33059049732228313, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.birth_day,>=,1987-08-25), company.name),company.name))", "score": -0.3468674454488538, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>=,1987-08-25), company.name),company.name))", "score": -0.3522550186642631, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1987-08-25),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35289338107923995, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a cast member that was born on 1987-08-25 or after ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,1987-08-25), company.name),company.name))", "score": -0.3575301553260529, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>=,1987-08-25), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.runtime),movie.runtime))", "score": -0.06221735904546222, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1996-05-10), movie.runtime),movie.runtime))", "score": -0.1864377638194128, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1996-05-10), movie.runtime),movie.runtime))", "score": -0.6762241205069586, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.runtime),movie.release_date))", "score": -0.6926512624704628, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1996-05-10), movie.runtime),movie.runtime))", "score": -0.7815098842474981, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1996-05-10), movie.runtime),movie.runtime))", "score": -0.7900826414916082, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>,1996-05-10),movie.runtime), movie.runtime))", "score": -0.7960657044895925, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1996-05-10), movie.runtime),movie.release_date))", "score": -0.8168716672444134, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>=,1996-05-10),movie.runtime), movie.runtime))", "score": -0.8173575043329038, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.release_date),movie.runtime))", "score": -0.8560118603272713, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,null,1996-05-10), movie.runtime),movie.runtime))", "score": -0.8660825570914312, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,1996-05-10), movie.runtime),movie.runtime))", "score": -0.8680817888453021, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>,1996-05-10), movie.runtime),movie.runtime))", "score": -0.8824251315891161, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.runtime),movie.title))", "score": -0.8904065992319374, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of all movies, which were released after 1996-05-10?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1996-05-10), movie.runtime),movie.runtime))", "score": -0.8904144843909307, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1996-05-10), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.058719372900136214, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.title,!=,National Lampoon's Vacation), language.name),language.name))", "score": -0.171238301232552, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,!=,National Lampoon's Vacation), language.name),language.name))", "score": -0.25388643130402017, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.269900611881362, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),genre.name))", "score": -0.2927275019155559, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.title,!=,National Lampoon's Vacation),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3074281725466455, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),language.name))", "score": -0.358058656066205, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id), language.name),language.name))", "score": -0.3710220193930392, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3725238513956375, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(genre),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.37727965272998826, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),keyword.name))", "score": -0.3845435891610491, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(spoken_language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3857399475503792, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.title,!=,National Lampoon's Vacation), language.name),movie.original_language))", "score": -0.4029249684226384, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),spoken_language.iso_639_1))", "score": -0.40658081529244244, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}, {"orig_question": "In how many different languages were movies filmed excluding the movie with the title National Lampoon's Vacation? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,National Lampoon's Vacation),merge(getData(spoken_language),getData(language),has_genre.genre_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.4104886319588096, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,National Lampoon's Vacation), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.04276520885832724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,258022233), movie.vote_count),movie.vote_count))", "score": -0.3576038110659283, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_average),movie.vote_count))", "score": -0.3806017705828708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.revenue))", "score": -0.43073227383501944, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_average))", "score": -0.45503252126582083, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.title),movie.vote_count))", "score": -0.5916397342116397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.title))", "score": -0.6247872648418706, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6466128596694034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.budget))", "score": -0.6468831238926214, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.revenue),movie.vote_count))", "score": -0.6620871791274112, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.runtime),movie.vote_count))", "score": -0.6920763620764774, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,258022233), movie.vote_average),movie.vote_count))", "score": -0.6954403727904719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,258022233), movie.vote_count),movie.vote_count))", "score": -0.7079987156794232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,258022233), movie.vote_count),movie.revenue))", "score": -0.7455708760426205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.runtime))", "score": -0.748158865946607, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.12924759074947118, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.popularity),movie.popularity)", "score": -0.20564739670078114, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2361048482922682, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.24982065421083752, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2786487362786904, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.popularity),movie.popularity)", "score": -0.31250465424357815, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.revenue,>,2013-05-09), movie.id),movie.popularity)", "score": -0.31869792574270506, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3250602692119486, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.popularity),movie.popularity)", "score": -0.32622046016214745, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3293724778024213, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.33350099343660655, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.popularity),movie.popularity)", "score": -0.3550485422300004, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3566779209692047, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.status),movie.popularity)", "score": -0.3721191538441161, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.vote_average),movie.popularity)", "score": -0.3773773801305266, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Greece),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.11264032847529211, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Greece),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.status),movie.vote_average))", "score": -0.2327301317839613, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.status),movie.vote_average))", "score": -0.24510420278476386, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.vote_average),movie.vote_average))", "score": -0.26535562106487975, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.28413321724305446, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id),getData(production_country),production_country.iso_3166_1,country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.31267260882239223, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.312881901705534, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Greece),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_count))", "score": -0.31953148687395, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Greece),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.vote_average))", "score": -0.3294067313061813, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Greece),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.3369112258175125, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), movie.status),movie.vote_average))", "score": -0.34603055150571504, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id),getData(country),production_country.iso_3166_1,movie.id), movie.vote_average),movie.vote_average))", "score": -0.3564280943467879, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.363037260146948, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.vote_average))", "score": -0.36813179090319975, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.37841850463590554, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.11566573200686726, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.21235650483739052, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.release_date,=,1911-08-06), movie.title),movie.title))", "score": -0.21418725204636072, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.2302633690010352, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.2536683316163342, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1911-08-06),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.28536824407609146, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.2999588392704027, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,!=,1911-08-06), movie.title),movie.title))", "score": -0.34289553429989883, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.343887026223172, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.34456980945679033, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),movie.release_date,=,1911-08-06), movie.title),movie.title))", "score": -0.3457177734321422, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,=,1911-08-06), movie.title),movie.title))", "score": -0.35918977112125205, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3682659594733348, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3771892391690864, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,=,1911-08-06), movie.title),movie.title))", "score": -0.3790199863780566, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)", "score": -0.02999008245068912, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,2006-03-30), movie.id),movie.runtime)", "score": -0.43456120231323486, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),oscar.year)", "score": -0.6553534155494126, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2006-03-30), movie.id),movie.runtime)", "score": -0.7065733412827079, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.vote_count)", "score": -0.7361610160385332, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),person.birth_day)", "score": -0.7955995056581566, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.vote_average)", "score": -0.7963671880914788, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,2006-03-30), movie.id),movie.runtime)", "score": -0.8011305339155459, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),oscar_nominee.movie_id)", "score": -0.8030276511817905, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),person.death_day)", "score": -0.8034948545402821, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.release_date)", "score": -0.8103765322898905, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),oscar.number)", "score": -0.8181613989637814, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.runtime),movie.runtime)", "score": -0.8243164275666327, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.release_date),movie.runtime)", "score": -0.8306381869902502, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies released on 2006-03-30", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),oscar_nominee.oscar_id)", "score": -0.8466442878051692, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-03-30), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),oscar.year))", "score": -0.17371506438660705, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.21184405823324456, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>=,127.085), person.name),oscar.year))", "score": -0.22979074401072896, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),movie.vote_average))", "score": -0.23118296478043188, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>=,127.085), person.name),person.name))", "score": -0.2679197378573665, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>=,127.085), person.name),movie.vote_average))", "score": -0.2872586444045538, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),oscar.year))", "score": -0.28793241358466903, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), oscar.year),oscar.year))", "score": -0.3017621420731181, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),person.name))", "score": -0.3260614074313065, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), oscar.year),person.name))", "score": -0.3398911359197556, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), movie.vote_average),oscar.year))", "score": -0.34228202581872064, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,>=,127.085), person.name),oscar.year))", "score": -0.34400809320879094, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),oscar.year))", "score": -0.34514626971615064, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085), person.name),movie.vote_average))", "score": -0.3454003139784938, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there years in which people were nominated for an oscar for a movie with a popularity equal to or less than 127.085?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>=,127.085), oscar.year),oscar.year))", "score": -0.35783782169724, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,<=,127.085),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.03202982921631973, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average)", "score": -0.3047557330649512, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,Illuminata), movie.id),movie.vote_average)", "score": -0.6215341574416038, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.runtime)", "score": -0.7463766018821595, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_count)", "score": -0.7704027910914872, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7975474407986815, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,Illuminata), movie.id),movie.vote_average)", "score": -0.799303221087155, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average))", "score": -0.8054036972025642, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),oscar.year)", "score": -0.8268546951284875, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Illuminata), movie.id),movie.vote_average)", "score": -0.8486326512140175, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,=,Illuminata), movie.id),movie.vote_average)", "score": -0.8557170116019839, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.runtime),movie.vote_average)", "score": -0.8649378149957366, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,Illuminata), movie.vote_average),movie.vote_average)", "score": -0.8942600612902353, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),company.name,=,Illuminata), movie.id),movie.vote_average)", "score": -0.900613202361842, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_count),movie.vote_average)", "score": -0.918597384444773, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.12076896676173798, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.1577467927103973, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.2630476776093677, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2.3),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.28723575443547933, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.30002550355802704, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.31450308184743153, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,=,2.3), language.name),language.name))", "score": -0.31766231090240893, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.3427041916645483, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2.3),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.3484102037886222, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,2.3), language.name),language.name))", "score": -0.3587476712286473, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.37234404160785967, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.3756775312005744, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.37957685113631673, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.38583805765945356, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "To which languages were movies with a rating of 2.3 translated to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,2.3), language.name),language.name))", "score": -0.3872931517273858, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))", "score": -0.024200577852752758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,14661007), movie.vote_count),movie.vote_count))", "score": -0.39738035398113425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.revenue,<=,14661007),movie.vote_count), movie.vote_count))", "score": -0.5506266252323258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))", "score": -0.5895073807241715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,14661007), movie.vote_count),movie.vote_count))", "score": -0.6188593228398531, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_average))", "score": -0.676409119838354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,14661007), movie.vote_count),movie.vote_count))", "score": -0.7026390147912025, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_average),movie.vote_count))", "score": -0.7109148712879687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.revenue))", "score": -0.7225613539158076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.title),movie.vote_count))", "score": -0.7247693153149157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.title))", "score": -0.8032538239895075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,14661007), movie.vote_count),movie.vote_count))", "score": -0.8105236006485939, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.budget))", "score": -0.8283344452320307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.runtime),movie.vote_count))", "score": -0.8337010951763659, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}, {"orig_question": "What vote counts do movies with a revenue of at most 14661007 Dollars have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,14661007), movie.vote_count),movie.vote_count))", "score": -0.8353224707352638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,14661007), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,!=,5.48468), language.name),language.name))", "score": -0.10148890640579114, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,=,5.48468), language.name),language.name))", "score": -0.12135993499654125, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,5.48468), language.name),language.name))", "score": -0.23966107079744725, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,5.48468), language.name),language.name))", "score": -0.26712662047089414, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.33632387213707593, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,!=,5.48468), language.name),movie.original_language))", "score": -0.34837283699678356, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,5.48468),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.35810791537234005, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,=,5.48468), language.name),movie.original_language))", "score": -0.3682438655875337, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,5.48468),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.38283507039950593, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,!=,5.48468), language.name),language.name))", "score": -0.3859144222923912, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.48468), language.name),language.name))", "score": -0.3930272435433745, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,!=,5.48468), language.name),language.name))", "score": -0.3956955259187053, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,!=,5.48468), language.name),spoken_language.iso_639_1))", "score": -0.397595645564957, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,5.48468), language.name),language.name))", "score": -0.40578545088314133, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there any language when the movie popularity is 5.48468?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,=,5.48468), language.name),language.name))", "score": -0.4095106991765058, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,5.48468),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.06421147493529133, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.2826006228278857, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.3032602334569674, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.5216493813495617, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),movie.budget))", "score": -0.5291167890827637, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<,1985-12-11),person.death_place), person.death_place))", "score": -0.562098358059302, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),genre.name))", "score": -0.583203027228592, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.6033287013124209, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.6424625103536528, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,<,1985-12-11), person.death_place),person.death_place))", "score": -0.6439093912194949, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.birth_place))", "score": -0.6478585099976044, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),company.name))", "score": -0.6806817745964509, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,<,1985-12-11),person.death_place), person.death_place))", "score": -0.69350764923729, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,1985-12-11), person.death_place),person.death_place))", "score": -0.719724055583356, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,1985-12-11), person.death_place),person.death_place))", "score": -0.7202073896478396, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.1139450827055217, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.11959575509664093, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.15871034647915971, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.20362110578343326, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2830864104266126, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.32480278565641324, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3420982897051465, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3427466049511191, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),keyword.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3434750114990814, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3464231867791874, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.36061162868359, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3626797636721246, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3634247427440723, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.death_place))", "score": -0.371939112719712, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keyword names are there with movies that have a runtime more or the same as 199?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3747625588700206, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.04566307073037024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),language.name))", "score": -0.35015362953345175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,!=,81),movie.original_language), movie.original_language))", "score": -0.43702732816018397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,81), movie.original_language),movie.original_language))", "score": -0.48770030993546243, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.popularity))", "score": -0.4942289636055648, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.5252050229864835, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.popularity),movie.original_language))", "score": -0.6322344908076047, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),spoken_language.movie_id))", "score": -0.6633985087792098, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),spoken_language.iso_639_1))", "score": -0.6690726921478927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.6869700234201446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,!=,81),movie.original_language), language.name))", "score": -0.7237247680095606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.7238355963127105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,81), movie.original_language),movie.original_language))", "score": -0.727827336970222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.revenue))", "score": -0.736217384092015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,81), movie.original_language),movie.original_language))", "score": -0.7371018793019175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.16107208740833975, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.18536810990278302, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.20455230704053176, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.28110681076489996, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_place,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3054028332593432, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3205065796909694, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),person.death_place,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.32458703039709197, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.325831707511602, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.34480260218541264, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.35145453087284517, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),person.id,production_company.company_id), movie.title),movie.title))", "score": -0.3548502367227204, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3560896907001327, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),keyword.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.35801014609864223, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(has_keyword),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.35866283998702014, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles who are not produced by Claussen + W\u00f6bke Filmproduktion GmbH ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,movie.id), movie.title),movie.title))", "score": -0.361288134222511, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Claussen + W\u00f6bke Filmproduktion GmbH),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.12514915719822595, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.20301417437332964, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.27410349134632245, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.2921296671568392, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), movie.status),oscar.sub_category))", "score": -0.29407885641998854, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.gender,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.2993742696977009, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),country.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.300783222479989, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.category),oscar.sub_category))", "score": -0.3154315370515124, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.32473745769167156, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.category))", "score": -0.32670501174070116, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), person.name),oscar.sub_category))", "score": -0.34111803040967587, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),movie.status))", "score": -0.34123623102113076, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.34564456795858, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.35196850852142614, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3574619795126664, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.11817191047891826, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.2084007630784292, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), movie.original_language),language.name))", "score": -0.2711396384928657, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.2771778474637758, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), keyword.name),language.name))", "score": -0.27948428889357896, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_count,>=,3.5), language.name),language.name))", "score": -0.2865350521654633, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.revenue,>=,3.5), language.name),language.name))", "score": -0.28935662715283644, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.295530509741988, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), genre.name),language.name))", "score": -0.31447886443441025, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.year,>=,3.5), language.name),language.name))", "score": -0.3213360127921974, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.3323207727849453, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3338794179482408, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,>=,3.5), language.name),language.name))", "score": -0.33664364099137634, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),keyword.name))", "score": -0.3558962505927656, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5), movie.original_language),language.name))", "score": -0.36023484440493414, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_count))", "score": -0.09923852650899789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))", "score": -0.13723791061420343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,185), movie.vote_count),movie.vote_count))", "score": -0.394677017317008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,185), movie.vote_count),movie.vote_count))", "score": -0.4348785620786657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,185), movie.vote_count),movie.vote_count))", "score": -0.6203749817468633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<,185),movie.vote_count), movie.vote_count))", "score": -0.6586185217674938, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,null,185), movie.vote_count),movie.vote_count))", "score": -0.702424888000678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>,185),movie.vote_count), movie.vote_count))", "score": -0.710809473770496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_average),movie.vote_count))", "score": -0.7291995549712738, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.revenue),movie.vote_count))", "score": -0.7319518590484222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.revenue))", "score": -0.7588372390855511, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_average),movie.vote_count))", "score": -0.7671989390764793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.revenue),movie.vote_count))", "score": -0.7699512431536277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.runtime),movie.vote_count))", "score": -0.7833844385422708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,185), movie.vote_count),movie.vote_count))", "score": -0.7924421170573623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,sl), genre.name),genre.name))", "score": -0.07596055306969869, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,<,sl), genre.name),genre.name))", "score": -0.1841552331264983, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,sl), genre.name),genre.name))", "score": -0.209638363483032, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,sl), genre.name),genre.name))", "score": -0.2414366894373967, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,sl), genre.name),genre.name))", "score": -0.27631105908085757, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,sl),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2985418370747021, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,<,sl), genre.name),genre.name))", "score": -0.30897067714541343, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,>,sl), genre.name),genre.name))", "score": -0.3544521493980488, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,sl), genre.name),genre.name))", "score": -0.3619433534841949, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,sl),genre.name), genre.name))", "score": -0.36196470934796976, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,sl), genre.name),genre.name))", "score": -0.3665980145184869, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,<,sl), genre.name),genre.name))", "score": -0.3715660245541525, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,<,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,sl), genre.name),genre.name))", "score": -0.3774600392238523, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,sl), genre.name),genre.name))", "score": -0.391431475226567, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which are the genres of the movies that their original language is sl?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,sl), genre.name),person.death_place))", "score": -0.41994536367079927, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,sl),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)", "score": -0.02899942142411794, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.35383726606784194, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.42999704753090473, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,!=,pt), movie.id),movie.vote_count)", "score": -0.5013346962789041, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.vote_count),movie.vote_count)", "score": -0.5377091311580005, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.vote_count),movie.vote_count)", "score": -0.5641765303822178, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.5852398867941578, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.vote_count),movie.vote_count)", "score": -0.6138689126210632, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.revenue),movie.vote_count)", "score": -0.6228799187188131, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6456098930226041, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.vote_average),movie.vote_count)", "score": -0.6543067802425371, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,!=,pt), movie.id),movie.vote_count)", "score": -0.6721435487726557, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.revenue),movie.vote_count)", "score": -0.6990397001818759, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.revenue)", "score": -0.7234659447098319, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of movies with an original language other than \"pt\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pt), movie.id),movie.revenue)", "score": -0.7305044591076253, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pt), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Flipped), company.name),company.name))", "score": -0.1528837200529432, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Flipped), company.name),company.name))", "score": -0.20069607338805975, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Flipped),getData(production_company),company.id,production_company.company_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.24676941194863417, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Flipped), company.name),company.name))", "score": -0.2598306418316607, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),company.name,=,Flipped), company.name),company.name))", "score": -0.2747231469227879, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Flipped),getData(production_company),company.id,production_company.company_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_company.movie_id,production_company.company_id), company.name),company.name))", "score": -0.2950559296477419, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Flipped),getData(production_company),company.id,production_company.company_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3056357175900147, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_company.movie_id,company.id),company.id,production_company.company_id),company.name,=,Flipped), company.name),company.name))", "score": -0.30732901270250546, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Flipped), company.name),company.name))", "score": -0.3076429951667773, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Flipped),getData(production_company),company.id,production_company.company_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_company.movie_id,company.id), company.name),company.name))", "score": -0.3103904419585148, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,Flipped), company.name),company.name))", "score": -0.32253550025790445, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,<=,Flipped), company.name),company.name))", "score": -0.3352648856493542, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Flipped),getData(production_company),company.id,production_company.company_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_company.movie_id,production_company.company_id), company.name),company.name))", "score": -0.3384868009332859, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Flipped), company.name),company.name))", "score": -0.34195883312354497, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}, {"orig_question": "By which company was the film Flipped produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Flipped),getData(production_company),movie.id,production_company.company_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35025087114270514, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Flipped), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.06076243372808676, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3333727871262144, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1942-11-12),getData(crew),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.406966695800702, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.41411854360217926, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.420358734917376, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.43192898923109074, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.43816918054628745, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.441178739737621, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.4474189310528177, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),cast.movie_id,person.id), person.birth_place),person.birth_place))", "score": -0.45524974089598863, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.4589891853665325, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.4652293999486259, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.death_place))", "score": -0.4680670317466138, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.46909443722827676, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.47679935237101745, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.runtime)", "score": -0.04584332508302125, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.budget)", "score": -0.3843805157815217, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),oscar.number)", "score": -0.4338082913394968, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.5150000458488126, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.release_date)", "score": -0.603999595531067, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.title)", "score": -0.6075365276515383, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),oscar_nominee.oscar_id)", "score": -0.6200083799192738, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),oscar_nominee.movie_id)", "score": -0.6427360590979574, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),oscar.year)", "score": -0.648524175692446, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.6634242592344843, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)", "score": -0.7088444584746215, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.id)", "score": -0.75040322320804, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.runtime)", "score": -0.782998843079216, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.runtime)", "score": -0.8005590552232031, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the movie.vote_average of movies with the status rumored? ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.release_date),movie.runtime)", "score": -0.8153004222520526, "correct_code": "sum(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.0887068854754034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.22528331821013126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,=,69),movie.revenue), movie.revenue))", "score": -0.38502020550549787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,69), movie.revenue),movie.revenue))", "score": -0.4080365533118311, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,69), movie.revenue),movie.revenue))", "score": -0.40957778041411075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<,69),movie.revenue), movie.revenue))", "score": -0.487161280341752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.5106223756556574, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.5720542008166376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.5887688598704699, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.popularity))", "score": -0.6053780503680173, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,!=,69),movie.revenue), movie.revenue))", "score": -0.6441037671047525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,null,69), movie.revenue),movie.revenue))", "score": -0.6567627126460138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>,69),movie.revenue), movie.revenue))", "score": -0.6946430520492868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.popularity),movie.revenue))", "score": -0.7253452774712059, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What are the distinct revenues of movies with a runtime of 69 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<=,69),movie.revenue), movie.revenue))", "score": -0.7398235986347572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1888-11-24), movie.title),movie.title))", "score": -0.07780926868259322, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<,1888-11-24), movie.title),movie.title))", "score": -0.1452015453611427, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1888-11-24),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.26538323216980153, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.release_date,<,1888-11-24), movie.title),movie.title))", "score": -0.2743966007703973, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<,1888-11-24), movie.title),movie.title))", "score": -0.28601452340910943, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.release_date,<,1888-11-24), movie.title),movie.title))", "score": -0.28908025837828444, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1888-11-24), movie.title),movie.release_date))", "score": -0.3143582340502908, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,<,1888-11-24), movie.title),movie.title))", "score": -0.3298208812150615, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1888-11-24),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.status),movie.title))", "score": -0.3460792561040181, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1888-11-24), movie.title),movie.original_language))", "score": -0.34992449280031934, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1888-11-24), movie.title),movie.status))", "score": -0.3721443116531897, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1888-11-24), movie.title),movie.title))", "score": -0.3742083087314397, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1888-11-24),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.title))", "score": -0.37598422787906444, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1888-11-24), movie.title),movie.title))", "score": -0.380182253651112, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were persons nominated for an Oscar who were born before 1888-11-24?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<,1888-11-24), movie.title),movie.release_date))", "score": -0.3871389652104092, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1888-11-24),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,=,George Clooney), oscar.id),movie.vote_count)", "score": -0.4142749192429224, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.42672860394325035, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,oscar.id), movie.vote_average),movie.vote_count)", "score": -0.4471608966353981, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.46076348658020383, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),genre.name,=,George Clooney), oscar.id),movie.vote_count)", "score": -0.46260792521841043, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),oscar.number)", "score": -0.4628708612086386, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),movie.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.46756437550040564, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,=,George Clooney), oscar.id),movie.vote_count)", "score": -0.4777178172287927, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,oscar.id), movie.vote_average),movie.vote_count)", "score": -0.48119577927235163, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,=,George Clooney), oscar.id),oscar.number)", "score": -0.4813913964448891, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,oscar.id), movie.vote_average),oscar.number)", "score": -0.4833031539007864, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,=,George Clooney), oscar.id),movie.vote_count)", "score": -0.4851383327340499, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),movie.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,oscar.id), movie.vote_average),movie.vote_count)", "score": -0.4879966681925534, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,=,George Clooney), oscar.id),movie.vote_count)", "score": -0.4968193010532785, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average number of votes an oscar winning movie received, in which George Clooney was involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,George Clooney),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),oscar.number)", "score": -0.49690574384559205, "correct_code": "avg(distinct(merge(filter(getData(person),person.name,=,George Clooney),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))", "score": -0.24324045803286617, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_count),movie.status))", "score": -0.2620271003476812, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.status))", "score": -0.2741221254342019, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.runtime),movie.status))", "score": -0.2756929577551555, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), oscar.year),movie.status))", "score": -0.2970733976547494, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.vote_average),movie.status))", "score": -0.3031693346949866, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),getData(movie),oscar_winner.movie_id,movie.id), movie.runtime),movie.status))", "score": -0.31837254292643996, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.vote_count),movie.status))", "score": -0.3477168995135141, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,>,46),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.status))", "score": -0.3556016529774406, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.runtime),movie.status))", "score": -0.3557662500954805, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),getData(movie),oscar_winner.oscar_id,movie.id), movie.status),movie.status))", "score": -0.35719724069242537, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), oscar.number),movie.status))", "score": -0.35974795031208084, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,>,46),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))", "score": -0.3666744909778927, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.vote_average),movie.status))", "score": -0.4221311469107922, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.status),movie.status))", "score": -0.4244987147775205, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.06262862833682448, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cs), movie.budget),movie.budget))", "score": -0.30406829493585974, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,<,cs), movie.budget),movie.budget))", "score": -0.4028249956900254, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.4079901860968905, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.4417459934775252, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.4573693740735343, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.45905646967121977, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.49970474113918173, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,!=,cs), movie.budget),movie.budget))", "score": -0.5043812829203541, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.revenue),movie.budget))", "score": -0.5113120098831132, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,<=,cs), movie.budget),movie.budget))", "score": -0.5340900399023667, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.5507710679073928, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.original_language,=,cs), movie.budget),movie.budget))", "score": -0.5530358528270082, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,!=,cs), movie.budget),movie.budget))", "score": -0.5554475800619925, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}, {"orig_question": "How many different movie budgets are there for movies with original language cs? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.revenue))", "score": -0.5917700639693066, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,941), movie.id),movie.runtime)", "score": -0.1272202007713082, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.id),movie.runtime)", "score": -0.21538968717545776, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,941), movie.id),movie.runtime)", "score": -0.27198197743855, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,941), movie.id),movie.runtime)", "score": -0.2960141411953786, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,!=,941), movie.id),movie.runtime)", "score": -0.46089829550645084, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,941), movie.runtime),movie.runtime)", "score": -0.4797400163813442, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,941), movie.runtime),movie.runtime)", "score": -0.5679095027854938, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,941), movie.runtime),movie.runtime)", "score": -0.624501793048586, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,null,941), movie.id),movie.runtime)", "score": -0.6356381384476848, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,941), movie.runtime),movie.runtime)", "score": -0.6485339568054146, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>,941), movie.id),movie.runtime)", "score": -0.748883215177359, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,!=,941), movie.runtime),movie.runtime)", "score": -0.8134181111164869, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,941), oscar.id),movie.runtime)", "score": -0.9291576630277976, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,941), movie.id),movie.runtime)", "score": -0.9591114192130704, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with a vote count of 941?", "inferred_code": "sum(filter(getData(movie),movie.vote_count,>=,941),movie.runtime)", "score": -1.0245913445655483, "correct_code": "sum(filter(getData(movie),movie.vote_count,=,941),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.runtime),movie.runtime))", "score": -0.12408419578830564, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.runtime),movie.runtime))", "score": -0.23976643485821894, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.vote_count),movie.runtime))", "score": -0.2853863715865659, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.budget),movie.runtime))", "score": -0.3040426907565276, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.title),movie.runtime))", "score": -0.31716852731617934, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.36158571502886705, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.3764318510573449, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.runtime))", "score": -0.39779091982995485, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.398211306135656, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(getData(movie),company.name,=,MVL Incredible Productions), movie.id),movie.runtime)", "score": -0.4212557176454689, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.budget),movie.runtime))", "score": -0.4218784139238498, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),oscar.number),movie.runtime))", "score": -0.42228607966000414, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.vote_count),movie.runtime))", "score": -0.4243606160149669, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.id),movie.runtime)", "score": -0.42941212766603504, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.title),movie.runtime))", "score": -0.4442716630838931, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.18455997797718737, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_place,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.23779801222553942, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),keyword.name,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.2758663067506859, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),keyword.name,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.32910434099903796, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,!=,Frankreich), movie.revenue),movie.revenue))", "score": -0.3931840112345526, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_place,!=,Frankreich), movie.revenue),movie.revenue))", "score": -0.44642204548290465, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),keyword.name,!=,Frankreich), movie.revenue),movie.revenue))", "score": -0.48449034000805113, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.5072656789707253, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),keyword.name,!=,Frankreich), movie.revenue),movie.revenue))", "score": -0.5377283742564032, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.name,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.5605037132190773, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),oscar.category,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.5647962311195442, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),keyword.name,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.5982033863884604, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.category,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.6180342653678963, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,cast.person_id),keyword.name,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.619225900785284, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),oscar.number,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.6256809154438088, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))", "score": -0.04196610884355323, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,738), movie.popularity),movie.popularity))", "score": -0.21325666481243388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))", "score": -0.5437694213815121, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,738), movie.popularity),movie.popularity))", "score": -0.6491987484096171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.revenue))", "score": -0.7103431036284746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,738), movie.popularity),movie.popularity))", "score": -0.7355522889174608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.release_date),movie.popularity))", "score": -0.7463546132257761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,738), movie.popularity),movie.popularity))", "score": -0.7472102420924784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,738), movie.popularity),movie.popularity))", "score": -0.7639625447391154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.revenue),movie.popularity))", "score": -0.7673783635309519, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),person.gender))", "score": -0.7993764092734637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), person.gender),movie.popularity))", "score": -0.8183284138849558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,738),movie.popularity), movie.popularity))", "score": -0.8194242754470906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.status))", "score": -0.8198702146819414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}, {"orig_question": "What are the distinct popularities of movies with a vote count bigger or equal than 738 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.original_language))", "score": -0.8276063015273394, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,738), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.15217032396350091, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.19527312912504993, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.20222376638517903, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.budget))", "score": -0.24918683940025618, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.25474835138083096, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.2921392392037819, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))", "score": -0.3279706192382672, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),oscar.year),movie.budget))", "score": -0.3378310692121966, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.33928684369642403, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.runtime),movie.budget))", "score": -0.34612785636167637, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.id),movie.budget))", "score": -0.36518901960334454, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.37600637159906997, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(has_genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.37690009881022163, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.39102396095828046, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.39387920244656704, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))", "score": -0.046347772720764624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,105000000), movie.original_language),movie.original_language))", "score": -0.26123905928761815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,105000000), movie.original_language),movie.original_language))", "score": -0.45815201850564335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,105000000), movie.original_language),movie.original_language))", "score": -0.49058262493417715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,105000000), movie.original_language),movie.original_language))", "score": -0.5675510266046331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,105000000), movie.original_language),movie.original_language))", "score": -0.5925783440652594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,>,105000000),movie.original_language), movie.original_language))", "score": -0.6296778889918642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.title))", "score": -0.6481666995859996, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),language.name))", "score": -0.6866933538294688, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,105000000), movie.original_language),movie.original_language))", "score": -0.6932014324884221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,105000000), movie.original_language),movie.original_language))", "score": -0.7054739115010307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,105000000), movie.original_language),movie.original_language))", "score": -0.7169217392984137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<,105000000),movie.original_language), movie.original_language))", "score": -0.7185013192320184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), language.name),movie.original_language))", "score": -0.7237389176334545, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.popularity))", "score": -0.7278506590700999, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.13648888515340674, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.20086483401840696, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.title,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.22758127330643493, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.2784520004570546, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),person.death_day,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.27956919913579503, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.number,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.2936627558545944, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,http://nimbusfilm.dk/film/festen/?lang=en),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.3169200062659782, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.birth_place),person.name))", "score": -0.3344222006216946, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.34282794932205485, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.35118925705566684, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),person.name,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.35250508556894095, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.birth_day),person.name))", "score": -0.36164123948880744, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.title,=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.3695443786422639, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.homepage,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.37418588797018365, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}, {"orig_question": "What is the person's name who was cast for the movie with the homepage http://nimbusfilm.dk/film/festen/?lang=en?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),keyword.name,!=,http://nimbusfilm.dk/film/festen/?lang=en), person.name),person.name))", "score": -0.38176031060739424, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,http://nimbusfilm.dk/film/festen/?lang=en),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,???????), country.name),country.name))", "score": -0.12728673092799192, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,???????), country.name),country.name))", "score": -0.1516767565997697, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,???????), country.name),country.name))", "score": -0.17734718183388432, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,???????), country.name),country.name))", "score": -0.2017372075056621, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,???????), country.name),country.name))", "score": -0.3047281188647945, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,???????), country.name),country.name))", "score": -0.30752955885801214, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,???????), country.name),country.name))", "score": -0.3337330986669786, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,???????), country.name),movie.status))", "score": -0.3412879229109505, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,???????), country.name),country.name))", "score": -0.35812312433875637, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,???????), country.name),movie.status))", "score": -0.3656779485827283, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id),language.name,!=,???????), country.name),country.name))", "score": -0.36759034441128796, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,???????), country.name),country.name))", "score": -0.3692224030863466, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),language.name,!=,???????), country.name),movie.status))", "score": -0.3913483738168429, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id),movie.original_language,!=,???????), country.name),country.name))", "score": -0.39198037008306574, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),production_country.movie_id,movie.id),language.iso_639_1,production_country.iso_3166_1),language.name,!=,???????), country.name),country.name))", "score": -0.39701524581805997, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.birth_day),person.name))", "score": -0.2935138239621426, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.name),person.name))", "score": -0.2989890538448162, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Oxnard), person.birth_day),person.name))", "score": -0.3554729045770825, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.birth_day),person.name))", "score": -0.3573793806287577, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Oxnard), person.name),person.name))", "score": -0.36094813445975615, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.name),person.name))", "score": -0.36285461051143136, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,Oxnard), person.birth_day),person.name))", "score": -0.3639314649969868, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,Oxnard), person.name),person.name))", "score": -0.36940669487966044, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.death_day),person.name))", "score": -0.3844407020201984, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.birth_day),person.name))", "score": -0.3852441547391286, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.name),person.name))", "score": -0.3907193846218022, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,Oxnard), person.name),person.name))", "score": -0.4039152161567472, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.birth_day),person.name))", "score": -0.41291132902291755, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Oxnard),getData(oscar_winner),person.id,crew.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.41461688119672696, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Oxnard), person.name),person.name))", "score": -0.41838655890559123, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))", "score": -0.07534856048005167, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1930-09-08), person.death_day),person.death_day))", "score": -0.3747218295611674, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,<,1930-09-08), person.death_day),person.death_day))", "score": -0.41934997287171427, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1930-09-08), person.death_day),person.death_day))", "score": -0.4298352401383454, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,<,1930-09-08), person.death_day),person.death_day))", "score": -0.442336146501475, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_place))", "score": -0.44953053702192847, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_place),person.death_day))", "score": -0.4578876679443056, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.birth_day),person.death_day))", "score": -0.47821899109112564, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,1930-09-08), person.death_day),person.death_day))", "score": -0.5121668621577555, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,1930-09-08), person.death_day),person.death_day))", "score": -0.5494860753096873, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,1930-09-08), person.death_day),person.death_day))", "score": -0.5644016012229258, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1930-09-08), person.death_day),person.death_day))", "score": -0.610923061860376, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.birth_day))", "score": -0.6143831859953934, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),oscar_nominee.person_id))", "score": -0.7250383745558793, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}, {"orig_question": "On which dates have people died who were born before September 8th 1930?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1930-09-08), person.death_day),person.death_day))", "score": -0.7292085250519449, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1930-09-08), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.21627145922026797, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.birth_day,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.2280243062554597, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,>,1971-01-05), oscar.category),oscar.category))", "score": -0.23215539569660856, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.birth_day,>,1971-01-05), oscar.category),oscar.category))", "score": -0.24390824273180028, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.24602080321450784, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.25373656531791544, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>,1971-01-05), oscar.category),oscar.category))", "score": -0.269620501794256, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.2710294286284166, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,1971-01-05), oscar.category),oscar.category))", "score": -0.28691336510475723, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.2919153755386506, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.29204036481054046, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.2951087651469011, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))", "score": -0.32049914141054175, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.3335362078014834, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.3546404729658938, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.13329517346297148, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.1956188694948753, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2295010330623722, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), movie.status),oscar.sub_category))", "score": -0.2636882869709831, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),movie.status))", "score": -0.29876288305431875, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.category),oscar.sub_category))", "score": -0.3127474762991928, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.31406693003767794, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03),getData(oscar),oscar_nominee.oscar_id,oscar.id), movie.status),oscar.sub_category))", "score": -0.32399374222815275, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.3439577325581738, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.344378271592362, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.3496423874232378, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3524450124793677, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.353735977375959, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.35744441552898243, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),movie.status))", "score": -0.36393658007799584, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.0862112856201886, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.16455374874906198, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.20094303562215857, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.28162356972899183, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2005-01-13),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.28483302875096145, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.31333999706288795, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.33008462368928937, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3318886992299838, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,2005-01-13), genre.name),genre.name))", "score": -0.36955454418651157, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.381074064240269, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,2005-01-13), genre.name),genre.name))", "score": -0.3945212037508681, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(has_genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.39586402234885465, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),person.death_place))", "score": -0.39645379271919345, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,2005-01-13), genre.name),genre.name))", "score": -0.40779025793231494, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.40932496701173093, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.026020990773199984, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,ar), movie.id),movie.runtime)", "score": -0.4738020205539016, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.vote_count)", "score": -0.6621458905592498, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,<,ar), movie.id),movie.runtime)", "score": -0.663226550523611, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),oscar.year)", "score": -0.6874727794239605, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),oscar.number)", "score": -0.7127354810034792, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),oscar_nominee.movie_id)", "score": -0.720965154302822, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),person.death_day)", "score": -0.7246068130465012, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),oscar_nominee.oscar_id)", "score": -0.7991134242666669, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.runtime),movie.runtime))", "score": -0.8188701238541398, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.vote_average)", "score": -0.8266248704526371, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,ar), movie.id),movie.runtime)", "score": -0.832807406338455, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.release_date)", "score": -0.8366538522406753, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),person.birth_day)", "score": -0.8435989039862869, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.8574139942269587, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.10518169390856583, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.20534198854059937, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>=,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.21807171283789134, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,has_keyword.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.26716519227858815, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(oscar),has_keyword.keyword_id,oscar.id), oscar.number),oscar.number))", "score": -0.2837955799477752, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,cast.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.2952567741399561, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.2990579143779231, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),movie.runtime,>=,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.3182320074699249, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,106),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.33420074791915894, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.runtime,>,106), oscar.number),oscar.number))", "score": -0.3352057117671493, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,keyword.id), oscar.number),oscar.number))", "score": -0.3572778329914439, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(keyword),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.357961573866822, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.3718670741495845, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,has_keyword.movie_id),movie.runtime,>=,106),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.38005519158377027, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}, {"orig_question": "How many people who have received oscars have died where the movie runtime was greater than 106 minutes", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,106),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.number),oscar.number))", "score": -0.381983859876666, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,106),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.10533501396672053, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.16156791144257168, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,!=,Hrvatski),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.revenue),movie.vote_average))", "score": -0.21032055719392273, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.2991463912735985, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.33289812129529317, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))", "score": -0.35282842905874306, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.37934843309369604, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,!=,Hrvatski),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.revenue),movie.popularity))", "score": -0.3976619730628625, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.popularity))", "score": -0.41321831347675175, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.4153028921498413, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.status))", "score": -0.41603985314845404, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.41604919797866236, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.42965038340926565, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(cast),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.42982828828585284, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.43072036171133843, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_place))", "score": -0.22302100500776043, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2549984059436271, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(oscar_winner),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_place))", "score": -0.2906061861970049, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.295702328135454, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),getData(oscar_winner),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_place))", "score": -0.3000160192200219, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.30871809097269287, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(oscar_winner),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3225835871328716, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),getData(oscar_winner),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32327626761190387, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.32991730171804895, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3353787908180554, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.33827253898930887, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.3429330645552878, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.34839455365529426, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),crew.person_id,person.id),keyword.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.35128831163206325, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(filter(getData(movie),keyword.name,=,killer robot),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id), person.birth_place),person.death_place))", "score": -0.3532124207863441, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.19662948799806124, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2105227704867751, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.21797597449680456, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.23123957210180612, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.2563479345518495, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12), oscar.id),oscar.number)", "score": -0.2851822933866601, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number)", "score": -0.2870956680981475, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.29120262994580015, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.birth_day,<,1975-08-12), oscar.id),oscar.number)", "score": -0.29426698397826573, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number)", "score": -0.30972311091596616, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12), oscar.category),oscar.number)", "score": -0.3113576477670998, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,<,1975-08-12), oscar.id),oscar.number)", "score": -0.3175369055584414, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.32042449613753504, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3290212589784335, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.34085656229501715, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.id),movie.budget)", "score": -0.04875226875043359, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)", "score": -0.391475477475317, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,<=,13100000), movie.id),movie.budget)", "score": -0.6640718708857318, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,13100000), movie.id),movie.budget)", "score": -0.6752774542473977, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(filter(getData(movie),movie.revenue,>=,13100000),movie.budget)", "score": -0.7156902587507215, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.runtime),movie.budget)", "score": -0.7711613687349314, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,!=,13100000), movie.id),movie.budget)", "score": -0.796035611579995, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.id),movie.revenue)", "score": -0.8060948318168565, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.runtime),movie.budget))", "score": -0.8080406246808707, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,<,13100000), movie.id),movie.budget)", "score": -0.8709455516769945, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.id),movie.vote_count)", "score": -0.8734846621512046, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.vote_average),movie.budget))", "score": -0.8802806457606493, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(filter(getData(movie),movie.revenue,>=,13100000),movie.vote_count)", "score": -0.9010873664669036, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,13100000), movie.id),movie.budget)", "score": -0.9044751725369761, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a revenue greater than 13100000?", "inferred_code": "avg(distinct(filter(getData(cast),movie.revenue,>=,13100000), movie.id),movie.budget)", "score": -0.9045428730274071, "correct_code": "avg(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,f), person.death_place),person.death_place))", "score": -0.12757361255353317, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))", "score": -0.1807872163481079, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,f), person.birth_place),person.death_place))", "score": -0.36555640160804614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,f), person.death_place),person.death_place))", "score": -0.3951555597013794, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_place),person.death_place))", "score": -0.4187700054026209, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,f), person.death_place),person.death_place))", "score": -0.49699671141570434, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,f), person.death_place),person.birth_place))", "score": -0.5433103539398871, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.birth_place))", "score": -0.5965239577344619, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,f), person.name),person.death_place))", "score": -0.610413683054503, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,!=,f), person.death_place),person.death_place))", "score": -0.6273327442177106, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,f), person.birth_place),person.death_place))", "score": -0.6331383487558924, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,f), person.death_day),person.death_place))", "score": -0.6418628221726976, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,f), keyword.name),person.death_place))", "score": -0.6484063392854296, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.name),person.death_place))", "score": -0.6636272868490778, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_place))", "score": -0.695076409203466, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.03940711036095985, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2470596657948524, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,brain scan),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.27713014303788225, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,brain scan), movie.title),movie.title))", "score": -0.29996589583883504, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.35434161632078104, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,brain scan),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3555581271183326, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.35592767430404937, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,<=,brain scan), movie.title),movie.title))", "score": -0.3560335037447278, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(has_keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.37596301726683096, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.movie_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3972702287233998, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,=,brain scan), movie.title),movie.title))", "score": -0.398093466178405, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.41690903454554146, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,brain scan), movie.title),movie.title))", "score": -0.42820639108831027, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,keyword.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.42885160835325403, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.runtime))", "score": -0.44057109039900716, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.1309958632483158, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.16061561363860552, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.20303692999424616, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.2035785148205408, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,1986-05-30), country.name),country.name))", "score": -0.20969516914385003, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,1986-05-30), country.name),country.name))", "score": -0.21031985456868565, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,!=,1986-05-30), country.name),country.name))", "score": -0.2655026568480192, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,1986-05-30), country.name),country.name))", "score": -0.27063348557237826, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,!=,1986-05-30), country.name),country.name))", "score": -0.31959743403942914, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,1986-05-30), country.name),country.name))", "score": -0.3249996532460689, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.id,!=,1986-05-30), country.name),country.name))", "score": -0.3511904404378076, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.homepage,!=,1986-05-30), country.name),country.name))", "score": -0.3539132055440709, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,1986-05-30), country.name),country.name))", "score": -0.3569959911018005, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar.sub_category,!=,1986-05-30), country.name),country.name))", "score": -0.39232137418577356, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,!=,1986-05-30), country.name),country.name))", "score": -0.3956208019805368, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.10436932645825436, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.24922935567883542, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.36597333751706174, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Angela Grovey), person.birth_place),person.death_place))", "score": -0.41902796268550446, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.4527023871996789, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.status,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.4923246344187646, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,Angela Grovey),person.death_place), person.death_place))", "score": -0.4953940720879473, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Angela Grovey), person.death_place),person.birth_place))", "score": -0.508465816230455, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Angela Grovey),person.death_place), person.death_place))", "score": -0.5224926756345667, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.5566302677252679, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Angela Grovey), person.birth_place),person.death_place))", "score": -0.5638879919060855, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Angela Grovey), person.death_place),company.name))", "score": -0.5969641403862624, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Angela Grovey), person.death_place),person.death_place))", "score": -0.6036321322535514, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Angela Grovey), person.death_place),person.birth_place))", "score": -0.653325845451036, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}, {"orig_question": "At which place was Angela Grovey born?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Angela Grovey),person.death_place), person.death_place))", "score": -0.6554857032024302, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Angela Grovey), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.06168541614897549, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.303027463669423, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5449858497855355, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.5606266631317081, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,<,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5613647524733096, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),person.name), person.name))", "score": -0.5810635430825641, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5844234321863275, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5971221917311251, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6028984014410526, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6030696688685566, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.movie_id),person.birth_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6041320695018821, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.name))", "score": -0.6094324048671466, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,person.id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6242306434622271, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.6399481071898051, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),person.name), person.name))", "score": -0.6443219398934161, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.name))", "score": -0.17260552369407378, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.18330803426215425, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.41103985818335786, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.gender),person.name))", "score": -0.4135158351273276, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.name))", "score": -0.4468330832605716, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.birth_day), person.name))", "score": -0.46109939538291655, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.birth_day))", "score": -0.5012916399573442, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.5404238487244584, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.gender))", "score": -0.5519233419036027, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), oscar_winner.person_id))", "score": -0.5820629073714372, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.gender))", "score": -0.5975595499039628, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,!=,1938-03-04),person.name), person.name))", "score": -0.6101224989106413, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,>,1938-03-04),person.name), person.name))", "score": -0.645011506829178, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.id))", "score": -0.6467043234442826, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_place),person.name))", "score": -0.670932023844216, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.20286486075556898, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,genre.id),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.26304593076576954, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.27265479181213503, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(country),has_genre.genre_id,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.277895267991955, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.2839311626780568, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.28581574401723836, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,has_genre.movie_id),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.29092743036552765, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),genre.name,=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.29691812181349964, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,has_genre.genre_id), country.name),country.name))", "score": -0.31614529842349515, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,has_genre.genre_id), country.name),country.name))", "score": -0.3220212547429518, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id),genre.name,!=,Romance), country.name),country.name))", "score": -0.3337430584788166, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(country),has_genre.genre_id,country.iso_3166_1),movie.id,has_genre.genre_id), country.name),country.name))", "score": -0.3361325289490392, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),genre.id,has_genre.genre_id),genre.name,=,Romance), country.name),country.name))", "score": -0.3428759410021772, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,genre.id),genre.id,has_genre.genre_id), country.name),country.name))", "score": -0.3441122302368785, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there countries where any movie of romantic genre has been produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),has_genre.genre_id,has_genre.genre_id), country.name),country.name))", "score": -0.34534566358087604, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.death_place,<=,f), movie.id),movie.revenue)", "score": -0.16314383259607865, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.2684234632760484, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.3221520772887948, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.342702138729944, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.death_day,<=,f), movie.id),movie.revenue)", "score": -0.3723726737560846, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,<=,f), movie.id),movie.revenue)", "score": -0.3766409253705727, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.39532615011197453, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.3964307527426904, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.3976451479555678, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4081113048017017, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.42370156306781187, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.43163714305005585, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.4370975657321941, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.44905473917179245, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4625514927617945, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.11178168208826883, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,War),movie.budget),movie.release_date))", "score": -0.20409315498946254, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,War), movie.release_date),movie.budget)", "score": -0.37460792051111086, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,War),movie.budget),movie.release_date))", "score": -0.3849453491489239, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,War),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.39426573115069596, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,War), movie.release_date),movie.release_date)", "score": -0.4091300340310873, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.release_date))", "score": -0.43428552955135225, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,War),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.43849045317412605, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),oscar.category,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.45302505813521116, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.4533852400099667, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.release_date),movie.budget)", "score": -0.46644921710857185, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(has_genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.47286520102380836, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.release_date),movie.release_date))", "score": -0.4741452158560244, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),production_company.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.48867578570536513, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}, {"orig_question": "Whats the release date of the movie with the smallest budget in the genre War?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,movie.id),movie.budget),movie.release_date))", "score": -0.4937444776793309, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,War),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.20165602436678007, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.21464660971198082, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.22443879219116653, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.23742937753636728, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.24718939755590863, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.2732446103906858, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.31188589891425855, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.33227757998413543, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.3379411117490357, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.34055180096035415, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),oscar.year,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.3452681653293362, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,>=,Jesse), movie.vote_average),movie.vote_average)", "score": -0.35354238630555496, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),person.death_day,>=,Jesse), movie.vote_average),movie.vote_average)", "score": -0.3550603855923597, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),person.death_day,>=,1991), movie.vote_average),movie.vote_average)", "score": -0.36805097093756045, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote average of different movies having a oscar nominee with a cast character called Jesse and were nominated for an oscar in the year 1991 or later?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>=,Jesse),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.36955326532209964, "correct_code": "avg(distinct(filter(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),getData(cast),person.id,cast.person_id),oscar_nominee.person_id,person.id),getData(movie),cast.movie_id,movie.id),cast.character,=,Jesse),oscar.year,>=,1991), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))", "score": -0.02484643234674877, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.original_language,=,hi),movie.runtime), movie.runtime))", "score": -0.43353157643286977, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,<,hi), movie.runtime),movie.runtime))", "score": -0.5251452709435398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.release_date))", "score": -0.5960847999322141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,<=,hi), movie.runtime),movie.runtime))", "score": -0.6448791409729893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,hi), movie.runtime),movie.runtime))", "score": -0.6559196497200901, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))", "score": -0.6969413043589157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,hi), movie.runtime),movie.runtime))", "score": -0.7406165329393843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,hi), movie.runtime),movie.runtime))", "score": -0.7635360685762862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.release_date),movie.runtime))", "score": -0.7783506962823594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,hi), movie.runtime),movie.runtime))", "score": -0.7919509736475447, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), oscar.sub_category),movie.runtime))", "score": -0.8015864345597947, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.title))", "score": -0.8127240206467832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.title),movie.runtime))", "score": -0.8257178518342698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of the movies with original language hi?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),spoken_language.movie_id,=,hi), movie.runtime),movie.runtime))", "score": -0.8449285507322202, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,hi), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)", "score": -0.07376267599721117, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,2008-08-21), movie.id),movie.runtime)", "score": -0.22984512927613684, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,2008-08-21), movie.id),movie.runtime)", "score": -0.49344562149031995, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2008-08-21), movie.id),movie.runtime)", "score": -0.500878834431206, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.runtime),movie.runtime)", "score": -0.5459799090621041, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,2008-08-21), movie.runtime),movie.runtime)", "score": -0.7020623623410298, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.release_date),movie.runtime)", "score": -0.7511520637494229, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,null,2008-08-21), movie.id),movie.runtime)", "score": -0.7827417510153557, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,2008-08-21), movie.id),movie.runtime)", "score": -0.832085069619131, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(filter(getData(movie),movie.release_date,>=,2008-08-21),movie.runtime)", "score": -0.8325752017270369, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2008-08-21), movie.id),movie.runtime)", "score": -0.8506164893882239, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,2008-08-21), movie.release_date),movie.runtime)", "score": -0.9072345331572808, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(filter(getData(movie),movie.release_date,<=,2008-08-21),movie.runtime)", "score": -0.9118567837887157, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,2008-08-21),movie.runtime),movie.runtime))", "score": -0.9148784091084963, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies released on 2008-08-21?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,=,2008-08-21), movie.id),movie.runtime)", "score": -0.9518865167929158, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2008-08-21), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.11488347234075875, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),country.name))", "score": -0.13239065415024928, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.14980656570612075, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.22105040602259948, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,56000), country.name),country.name))", "score": -0.23140008835409479, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<,56000), country.name),country.name))", "score": -0.24416079195001786, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,=,56000), country.name),country.name))", "score": -0.34583224404921165, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,=,56000), country.name),country.name))", "score": -0.37238214476691084, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),country.name))", "score": -0.3951203923721454, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4080328663353909, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(production_country),movie.id,production_country.movie_id),getData(production_country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4303181089675382, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),country.name))", "score": -0.4440056129387173, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),movie.status))", "score": -0.44598579157539286, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,<=,56000), country.name),country.name))", "score": -0.446589890002909, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),movie.status))", "score": -0.4622397499732116, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.19068073455127887, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.20021098080906086, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.34193778756889515, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.death_place))", "score": -0.37986551571520977, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Michele Proude), person.birth_place),person.death_place))", "score": -0.38939576197299175, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.status,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.3991454613569658, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),country.name,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.4333116186026018, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.4891910028818529, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Michele Proude), person.birth_place),person.death_place))", "score": -0.531122568732826, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.5452301443729084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_place,=,Michele Proude), person.birth_place),person.birth_place))", "score": -0.5547603906306904, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.status,=,Michele Proude), person.birth_place),person.death_place))", "score": -0.5883302425208967, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Michele Proude),person.birth_place), person.birth_place))", "score": -0.6206693278727471, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),country.name,=,Michele Proude), person.birth_place),person.death_place))", "score": -0.6224963997665327, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}, {"orig_question": "What's the birth place of Michele Proude?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),company.name))", "score": -0.6609252427879255, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Michele Proude), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))", "score": -0.03387829321945901, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count))", "score": -0.46168175559068914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_average))", "score": -0.5282559137376666, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_average))", "score": -0.5396446328195452, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.popularity),movie.vote_average))", "score": -0.5450911264451861, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.vote_average),movie.vote_average))", "score": -0.5601180280609697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), oscar.year),movie.vote_average))", "score": -0.5610654096635699, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.popularity))", "score": -0.5665940366270661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.revenue))", "score": -0.5695384464743256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.status),movie.vote_average))", "score": -0.6133944730790972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Rumored),movie.vote_average), movie.vote_average))", "score": -0.6378679183981149, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.status))", "score": -0.6719128213408112, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.revenue),movie.vote_average))", "score": -0.6956472735437274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.runtime))", "score": -0.696878644037497, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),oscar.year))", "score": -0.7065970621588349, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.12592299844641514, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1974952885015426, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,fa), country.name),country.name))", "score": -0.22493209195440753, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,fa), country.name),country.name))", "score": -0.24403405901646494, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.24988756222673553, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.26424661290917506, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.2808900195189245, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))", "score": -0.3162890098381824, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.316638886634368, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,fa), country.name),country.name))", "score": -0.34304315252445733, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.3506794609190071, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_country.iso_3166_1,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.35787904261936665, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,=,fa), country.name),country.name))", "score": -0.36222456076468823, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37132596989848854, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))", "score": -0.37309800817706457, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,!=,m),movie.revenue),movie.release_date))", "score": -0.15793096449619026, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))", "score": -0.20883073332409996, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.popularity,!=,m),movie.revenue),movie.release_date))", "score": -0.23408471538473818, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m),movie.revenue),movie.release_date))", "score": -0.239952878589424, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),movie.revenue,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.29725655382622485, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,!=,m),movie.revenue),movie.release_date))", "score": -0.30278687817577843, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),oscar.year,!=,m),movie.revenue),movie.release_date))", "score": -0.3134471603353104, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),movie.revenue),movie.release_date))", "score": -0.3205344909877459, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),language.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3232550797868851, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),language.name,!=,m),movie.revenue),movie.release_date))", "score": -0.3278167680454887, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,!=,m),movie.revenue),movie.release_date))", "score": -0.33299046476156174, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3440118797750913, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,!=,m),movie.revenue),movie.release_date))", "score": -0.3703861009761149, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue,!=,m),movie.revenue),movie.release_date))", "score": -0.37338751867448705, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the oscar nominated movie with the highest revenue, that has people which don't have the gender m?", "inferred_code": "done(extractValues(max(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.4059700029565039, "correct_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2929045608081254, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.3304447558011713, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33702983565682015, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.person_id), company.name),company.name))", "score": -0.343901086987061, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,<,m),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.34886299230126394, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,>=,1959),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3525412680960715, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(company),oscar_nominee.person_id,company.id), company.name),company.name))", "score": -0.3538609718758225, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,1959),oscar_nominee.movie_id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.3600918416389831, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,m),oscar_nominee.movie_id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.3601971111339939, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,m),oscar_nominee.movie_id,movie.id), company.name),company.name))", "score": -0.36416147506455837, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,1959),oscar_nominee.movie_id,movie.id), company.name),company.name))", "score": -0.36426674455956914, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,<,m),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.3693223847894255, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(company),oscar_nominee.oscar_id,company.id), company.name),company.name))", "score": -0.37293414966185806, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.3763347763125313, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.3766980257308189, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.23472450378138823, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),person.name,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.2660104083250136, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),oscar.year,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.2733444636549319, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Libby Villa),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.283066640045235, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.30463036819855727, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),person.name,=,Libby Villa),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.31435254458886036, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),oscar.year,=,Libby Villa),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3216865999187787, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Libby Villa),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3487483233998471, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Libby Villa),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.352972504462404, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.35747958446218236, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),person.name,=,Libby Villa),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3752129478991747, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),oscar.year,=,Libby Villa),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.38141681977634145, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),person.name,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3887654657129531, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.oscar_id),person.name,=,Libby Villa),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3911169473034786, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many oscar categories did Libby Villa win an oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Libby Villa),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.4125370524943428, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Libby Villa), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Documentary), movie.id),movie.revenue)", "score": -0.1385323259254592, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Documentary), movie.id),movie.revenue)", "score": -0.42984263259678923, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,spoken_language.iso_639_1),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.46401988458465315, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,movie.id),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.47111857536495405, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.title,=,Documentary), movie.id),movie.revenue)", "score": -0.49143181082960763, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,movie.id),movie.title,=,Documentary), movie.id),movie.revenue)", "score": -0.4985305016099085, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,spoken_language.iso_639_1),oscar.category,=,Documentary), movie.id),movie.revenue)", "score": -0.5144351080996933, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,spoken_language.iso_639_1),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.5173507716006661, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.5181252379127678, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,has_genre.genre_id),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.5202807353981506, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,movie.id),oscar.category,=,Documentary), movie.id),movie.revenue)", "score": -0.5215337988799942, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,movie.id),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.524449462380967, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),has_genre.movie_id,movie.id),person.id,spoken_language.iso_639_1),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.5253637286095387, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),has_genre.movie_id,movie.id),person.id,movie.id),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.5324624193898396, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),company.name,=,Documentary), movie.id),movie.revenue)", "score": -0.5383181639666031, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)), movie.title),movie.title))", "score": -0.1449554652373748, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)), movie.runtime),movie.title))", "score": -0.14507366584882975, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.title))", "score": -0.236065018969581, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.24524682019590205, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,159), movie.title),movie.title))", "score": -0.26962851043488123, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,!=,159), movie.runtime),movie.title))", "score": -0.26974671104633613, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.27276980642323667, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.title))", "score": -0.34742997249823415, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.3771886662758342, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.runtime),movie.title))", "score": -0.37730686688728915, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)),movie.runtime),movie.title))", "score": -0.38194084418255586, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)), movie.vote_count),movie.title))", "score": -0.3821698229409469, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3898219233847075, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,documentary (feature)), movie.release_date),movie.title))", "score": -0.40354174810813886, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime under 159 have been nominated for an oscar in a category other than documentary (feature)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.title))", "score": -0.4070836864123921, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,documentary (feature)),movie.runtime,<,159), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))", "score": -0.04784144472432672, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,157), movie.popularity),movie.popularity))", "score": -0.2481983379657322, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,157), movie.popularity),movie.popularity))", "score": -0.37073142092776834, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,157), movie.popularity),movie.popularity))", "score": -0.5481255130107456, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,157), movie.popularity),movie.popularity))", "score": -0.5607934669787937, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.revenue))", "score": -0.6522620896539593, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.revenue),movie.popularity))", "score": -0.7047767023286724, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.release_date),movie.popularity))", "score": -0.706702349587431, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), person.gender),movie.popularity))", "score": -0.7087013105592632, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),person.gender))", "score": -0.7332003096780682, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.status),movie.popularity))", "score": -0.7338487486085796, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,null,157), movie.popularity),movie.popularity))", "score": -0.7473874763782078, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.original_language),movie.popularity))", "score": -0.7870615104875469, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,<=,157), movie.popularity),movie.popularity))", "score": -0.7882738060980046, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with a runtime smaller or equal than 157 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.release_date))", "score": -0.8299002627572918, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<=,157), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea), movie.id),movie.budget)", "score": -0.09189396712896167, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.budget)", "score": -0.17265917583271637, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)", "score": -0.20450896322779982, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea), movie.id),movie.budget)", "score": -0.24832591443452184, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)", "score": -0.33765145416420345, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.budget)", "score": -0.36366681629190895, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(merge(filter(getData(country),country.name,=,South Korea),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)", "score": -0.37687231816366007, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,=,South Korea),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.budget)", "score": -0.37866282200212864, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,South Korea), movie.id),movie.budget)", "score": -0.3992218273192013, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea), movie.id),movie.budget)", "score": -0.40790715048719467, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,South Korea), movie.id),movie.budget)", "score": -0.41882735051787584, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,South Korea),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.budget)", "score": -0.41890059520861217, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4277149954421504, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(filter(merge(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Korea),movie.budget)", "score": -0.4332327410464795, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget for all movies which have been produced in South Korea?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea), movie.release_date),movie.budget)", "score": -0.4373859815384689, "correct_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Korea),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.09877318557118997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.28321731876349077, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.2834402832733687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),language.name))", "score": -0.2906103790579196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.2970172577436425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,<,6.24827), language.name),language.name))", "score": -0.30408273130113594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.3444607441880288, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.3496726032870961, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.3515262177455223, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.356842699071647, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.46938221756136045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827), language.name),genre.name))", "score": -0.5148968965261066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827),movie.original_language), movie.original_language))", "score": -0.525109704839678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,<,6.24827),language.name), movie.original_language))", "score": -0.5263195189538565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movie popularity less than 6.24827?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,<,6.24827), language.name),genre.name))", "score": -0.5325363907038573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.04433343725759187, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,214), movie.original_language),movie.original_language))", "score": -0.2690956665064732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,214), movie.original_language),movie.original_language))", "score": -0.38039845953244367, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.440934005292657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),language.name))", "score": -0.49566540334853926, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<,214), movie.original_language),movie.original_language))", "score": -0.5353122074149171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,214), movie.original_language),movie.original_language))", "score": -0.5592159999396245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.6080864169332212, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,214), movie.original_language),movie.original_language))", "score": -0.6151011066685468, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.6395074798401862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.6488553916446941, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.popularity))", "score": -0.6529409012618999, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6668881639362444, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<=,214),movie.original_language), movie.original_language))", "score": -0.6719957110362884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<=,214), movie.original_language),language.name))", "score": -0.6824010758870859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.2104929253299956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.22249433746804292, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.status,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.24721037412871102, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.gender,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.2752166669015242, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.sub_category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.2876623172207671, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,person.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.28773517754670297, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.2909011792587212, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.sub_category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.31347233493150256, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.31944733678263415, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,person.id),movie.status,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3244526263454184, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3413557488631956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.34542702717746154, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,person.id),person.gender,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3524589149649736, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.35803702824407635, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.status,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3770429242732603, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.05710223487752416, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2130390828005649, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))", "score": -0.2241210703989028, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2394763452179804, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2644178923994967, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2846143700256276, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.34295024075407016, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.3457141834770478, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),getData(production_company),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3524244797338685, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,movie.id), movie.title),movie.title))", "score": -0.3763698333054516, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))", "score": -0.40548119188148474, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.40929154834576065, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))", "score": -0.4332449370034341, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.4442546521597535, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.44428330866996546, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)", "score": -0.0490705201292013, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<=,732), movie.id),movie.popularity)", "score": -0.27280803572408185, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.popularity),movie.popularity)", "score": -0.5229004215891186, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.revenue)", "score": -0.6874243831194612, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>,732), movie.id),movie.popularity)", "score": -0.701896142827271, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<=,732), movie.popularity),movie.popularity)", "score": -0.7466379371839992, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(filter(getData(movie),movie.vote_count,>=,732),movie.popularity)", "score": -0.7572734009148188, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.popularity),movie.popularity))", "score": -0.7729192963488458, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<,732), movie.id),movie.popularity)", "score": -0.7817706503742516, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.vote_average),movie.popularity)", "score": -0.7960044325746273, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.vote_average),movie.popularity))", "score": -0.8033087319381593, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.vote_average)", "score": -0.8068623442167147, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(filter(getData(movie),movie.vote_count,>,732),movie.popularity)", "score": -0.8638660562609936, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.id)", "score": -0.8949233581753361, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies with a vote count higher than or equal to 732?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<=,732), movie.id),movie.revenue)", "score": -0.9111618987143417, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,732), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.year),oscar.year))", "score": -0.28880762906300333, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>,6.4), oscar.year),oscar.year))", "score": -0.314998347862266, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.number),oscar.year))", "score": -0.32433659044982066, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.year),oscar.year))", "score": -0.32511338479090024, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.year),oscar.year))", "score": -0.33288874647402045, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>,6.4), oscar.number),oscar.year))", "score": -0.3505273092490833, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_count,>,6.4), oscar.year),oscar.year))", "score": -0.3513041035901629, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>,6.4), oscar.year),oscar.year))", "score": -0.3590794652732831, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.number),oscar.year))", "score": -0.36064234617771757, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.number),oscar.year))", "score": -0.3684177078608378, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.year),oscar.year))", "score": -0.36919450220191735, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.year),oscar.year))", "score": -0.38366904446414496, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_count,>,6.4), oscar.number),oscar.year))", "score": -0.3868330560820863, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>,6.4), oscar.year),oscar.year))", "score": -0.3912754094961421, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there subcategories for Oscar-winning movies with an average of more than 6.4 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), person.death_day),oscar.year))", "score": -0.3913460193100799, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,6.4), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2000-09-14), movie.runtime),movie.budget))", "score": -0.2317417571612168, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,2000-09-14), movie.runtime),movie.budget))", "score": -0.23468420005519874, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>=,2000-09-14),movie.runtime),movie.budget))", "score": -0.3421139826023136, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,2000-09-14),movie.runtime),movie.budget))", "score": -0.5014936362349545, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2000-09-14), movie.runtime),movie.budget))", "score": -0.5292666489549447, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2000-09-14), movie.runtime),movie.budget))", "score": -0.5504304860078264, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,2000-09-14), movie.runtime),movie.budget))", "score": -0.5533729289018083, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,!=,2000-09-14),movie.runtime),movie.budget))", "score": -0.6210065276318346, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>=,2000-09-14),movie.runtime),movie.budget))", "score": -0.6216624860608135, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,2000-09-14), movie.runtime),movie.budget))", "score": -0.6514689121686388, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,2000-09-14), movie.runtime),movie.budget))", "score": -0.6544113550626207, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.year,>=,2000-09-14), movie.runtime),movie.budget))", "score": -0.7121133255132008, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,2000-09-14), movie.runtime),movie.budget))", "score": -0.7288385082501918, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>,2000-09-14),movie.runtime),movie.budget))", "score": -0.7592616837428068, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2000-09-14), movie.vote_count),movie.budget))", "score": -0.7610856692772359, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>=,2001-07-02),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.17833609548172935, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.184492275665818, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))", "score": -0.23485662520902578, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.24622169994862952, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))", "score": -0.24883133761115286, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.2885163981488106, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>=,2001-07-02),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3149929265725863, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3189662219796763, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),person.birth_day,>=,2001-07-02),oscar_nominee.movie_id,oscar_nominee.oscar_id), oscar.number),oscar.number))", "score": -0.3336841582894649, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.35024582243162217, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.movie_id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))", "score": -0.3587029604623741, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),person.birth_day,>=,2001-07-02),oscar.id,oscar_nominee.oscar_id), oscar.number),oscar.number))", "score": -0.3615278456533326, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))", "score": -0.36211452630832636, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),person.birth_day,>=,2001-07-02),oscar_nominee.movie_id,oscar_nominee.oscar_id), oscar.number),oscar.number))", "score": -0.3759653724023815, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers are counted for oscar nominated persons which died after or on 2001-07-02?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>=,2001-07-02),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),person.birth_day,>=,2001-07-02),oscar_nominee.movie_id,oscar_nominee.oscar_id), oscar.number),oscar.number))", "score": -0.3770245200096188, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2001-07-02), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.05943104612225096, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.17998535632358195, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.popularity)", "score": -0.2039335847029891, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity)", "score": -0.3233585548476111, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.popularity)", "score": -0.3244878949043201, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.34793457140460415, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.3821469790997793, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,<,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.38555836144926875, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.40407346095176844, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),spoken_language.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.40899492534992066, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4125836531249017, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(language),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.42126781300437904, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity)", "score": -0.44391286504894206, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(has_keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4442161324510634, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the average popularity of movies with the keyword rock opera?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,rock opera),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.movie_id), movie.id),movie.popularity)", "score": -0.44508225058620254, "correct_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,rock opera),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))", "score": -0.06583809172298061, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1988-02-28), person.death_day),person.death_day))", "score": -0.31908273389126407, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1988-02-28), person.death_day),person.death_day))", "score": -0.329343554280058, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1988-02-28), person.death_day),person.death_day))", "score": -0.41919741844321834, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.death_day),person.death_day))", "score": -0.4768541834273492, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1988-02-28), person.death_day),person.death_day))", "score": -0.5556077032306348, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.death_day),person.death_day))", "score": -0.5662724456706201, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1988-02-28), person.death_day),person.death_day))", "score": -0.5934578857340966, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1988-02-28), person.death_day),person.death_day))", "score": -0.6019845872142469, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1988-02-28),person.death_day), person.death_day))", "score": -0.6128842513717245, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1988-02-28), person.death_day),person.death_day))", "score": -0.6320848732211743, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.649545757281885, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,1988-02-28), person.death_day),person.death_day))", "score": -0.6724420606115018, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<=,1988-02-28), person.death_day),person.death_day))", "score": -0.6827028659827192, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1988-02-28), person.death_day),person.death_day))", "score": -0.703009896511503, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance), movie.release_date),movie.release_date))", "score": -0.0877270153256568, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.13195367917019366, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.release_date),movie.release_date))", "score": -0.17038988176173245, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,<,Romance), movie.release_date),movie.release_date))", "score": -0.3389165065219515, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance), movie.budget),movie.release_date))", "score": -0.3651188212171882, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.4027651240642208, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),oscar.category,=,Romance), movie.release_date),movie.release_date))", "score": -0.40531405503976764, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(has_genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.4067612823289519, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.4137898262985449, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(has_genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance), movie.release_date),movie.release_date))", "score": -0.42434690801448827, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),genre.name,=,Romance), movie.release_date),movie.release_date))", "score": -0.43353599991293806, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.budget),movie.release_date))", "score": -0.44181161869227803, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.4529447481398359, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance), movie.release_date),movie.budget))", "score": -0.45423830604294174, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}, {"orig_question": "What are the release dates for movies that have a minimum budget and the genre Romance? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),oscar.category,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.45691599363728297, "correct_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Romance),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.23125121216721414, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.23312133447586622, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))", "score": -0.24398340405344882, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,production_country.movie_id), person.birth_place),person.birth_place))", "score": -0.30628232527051463, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar.year,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.31375789639020524, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.title,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3219703804226513, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,spoken_language.movie_id), person.birth_place),person.birth_place))", "score": -0.3374345502874861, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.3400671177081595, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar.year,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3466161512662095, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.36408741371910547, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.death_place))", "score": -0.36595753602775755, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Little Fockers),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.36917474953137247, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.death_place))", "score": -0.3768196056053401, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3781417860008803, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.378720783484392, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.07219321236226445, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.20362066948480767, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.22722290101088286, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.budget,>=,13000000), person.death_place),person.death_place))", "score": -0.24901103856626927, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,13000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.33774456483279947, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3445878734224193, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3454557670445804, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,13000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3464666374358397, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),person.death_day,person.id), person.death_place),person.death_place))", "score": -0.3728411436125172, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3791332080109793, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.38471133499583293, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,has_genre.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.38743015769128375, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3968498228238394, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.39817862168347723, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Which different death places are there for oscar nominees who played in movies with a budget of 13000000 or more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,13000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.40016313070473714, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,13000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.04181897302892433, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.26040255852857913, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.29183471977122527, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.31570021223222094, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3212201425218178, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3300502387159598, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,!=,m), movie.title),movie.title))", "score": -0.3328067904549433, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3340886542991765, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3375402084538668, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.35149702884821965, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3525027773439638, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_place,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.36283452489994455, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.37632125852535714, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3841303078368315, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.39156067887806656, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.19664196886999305, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.2951286975876428, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.300164820414674, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park), person.birth_place),person.gender))", "score": -0.3029357218191755, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),crew.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.307602129459601, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.31011414474560844, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,keyword.id),keyword.name,!=,national park), movie.popularity),person.gender))", "score": -0.31208296086963866, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park), language.name),person.gender))", "score": -0.3142135354772737, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park), movie.popularity),person.gender))", "score": -0.3383035167856749, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,keyword.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.3407552191279125, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park), person.name),person.gender))", "score": -0.3418608793667719, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,national park), person.birth_place),person.gender))", "score": -0.34341406762127497, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,!=,national park), person.gender),person.gender))", "score": -0.347702492073951, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,national park), country.name),person.gender))", "score": -0.34819855623869206, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}, {"orig_question": "Of which genders are crew members of movies with any keywords other than national park?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,national park), movie.popularity),person.gender))", "score": -0.35409731056842403, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,national park),merge(merge(getData(has_keyword),merge(getData(movie),getData(crew),movie.id,crew.movie_id),has_keyword.movie_id,movie.id),getData(person),crew.person_id,person.id),keyword.id,has_keyword.keyword_id), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.15947426395281636, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.18037455108851694, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.22245546017002657, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.24335574730572712, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,!=,Italiano), movie.id),movie.vote_average)", "score": -0.2626536639864933, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.28355395112219384, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,<,Italiano), movie.id),movie.vote_average)", "score": -0.3079283142732738, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,!=,Italiano), movie.id),movie.vote_average)", "score": -0.32563486020370347, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.34653514733940405, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,<,Italiano), movie.id),movie.vote_average)", "score": -0.370909510490484, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(language),movie.original_language,!=,Italiano), movie.id),movie.vote_average)", "score": -0.3847841039584336, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,<,Italiano), movie.id),movie.vote_average)", "score": -0.4111077143069507, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(language),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.43217531736720727, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.vote_average),movie.vote_average))", "score": -0.4738954382538783, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.48249392659964535, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)", "score": -0.10795117555274765, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.vote_average),movie.vote_average)", "score": -0.17677883861181612, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,40.138), movie.id),movie.vote_average)", "score": -0.444536227820871, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,40.138), movie.vote_average),movie.vote_average)", "score": -0.5133638908799395, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,40.138), movie.id),movie.vote_average)", "score": -0.5510078255433728, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,40.138), movie.id),movie.vote_average)", "score": -0.5570220365322895, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,40.138), movie.vote_average),movie.vote_average)", "score": -0.6198354886024413, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,40.138), movie.vote_average),movie.vote_average)", "score": -0.625849699591358, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.runtime)", "score": -0.8119206984292339, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_count)", "score": -0.8166831322354969, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.vote_count),movie.vote_average)", "score": -0.8356943531588495, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.runtime),movie.vote_average)", "score": -0.8676518010960145, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,40.138), movie.id),movie.vote_average)", "score": -0.8690885470728318, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.vote_average),movie.runtime)", "score": -0.8807483614883024, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with a popularity bigger than 40.138 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.vote_average),movie.vote_count)", "score": -0.8855107952945653, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,40.138), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.status),movie.status))", "score": -0.46736823407991324, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.title),movie.status))", "score": -0.4846558534918586, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),country.name,!=,cn), movie.status),movie.status))", "score": -0.4886776098428527, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),country.name,!=,cn), movie.title),movie.status))", "score": -0.505965229254798, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,!=,cn), movie.status),movie.status))", "score": -0.5471371301828185, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(country),movie.original_language,!=,cn), movie.status),movie.status))", "score": -0.5557347351132194, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,!=,cn), movie.title),movie.status))", "score": -0.5644247495947639, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.status),movie.title))", "score": -0.5652050265489379, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(country),movie.original_language,!=,cn), movie.title),movie.status))", "score": -0.5730223545251647, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(country),country.name,!=,cn), movie.status),movie.status))", "score": -0.5770441108761588, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.title),movie.title))", "score": -0.5824926459608832, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),country.name,!=,cn), movie.status),movie.title))", "score": -0.5865144023118773, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(country),country.name,!=,cn), movie.title),movie.status))", "score": -0.5943317302881042, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),country.name,!=,cn), movie.title),movie.title))", "score": -0.6038020217238227, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),keyword.name,!=,cn), movie.status),movie.status))", "score": -0.608769450467662, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))", "score": -0.08358974503967419, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,!=,Post Production), company.name),company.name))", "score": -0.12261039351198305, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,!=,Post Production), company.name),company.name))", "score": -0.19280708787333686, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,!=,Post Production), company.name),company.name))", "score": -0.19531759602910992, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Post Production),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2924162474086159, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,Post Production), company.name),company.name))", "score": -0.32093761392451453, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,!=,Post Production), company.name),company.name))", "score": -0.3336348608527957, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_place,!=,Post Production), company.name),company.name))", "score": -0.33831560683846834, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.homepage,!=,Post Production), company.name),company.name))", "score": -0.3895606156205457, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),production_country.movie_id,!=,Post Production), company.name),company.name))", "score": -0.4066258405284758, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),language.name,!=,Post Production), company.name),company.name))", "score": -0.4139524798011408, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,!=,Post Production), company.name),company.name))", "score": -0.4152410839859586, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.gender,!=,Post Production), company.name),company.name))", "score": -0.4237178316605191, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.iso_3166_1,!=,Post Production), company.name),company.name))", "score": -0.4312352151154413, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}, {"orig_question": "How many companies produced a movie, which is not in post production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))", "score": -0.43212407681363674, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,!=,Post Production), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),production_country.iso_3166_1,company.id), company.name),company.name))", "score": -0.16797600302236096, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),oscar_winner.oscar_id,company.id), company.name),company.name))", "score": -0.20360178515665203, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,assistant director),getData(company),production_country.iso_3166_1,company.id), company.name),company.name))", "score": -0.26071096883694017, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,176),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar.id,production_company.movie_id), company.name),company.name))", "score": -0.2697136626836508, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,assistant director),merge(getData(production_country),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), company.name),company.name))", "score": -0.2751111328097861, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,assistant director),getData(company),production_country.iso_3166_1,company.id), company.name),company.name))", "score": -0.2921807818541358, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,176),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),production_country.iso_3166_1,company.id), company.name),company.name))", "score": -0.30922940186837405, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),production_country.iso_3166_1,company.id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.3102419033710577, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,assistant director),getData(company),movie.id,company.id), company.name),company.name))", "score": -0.32054374533750096, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,assistant director),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.336495683473299, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,assistant director), company.name),company.name))", "score": -0.33657876392468483, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,176),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),oscar_winner.oscar_id,company.id), company.name),company.name))", "score": -0.34485515693726804, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,176),getData(company),oscar_winner.oscar_id,company.id), company.name),company.name))", "score": -0.3491421498797773, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,assistant director),getData(company),movie.id,company.id), company.name),company.name))", "score": -0.3520135019396105, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),getData(company),movie.id,company.id), company.name),company.name))", "score": -0.3661602722924109, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.11869595671725147, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.revenue)", "score": -0.16335055621919106, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,!=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.21142294700347544, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,!=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.revenue)", "score": -0.25607754650541503, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2836411278222489, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.revenue)", "score": -0.3123280262203208, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.31977656361845236, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3229706689672326, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_count)", "score": -0.33414546026772135, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.revenue)", "score": -0.3514914126193812, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.352180289440604, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.vote_count)", "score": -0.35617913210300534, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_count)", "score": -0.3675618777650214, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.revenue)", "score": -0.3788000597696609, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.revenue)", "score": -0.3808671878386759, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))", "score": -0.05524087005323963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,The Croods), movie.budget),movie.budget))", "score": -0.46393416083446937, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,The Croods), movie.budget),movie.budget))", "score": -0.5209125881738146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.release_date))", "score": -0.5340581574200769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.release_date),movie.budget))", "score": -0.5521216407141765, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))", "score": -0.6291214074663003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,The Croods), movie.id),movie.budget)", "score": -0.6339249251147836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.revenue),movie.budget))", "score": -0.6456727996192058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,The Croods), movie.budget),movie.budget))", "score": -0.6760480707234819, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.revenue))", "score": -0.732014779066958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,The Croods), movie.budget),movie.budget))", "score": -0.7402024572438677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,The Croods), movie.budget),movie.budget))", "score": -0.7800057903587003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,The Croods), movie.budget),movie.budget))", "score": -0.7924000328130205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,The Croods), movie.budget),movie.budget))", "score": -0.8076776802263339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}, {"orig_question": "How much was the budget of the movie The Croods?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,The Croods), movie.id),movie.budget)", "score": -0.8240629766092223, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Croods), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,166), keyword.name),keyword.name))", "score": -0.09109389225428437, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,166),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.15957461815869772, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,166),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.16200934317440865, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))", "score": -0.20594528702252865, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,166), keyword.name),keyword.name))", "score": -0.2604648247319103, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,166),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2954795135412484, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,166),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.35132056124761846, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,166), keyword.name),keyword.name))", "score": -0.36277911444260635, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,166), keyword.name),keyword.name))", "score": -0.39336783614367193, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,166), keyword.name),keyword.name))", "score": -0.39885295521021874, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,166), keyword.name),keyword.name))", "score": -0.40094692288947087, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,166),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4127180609923788, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,166), keyword.name),person.name))", "score": -0.4182069256237018, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,166),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.41880137212869006, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}, {"orig_question": "Are there keywords associated to movies that have a runtime of at most 166 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<=,166), keyword.name),keyword.name))", "score": -0.4215966205326823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,166), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.06474340611621457, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,ro), country.name),country.name))", "score": -0.15096610141067743, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,ro),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.20600697489768027, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,ro),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2816599483603446, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3287186988780984, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,ro), country.name),country.name))", "score": -0.35885943013498217, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38279318950090896, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.status))", "score": -0.39184741501004744, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39806893743111693, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41394130698478343, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.4188792272274354, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42490799238215793, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,!=,ro),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4278521611305983, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,ro), country.name),country.name))", "score": -0.429153426467955, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with the original language \"ro\" produced ? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,production_country.movie_id),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4292514510502014, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.09553648686554626, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,>,6900000), genre.name),genre.name))", "score": -0.1538722786048114, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.16426961549931104, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,!=,6900000), genre.name),genre.name))", "score": -0.17630767701446823, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,>,6900000), genre.name),genre.name))", "score": -0.2205948272864258, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,!=,6900000), genre.name),genre.name))", "score": -0.25205298017059236, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,>=,6900000), genre.name),genre.name))", "score": -0.3730650146835635, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,6900000),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.3971909981772139, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,<,6900000),getData(genre),has_genre.genre_id,genre.id),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.4013766586793268, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<,6900000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.4046544909856386, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<,6900000), genre.name),genre.name))", "score": -0.41230696700953967, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,6900000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4243856131677178, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.4412198942400691, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,=,6900000), genre.name),genre.name))", "score": -0.4412786073237211, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there for movies with a budget different than 6900000 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,6900000), genre.name),genre.name))", "score": -0.4454333051350719, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,6900000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,!=,1976-11-15), movie.id),movie.budget)", "score": -0.2194117502941475, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,!=,1976-11-15), movie.id),movie.budget)", "score": -0.23801543929124333, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,!=,1976-11-15), movie.id),movie.budget)", "score": -0.24328369211803805, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,!=,1976-11-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)", "score": -0.26114617712879656, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,!=,1976-11-15), movie.id),movie.budget)", "score": -0.29460462527560266, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,!=,1976-11-15), movie.revenue),movie.budget)", "score": -0.30241881632937473, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,!=,1976-11-15), movie.revenue),movie.budget)", "score": -0.30768706915616945, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,!=,1976-11-15),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.318373260024708, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,!=,1976-11-15), movie.id),movie.budget)", "score": -0.3199213208105567, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,1976-11-15),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.3203981947140833, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,!=,1976-11-15), movie.revenue),movie.budget)", "score": -0.32297123560406743, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,!=,1976-11-15),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)", "score": -0.3282700993772657, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,!=,1976-11-15), movie.id),movie.budget)", "score": -0.3431041722002946, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,!=,1976-11-15),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.budget)", "score": -0.34451282424958335, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What is the sum of all budgets for all movies that don't have only oscar nominated people who were born on November 15th 1976?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,1976-11-15),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.budget)", "score": -0.3465377589389586, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1976-11-15),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.11759493227260946, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.16438674929889258, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.23786049522879169, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),keyword.name,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2734146803154229, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.28681419926781637, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,!=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3021136848491932, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),keyword.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3041650265526917, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3102652519528167, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),keyword.name,!=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.320206497341706, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3452318987986147, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3531187305917164, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Berlin),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.38052170284762044, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3884978346774968, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),getData(movie),cast.movie_id,movie.id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.4225705343389291, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),getData(movie),cast.movie_id,movie.id),keyword.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.42481690570508, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),movie.budget))", "score": -0.3841792160996609, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),movie.budget))", "score": -0.40915141998639043, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_place))", "score": -0.4269379517102521, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.4519101555969817, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), person.name),person.death_day))", "score": -0.4600862650022234, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), person.name),oscar.number))", "score": -0.46876571893391733, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_day))", "score": -0.4704648650362613, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1982-04-27), person.name),movie.vote_count))", "score": -0.4849030949582552, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1982-04-27),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_day))", "score": -0.4954370689229909, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,person.id),person.death_day,>,1982-04-27), person.name),person.death_day))", "score": -0.4959270995064353, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,<,1982-04-27), person.name),person.death_day))", "score": -0.4970591291921469, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,person.id),person.death_day,>,1982-04-27), person.name),oscar.number))", "score": -0.5046065534381293, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,<,1982-04-27), person.name),oscar.number))", "score": -0.5057385831238409, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.person_id,movie.id),person.death_day,>,1982-04-27), person.name),person.death_day))", "score": -0.5133589319328141, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}, {"orig_question": "Are there any coutries where the movie budget was more than 1450 and the oscar winner persons death day was before 1982-04-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,person.id),person.death_day,>,1982-04-27), person.name),movie.vote_count))", "score": -0.5207439294624671, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,<,1982-04-27),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>,1450), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.08105992640768744, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.36813461320972996, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.37988049066813095, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.4060967742552748, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.vote_average))", "score": -0.6700522667815676, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.vote_average)", "score": -0.6761520462235513, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.vote_average),movie.runtime)", "score": -0.7011975250544994, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.runtime)", "score": -0.7287132565266976, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.status),movie.runtime)", "score": -0.7931355511358364, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.vote_average),movie.runtime))", "score": -0.8125049677764764, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), oscar.id),movie.runtime)", "score": -0.8393904353262944, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.id))", "score": -0.8949946827342501, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.id)", "score": -0.8995670907001337, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.id),movie.runtime)", "score": -0.9057689453199971, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Post Production), movie.id),movie.runtime)", "score": -0.9196176336233087, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.1433577970646703, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.17708790826296175, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),keyword.name,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3053008881119881, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,=,Gablitz),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))", "score": -0.310502557084887, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3196738517201638, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33675556839102466, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3455618389338502, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,=,Gablitz),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))", "score": -0.3503159283073897, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.35299690260271105, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,oscar_nominee.movie_id),person.name,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3548014033831334, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.35744698239553935, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3598492772614846, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_company.movie_id),person.name,=,Gablitz),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3656881365930954, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,=,Gablitz),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.38343757153898655, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced of which one oscar nominee died in Gablitz?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),person.name,=,Gablitz), country.name),country.name))", "score": -0.43317669798517827, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Gablitz),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.0657570586878275, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.11961762681937879, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3340247394627403, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.name,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.40497244329163873, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,country.name),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.40920181764210256, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.4101678489265267, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,country.name), movie.title),movie.title))", "score": -0.414089106590982, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.41691520560101664, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(distinct(extractValues(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.title), movie.title))", "score": -0.4197358130739899, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4197942375018936, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(production_country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4227138618396395, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(production_country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.4321930873236975, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.name,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4336192100255344, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Austria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),movie.title))", "score": -0.43456759226993286, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies produced in Austria?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4607155292552199, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.14402357265539378, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.year,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2055787279468577, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2174305664989701, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.22480014028685913, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.23786289605844044, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.24183713704121082, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.2821702267205273, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.293301668206213, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.30147136717041584, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3076593847064774, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar.year,>,1960),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.31272925460926987, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),oscar.year,>,1960),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3145341229419972, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.37656263616886837, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),oscar.year,>,1960), movie.title),movie.title))", "score": -0.37774839244598035, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies won an oscar after 1960?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,1960), movie.status),movie.title))", "score": -0.3826264652507508, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,1960),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,United States of America), movie.id),movie.vote_count)", "score": -0.15196779095858134, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.1797789213210412, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.2182901835542927, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(merge(filter(getData(country),country.name,!=,United States of America),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.2490075268482637, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)", "score": -0.2556169726283988, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,United States of America), movie.vote_average),movie.vote_count)", "score": -0.2845861751939635, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.31423164297212874, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,United States of America), movie.vote_count),movie.vote_count)", "score": -0.31448916590754833, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.3229081482572149, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,United States of America), movie.id),movie.vote_count)", "score": -0.36367497678012173, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(merge(filter(getData(country),country.name,!=,United States of America),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3846348077995034, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(merge(filter(getData(country),country.name,!=,United States of America),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.39289282978819196, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)", "score": -0.3931120730050165, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.vote_average),movie.vote_count)", "score": -0.4019568857932262, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.title),movie.vote_count)", "score": -0.4024425030974721, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.1380241650548539, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.13836875919905434, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Released), country.name),country.name))", "score": -0.1832050540745874, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.1978488386228569, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.23793091804229388, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.25412535429209326, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.28918391012796035, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.3019280722571451, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Released), country.name),country.name))", "score": -0.3351810084597308, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,Released), country.name),country.name))", "score": -0.38704937806940914, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.3926126082873754, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,!=,Released), country.name),country.name))", "score": -0.41555500097671166, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.41694773756806314, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,Released),country.name), country.name))", "score": -0.4665157917232603, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),movie.status))", "score": -0.47954619978535, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.11584376344209071, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.14597560277504748, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.2118734208935549, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.23002746623180126, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.264131760490897, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.2702839609205444, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special achievement award),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.274342688428865, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.3004158002535012, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special achievement award),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3007427762573337, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special achievement award),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.30213832337204943, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.32766231568681986, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3387475079358862, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.3555539055375295, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.3593187513058466, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.37285178416292064, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.runtime)", "score": -0.10961032121862693, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,189), movie.id),movie.runtime)", "score": -0.2919648051055313, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)", "score": -0.3943559491518226, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.vote_count)", "score": -0.40365569206087615, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),oscar.number)", "score": -0.50463689959262, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,189), movie.id),movie.budget)", "score": -0.5767104330387269, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,189), movie.id),movie.vote_count)", "score": -0.5860101759477806, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.title)", "score": -0.5931054339954318, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.runtime),movie.runtime)", "score": -0.6514925054048192, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,189), movie.id),movie.runtime)", "score": -0.6618998558139388, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<=,189),movie.runtime)", "score": -0.6752559024403063, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,189), movie.id),movie.runtime)", "score": -0.6840888873069485, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,189), movie.id),oscar.number)", "score": -0.6869913834795244, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),oscar_nominee.movie_id)", "score": -0.7062769080535386, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}, {"orig_question": "How much ist the average of the movie budget from all movies with a runtime less than 189?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,189), movie.runtime),movie.runtime))", "score": -0.7350582070976088, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<,189), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.revenue))", "score": -0.1918846510889125, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.revenue))", "score": -0.2113851450922084, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.revenue))", "score": -0.26060016384144546, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.revenue))", "score": -0.4115114801170421, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.revenue))", "score": -0.42091499386151554, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.revenue),movie.revenue))", "score": -0.44041548786481144, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),person.death_day))", "score": -0.4610138081552577, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.4757505201341701, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),person.death_day))", "score": -0.4805143021585536, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.vote_count),movie.revenue))", "score": -0.4896305066140485, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.budget))", "score": -0.495251014137466, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.vote_count))", "score": -0.5171950601579738, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),person.death_day))", "score": -0.5297293209077907, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.vote_count))", "score": -0.5366955541612697, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.budget))", "score": -0.544466032886703, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,>=,4.25422), movie.id),movie.budget)", "score": -0.16833899387036552, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,4.25422), movie.id),movie.budget)", "score": -0.22326211755511358, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,4.25422), movie.id),movie.budget)", "score": -0.24510485989572758, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>=,4.25422), movie.id),movie.budget)", "score": -0.36383102091102104, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,4.25422), movie.id),movie.budget)", "score": -0.45456747477692305, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.tagline,>=,4.25422), movie.id),movie.budget)", "score": -0.5293181978750794, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>=,4.25422), movie.id),movie.budget)", "score": -0.5294292744100287, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,>=,4.25422), movie.budget),movie.budget)", "score": -0.5376432371518728, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,4.25422), movie.budget),movie.budget)", "score": -0.5925663608366208, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,>=,4.25422), movie.id),movie.budget)", "score": -0.6050276325248164, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,4.25422), movie.budget),movie.budget)", "score": -0.6144091031772348, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,4.25422), movie.id),movie.budget)", "score": -0.6262063076252589, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),company.name,>=,4.25422), movie.id),movie.budget)", "score": -0.6387253157588891, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,4.25422), movie.id),movie.budget)", "score": -0.6776305055520586, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies with a movie.popularity of at least 4.25422?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,4.25422), movie.id),movie.budget)", "score": -0.6811294154254525, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,4.25422), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.1446741585658514, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.2522396942601658, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.25694840108535705, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.2785039888532534, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.28657113849870713, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.2946297335404834, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.29782593903297533, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.2986560401619371, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.3180216196293262, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.35770831775978856, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.3645139423173486, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), oscar.category),movie.title))", "score": -0.36854962533377045, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.3690832109854068, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_average,<,5.3), movie.title),movie.title))", "score": -0.37119968309837814, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How many movies received an Oscar where their average vote was below 5.3", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.movie_id),movie.vote_average,<,5.3),getData(oscar),oscar_nominee.oscar_id,oscar.id), movie.title),movie.title))", "score": -0.40301209442035724, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<,5.3),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,None), None),None))", "score": -0.23654545129860666, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,None), None),None))", "score": -0.24217809244045482, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,None), None),None))", "score": -0.24343871527948824, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,None), None),None))", "score": -0.2490713564213364, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.person_id,None), None),None))", "score": -0.2857732491442994, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.person_id,None), None),None))", "score": -0.292666513125181, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Bray, Berkshire, England),merge(merge(getData(has_genre),merge(getData(movie),getData(has_genre),movie.id,None),None,None),NoOp,None,None),None,None), None),None))", "score": -0.2969018149894591, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,None), None),None))", "score": -0.3022158319269283, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,None), None),None))", "score": -0.3091090959078099, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.31940253822651077, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.release_date,None), None),None))", "score": -0.3216180672909108, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3227665182201683, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,None), None),None))", "score": -0.32485550657681544, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.32657094924658514, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.32993492924024265, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,!=,1886-10-12), movie.title),movie.title))", "score": -0.1804420088304892, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1886-10-12), movie.title),movie.title))", "score": -0.19918455512379296, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1886-10-12),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.2051915795744333, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,!=,1886-10-12), movie.title),movie.title))", "score": -0.2196741079674937, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1886-10-12),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.25382773105436757, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,1886-10-12), movie.title),movie.title))", "score": -0.26758779193436355, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,1886-10-12), movie.title),movie.title))", "score": -0.27308096320484765, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,1886-10-12),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.304240546573052, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1886-10-12), movie.title),movie.title))", "score": -0.3588262978300918, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,1886-10-12), movie.title),movie.title))", "score": -0.3838781174157493, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.id,!=,1886-10-12), movie.title),movie.title))", "score": -0.41094057735361417, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,1886-10-12), movie.title),movie.title))", "score": -0.4170991477376072, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,1886-10-12),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.41916934924232674, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.movie_id),person.birth_day,!=,1886-10-12), movie.title),movie.title))", "score": -0.4289618240776904, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}, {"orig_question": "What are the movie titles when the persons' cast birth day is not 1886-10-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1886-10-12), movie.title),movie.title))", "score": -0.46994985968922265, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,!=,1886-10-12), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))", "score": -0.02015867079171585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1405), movie.popularity),movie.popularity))", "score": -0.4743844507684116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1405), movie.popularity),movie.popularity))", "score": -0.5227004824628239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1405), movie.popularity),movie.popularity))", "score": -0.532427066420496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))", "score": -0.6130827196793689, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,1405),movie.popularity), movie.popularity))", "score": -0.659482022998418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.status),movie.popularity))", "score": -0.6744001623665099, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.status))", "score": -0.6964507088487153, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.release_date),movie.popularity))", "score": -0.7191822644745116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), person.gender),movie.popularity))", "score": -0.7233551856552367, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.vote_average))", "score": -0.7398413405244355, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.revenue))", "score": -0.7417584643189912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,1405), movie.popularity),movie.popularity))", "score": -0.8063890163975884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),person.gender))", "score": -0.8167216763322358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.revenue),movie.popularity))", "score": -0.8391400691543822, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)", "score": -0.07470049790104105, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,50), movie.id),movie.revenue)", "score": -0.23255090502441536, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(filter(getData(movie),movie.popularity,>,50),movie.revenue)", "score": -0.5052538527101149, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.vote_average),movie.revenue)", "score": -0.609412207497281, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.popularity)", "score": -0.6555096857724825, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>,50), movie.id),movie.revenue)", "score": -0.7566498011652019, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,50), movie.vote_average),movie.revenue))", "score": -0.7568798974934907, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,50), movie.vote_average),movie.revenue)", "score": -0.7672626146206554, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(filter(getData(movie),movie.popularity,>=,50),movie.revenue)", "score": -0.7741254660669296, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,50), movie.id),movie.revenue)", "score": -0.7872824099339419, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.runtime),movie.revenue)", "score": -0.7938848385601394, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,50), movie.id),movie.revenue)", "score": -0.8016525417285535, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<=,50), movie.id),movie.popularity)", "score": -0.8133600928958568, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.vote_count),movie.revenue)", "score": -0.8307760115188257, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a popularity more than or equal to 50?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.vote_count)", "score": -0.8514653971318712, "correct_code": "avg(distinct(filter(getData(movie),movie.popularity,>=,50), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,2016-01-13), genre.name),genre.name))", "score": -0.22202728450796394, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,Released), genre.name),genre.name))", "score": -0.2430777231502107, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.2477796983750457, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.26883013701729247, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,Released), genre.name),genre.name))", "score": -0.33664046908452766, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,Released), genre.name),genre.name))", "score": -0.353141537594057, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,2016-01-13), genre.name),genre.name))", "score": -0.3576909077267744, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,Released), genre.name),genre.name))", "score": -0.3596146214599147, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.36239288295160943, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,production_company.company_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,Released), genre.name),genre.name))", "score": -0.37350322210179226, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,Released), genre.name),genre.name))", "score": -0.37419197623630374, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.37889395146113874, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.3834432651095491, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<,2016-01-13), genre.name),genre.name))", "score": -0.3837048251073345, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.38536697884268944, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.popularity))", "score": -0.08055656427040958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.15941049927369022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.32008353644505405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.5803631322969522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<,26500000),movie.popularity), movie.popularity))", "score": -0.661558060131938, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,26500000), movie.popularity),movie.popularity))", "score": -0.6652948039163675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.revenue))", "score": -0.6782011434015658, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,26500000), movie.popularity),movie.popularity))", "score": -0.691541113196763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.popularity))", "score": -0.6945216821895883, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,null,26500000), movie.popularity),movie.popularity))", "score": -0.7143400090326395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.revenue))", "score": -0.7570550784048464, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,26500000), movie.popularity),movie.popularity))", "score": -0.7594210516008388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.7655356692539499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.status),movie.popularity))", "score": -0.7849684424045336, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,>,26500000),movie.popularity), movie.popularity))", "score": -0.8058267730921216, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.4496340052137384, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.4499932046833028, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.popularity),movie.runtime))", "score": -0.535646877848194, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.5853965978749329, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.6483187502630927, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(getData(movie),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.6790505944872672, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.revenue)", "score": -0.6946545611819938, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.6976443999213714, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.7247019397697966, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.7356841330466856, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.7528881487191275, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.7801172539401502, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.7815157707200878, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.8001019940499859, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,crew.person_id),movie.popularity),movie.runtime))", "score": -0.8015963540545905, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.title))", "score": -0.14479648212363827, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))", "score": -0.1680655468480836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.title),movie.title))", "score": -0.2806560944991361, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.title),movie.original_language))", "score": -0.30392515922358143, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<=,1100000),movie.original_language), movie.title))", "score": -0.451966053864453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.budget))", "score": -0.4946922723429452, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<=,1100000),movie.original_language), movie.original_language))", "score": -0.5758282049209811, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.title),movie.budget))", "score": -0.630551884718443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.release_date))", "score": -0.6551908318178903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,1100000), movie.original_language),movie.title))", "score": -0.6974082638735126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))", "score": -0.7203784613921016, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,1100000), movie.original_language),movie.original_language))", "score": -0.720677328597958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.status),movie.title))", "score": -0.7276054572539579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1100000), movie.original_language),movie.title))", "score": -0.7289180141633551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the movies original language when the budget is 1100000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.status),movie.original_language))", "score": -0.7508745219784032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,1100000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.04873708604663389, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2899977498473904, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Halloween 5: The Revenge of Michael Myers),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3287536179387585, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3297570074532532, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.33462959629633166, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3397096065209828, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3545920098506548, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3689088102714308, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3767803746972537, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Halloween 5: The Revenge of Michael Myers),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38322141306369817, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.38557094762964716, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.39040797810778727, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.category,=,Halloween 5: The Revenge of Michael Myers),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3965123075669821, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.40131151311973784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.40359545552100573, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))", "score": -0.060001607082085684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.original_language),movie.original_language))", "score": -0.2695918577082921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Post Production),movie.original_language), movie.original_language))", "score": -0.32067663548514247, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),language.name))", "score": -0.5295426752709318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Post Production),movie.original_language), movie.original_language))", "score": -0.5307536176405847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.popularity))", "score": -0.642122885241406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.popularity),movie.original_language))", "score": -0.7165172114328016, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),spoken_language.movie_id))", "score": -0.7272666301869322, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), language.name),movie.original_language))", "score": -0.7315607085183728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.original_language),language.name))", "score": -0.7391329258971382, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Post Production),movie.original_language), language.name))", "score": -0.7724470621906221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))", "score": -0.8007265031628776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.original_language),movie.original_language))", "score": -0.8262867314333562, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,Post Production), movie.original_language),movie.original_language))", "score": -0.8288631635077763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),spoken_language.iso_639_1))", "score": -0.8293391671322752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))", "score": -0.10380289493678607, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id),movie.status,!=,Rumored), person.name),person.name))", "score": -0.20281968046871202, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Rumored), person.name),person.name))", "score": -0.2615867015289134, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,spoken_language.movie_id), person.name),person.name))", "score": -0.2731664733791429, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), keyword.name),person.name))", "score": -0.3067970492606165, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), language.name),person.name))", "score": -0.31522202699114876, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.birth_place))", "score": -0.32320627317936845, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))", "score": -0.3289237780991161, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.person_id),getData(person),cast.person_id,person.id),movie.status,!=,Rumored), person.name),person.name))", "score": -0.3332753641909599, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.name))", "score": -0.35260935752061273, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.name),person.name))", "score": -0.35772150517011797, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Rumored),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.name),person.name))", "score": -0.35905032518649466, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Rumored), person.name),person.name))", "score": -0.36663988322110647, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.name),person.name))", "score": -0.36964259763591545, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}, {"orig_question": "Do people exist who were part of a cast for a movie that doesn't have the status rumored? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_day),person.name))", "score": -0.370380091359071, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.status,!=,Rumored),getData(person),cast.person_id,person.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.34160528034912085, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.34423279617738867, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),genre.name,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3555294405078169, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3998391449492974, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),movie.id,oscar_winner.person_id),person.death_place,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.405114568217246, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),genre.id,oscar_winner.person_id),person.death_place,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.40959952851937453, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),movie.id,oscar_winner.person_id),genre.name,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.4164112125476742, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.oscar_id),person.death_place,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.4191681517672302, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.42063459956944627, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),genre.id,oscar_winner.person_id),genre.name,=,Cathedral City, Kalifornien),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.42089626089886956, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.oscar_id,movie.id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.4260178994888157, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,=,Cathedral City, Kalifornien), movie.title),movie.title))", "score": -0.4445835616775682, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),spoken_language.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.45419136115991016, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.47704924959446077, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),merge(filter(getData(movie),movie.budget,=,Cathedral City, Kalifornien),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(language),oscar_winner.oscar_id,person.id),oscar_nominee.movie_id,movie.id), movie.title),None))", "score": -0.6089652604416771, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.15219561151025118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,2001-05-11),movie.runtime),movie.runtime))", "score": -0.3573906882375013, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.id),movie.runtime)", "score": -0.49204216587399413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.6608598660750431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.6708133872671169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime))", "score": -0.6751650997146719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.6879329140786764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.739769322804932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.id))", "score": -0.7489288578423192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.release_date),movie.runtime))", "score": -0.765303355648939, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime)", "score": -0.8052762515289951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,2001-05-11),movie.release_date),movie.runtime))", "score": -0.8192329778976273, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.8359100127199781, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,=,2001-05-11),movie.runtime),movie.runtime))", "score": -0.844545377389295, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.release_date))", "score": -0.8580634116733563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.05550263312761672, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.2966395485054818, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Post Production),movie.release_date), movie.release_date))", "score": -0.3557890872689313, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.release_date))", "score": -0.503269243548857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.6089027989946771, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.6330873836122919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.popularity))", "score": -0.6820566309907008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.6854873169504572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.birth_day),movie.release_date))", "score": -0.6895763161883224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Post Production),movie.popularity), movie.release_date))", "score": -0.7233637231620378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.release_date))", "score": -0.7481117061179248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.7616856564127374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.7734298575960565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),person.birth_day))", "score": -0.803380931756692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.revenue),movie.release_date))", "score": -0.8075263980135787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))", "score": -0.159232323665492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,139000000), movie.status),movie.status))", "score": -0.2538477011512441, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.runtime))", "score": -0.3617215730737371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.vote_average))", "score": -0.42148071308838553, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,139000000), movie.status),movie.runtime))", "score": -0.4563369505594892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),oscar.sub_category))", "score": -0.4678977706025762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.vote_average),movie.status))", "score": -0.49407757227527327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,139000000), movie.status),movie.vote_average))", "score": -0.5160960905741376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,139000000), movie.status),movie.status))", "score": -0.5162338741611165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.title))", "score": -0.5347161569188756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), person.name),movie.status))", "score": -0.5569974273930711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),person.name))", "score": -0.5606451906751317, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,139000000), movie.status),oscar.sub_category))", "score": -0.5625131480883283, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,139000000), movie.vote_average),movie.status))", "score": -0.5886929497610254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}, {"orig_question": "Give me the status of all movies with revenue other than 139000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),country.name))", "score": -0.5958668567727727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,139000000), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.03684100982650124, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,17500000), country.name),country.name))", "score": -0.26646495540382964, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,17500000), country.name),country.name))", "score": -0.2845421132853566, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), movie.status),country.name))", "score": -0.3046512002489069, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),movie.status))", "score": -0.309859702373469, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,!=,17500000), country.name),country.name))", "score": -0.32454042758499335, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.3287101478620137, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.347572789145695, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.3821259020021024, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,>=,17500000), country.name),country.name))", "score": -0.388909378348924, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),production_country.iso_3166_1))", "score": -0.38933052631128434, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), person.birth_place),country.name))", "score": -0.39684990997519687, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,17500000), country.name),country.name))", "score": -0.41551744750999225, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.41623175567108656, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,production_country.movie_id),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.4189446156726548, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.08134214988006662, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.14830494206944136, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.21604363485341252, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24562964556118272, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.27270205317030954, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.2803262696357799, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2995473684483893, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.32744299277058053, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35740498635042206, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38746512826964674, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38972007040939294, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39194981916378135, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3936043779749107, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,<,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39723822609339515, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.39936994550226956, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.runtime)", "score": -0.10204909401563712, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)", "score": -0.3698937358604775, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.budget)", "score": -0.37236091117477227, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.vote_count)", "score": -0.3989620677962365, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),oscar.number)", "score": -0.48019389243826704, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),oscar.year)", "score": -0.5033184254606291, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.vote_average)", "score": -0.5405729822848483, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),oscar_nominee.oscar_id)", "score": -0.551915082028572, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.release_date)", "score": -0.5615865293771646, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.id)", "score": -0.5748303807669926, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),oscar_nominee.movie_id)", "score": -0.6003058513103878, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.title)", "score": -0.6291578483219818, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.popularity)", "score": -0.6337226528554175, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,1.20494), movie.id),movie.runtime)", "score": -0.7550728787300532, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenut of movies with a popularity smaller than 1.20494 ?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<=,1.20494), movie.id),movie.runtime)", "score": -0.7603007016343102, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1.20494), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.death_day),person.birth_day))", "score": -0.14836550080464897, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.1642279555237486, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.2242190404393555, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.24206067426603478, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.death_day),person.death_day))", "score": -0.24952505155972365, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,best picture), person.birth_day),person.death_day))", "score": -0.2653875062788233, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.sub_category,!=,best picture), person.death_day),person.birth_day))", "score": -0.2732348300766439, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture), person.death_day),person.birth_day))", "score": -0.27909378384732797, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.sub_category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.28909728479574354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,best picture), person.death_day),person.birth_day))", "score": -0.31089206529283275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.32926844380697806, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.33995102851350073, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,best picture),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.death_day))", "score": -0.35779266234018003, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,best picture), person.birth_day),person.birth_day))", "score": -0.3610667252524828, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}, {"orig_question": "Are there birthday dates of Oscar winners except the category Oscar best picture?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture), person.death_day),person.death_day))", "score": -0.37221104358972235, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,best picture),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),oscar_winner.movie_id,movie.id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.0799198298686885, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.20300908751825048, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.20826458483184582, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),genre.name), genre.name))", "score": -0.25626977619356445, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.27976388151015136, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.2911911144613714, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.31000615155327893, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<,1999-12-16), genre.name),genre.name))", "score": -0.37600436848011803, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),person.death_place))", "score": -0.3899731090014427, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(merge(merge(filter(getData(movie),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.name), genre.name))", "score": -0.39594041675545966, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,production_company.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.4121446124517395, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),movie.original_language))", "score": -0.4147732196025916, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.417695861905169, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),has_genre.genre_id))", "score": -0.4204975297738018, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.4229262680348555, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,assistant director), movie.original_language),movie.original_language))", "score": -0.32529078166408, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.36438208351459117, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.3865744044777535, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,assistant director), movie.original_language),movie.original_language))", "score": -0.44424933133565114, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.name),language.name))", "score": -0.44667501405678706, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.44921763630994915, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,assistant director), movie.original_language),movie.original_language))", "score": -0.4517561374959769, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),person.name,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.45194226650588004, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),oscar.category,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.4613544038574641, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,assistant director), language.name),movie.original_language))", "score": -0.4624818144163169, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1), language.name),language.name))", "score": -0.4688673350199493, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),person.name,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.47413458746904236, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,assistant director), movie.original_language),movie.original_language))", "score": -0.47596856797736725, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,assistant director),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1), language.name),movie.original_language))", "score": -0.4803769041447333, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "What's the number of different original languages of movies where oscars for assistant directors were awarded?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,assistant director), movie.original_language),movie.original_language))", "score": -0.4828090257761928, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,assistant director),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.025202582735801116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_average))", "score": -0.29278930943110026, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.5962917127071705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_count),movie.vote_average))", "score": -0.6070015157165471, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_count))", "score": -0.6137256518995855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1045), movie.vote_average),movie.vote_average))", "score": -0.6705234340915922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.popularity))", "score": -0.7118823424971197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.revenue))", "score": -0.7962305442488287, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.status))", "score": -0.8306641475355718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.vote_average),movie.vote_average))", "score": -0.8475361160526518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_average))", "score": -0.8688205780817952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_count),movie.vote_average))", "score": -0.8745882424118463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.runtime),movie.vote_average))", "score": -0.8799528206291143, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_count))", "score": -0.8813123785948846, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote average of movies with a vote count smaller or equal than 1045 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.9023012515099254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.11834142222505761, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.297273738826334, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.33881948753696634, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.33936802908283425, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.3988945917735691, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.414225323642313, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.4589142338882084, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),spoken_language.movie_id,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.4666063623080845, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.4833080010066624, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.tagline,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.5346612767825718, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Documentary), movie.vote_average),movie.vote_count))", "score": -0.5365110342900152, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),has_keyword.movie_id,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.6037640409122105, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.6633379892955418, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.6729463255542214, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of movies that are not Documentaries?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,!=,Documentary), movie.vote_average),movie.vote_average))", "score": -0.6744059240954812, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.06355131350559574, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2726987329499734, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.movie_id,movie.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30660868254749074, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.3089526298844078, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31282929284829963, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.31447540549742437, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),has_genre.genre_id))", "score": -0.325008421803095, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(has_genre),has_genre.movie_id,movie.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32951677557134035, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(has_genre),has_genre.movie_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33573738587214924, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.3522858390487581, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),movie.original_language))", "score": -0.35519363548359534, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),movie.budget))", "score": -0.38140979658680413, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),spoken_language.iso_639_1,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.3944597769371762, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.4001186436703554, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "How many different movie genres are in the status Post Production?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,has_genre.movie_id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.4009917578760096, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))", "score": -0.04125443791417638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,20455276), movie.budget),movie.budget))", "score": -0.4047467759010033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.revenue),movie.budget))", "score": -0.4568773362916545, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.revenue))", "score": -0.4723542718347744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.vote_count),movie.budget))", "score": -0.5370381627362804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.vote_count))", "score": -0.593998232310696, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.revenue,<,20455276),movie.budget), movie.budget))", "score": -0.6169317404637695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), person.death_day),movie.budget))", "score": -0.6411637816709117, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.release_date))", "score": -0.6452706245836453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), person.death_place),movie.budget))", "score": -0.6830288324636058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.id),movie.budget)", "score": -0.6932527384825934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),person.death_day))", "score": -0.7419941214975552, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),person.death_place))", "score": -0.7440721778330044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.release_date),movie.budget))", "score": -0.7486047897618846, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}, {"orig_question": "Which are the budgets of the movies when their revenue is lower than 20455276?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,20455276), movie.budget),movie.budget))", "score": -0.8029885882642702, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,20455276), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.title),movie.title))", "score": -0.2636965111742029, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,af), movie.title),movie.title))", "score": -0.3342100054869661, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.34098401954065166, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.title),movie.title))", "score": -0.37963990343347076, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.3999882222036115, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.4020079814094231, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),country.name,=,af), movie.title),movie.title))", "score": -0.41209109030662094, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,production_country.iso_3166_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.4135519118209878, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.4147637106386607, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.title,=,af), movie.title),movie.title))", "score": -0.42815216156982916, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,production_country.movie_id),movie.original_language,=,af), movie.title),movie.title))", "score": -0.43167283950279123, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,spoken_language.iso_639_1),movie.original_language,=,af), movie.title),movie.title))", "score": -0.4356098665855283, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),movie.original_language,=,af), movie.title),movie.title))", "score": -0.43864411509515605, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.title),movie.title))", "score": -0.44066387430096765, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id),movie.original_language,=,af), movie.title),movie.title))", "score": -0.44961421354034325, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))", "score": -0.20909986151600285, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Algeria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.21976523684810856, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Algeria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.23780205983260982, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Algeria),getData(spoken_language),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.2595769624384293, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Algeria),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2700522201645512, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Algeria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.2983607711037972, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Algeria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.308205294718213, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))", "score": -0.3142881056313875, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))", "score": -0.3264085481066334, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Algeria),getData(spoken_language),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.338172496694118, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Algeria),getData(spoken_language),country.iso_3166_1,production_country.iso_3166_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.34801702030853376, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))", "score": -0.37781961632125743, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))", "score": -0.3824012203036325, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Algeria),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,movie.id), movie.title),movie.title))", "score": -0.3851350728616619, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that weren't produced in Algeria? ", "inferred_code": "done(distinct(extractValues(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria),movie.title), movie.title))", "score": -0.42200012288902583, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Algeria), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.2348604662078805, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.2566756137645718, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.2644697969048251, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.28628494446151637, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.2888483750903767, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.31066352264706804, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.3154876056985548, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.31845770578732124, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.3194777103093396, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.32597777169305997, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.3402728383922842, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.347792904298023, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.3499806655221634, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.3539707855000023, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,writing),movie.vote_count),movie.vote_count))", "score": -0.3555870582270292, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.13154403666445405, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.13286206218919833, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.13470518662931752, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.17179511120782656, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.193724584723832, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3854225142438686, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3889754388656246, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,!=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.394757738270663, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.3977317235855432, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.40237542889182887, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.4050417463889822, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.40916199491764416, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4110516818449506, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(spoken_language),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41552131108786033, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),movie.original_language))", "score": -0.4332779731218482, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.09496888671685762, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.16391089633957528, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.22695687408985568, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.2921226922042424, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.3254888793350687, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(filter(merge(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Italy),movie.revenue)", "score": -0.37455803762277273, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,movie.id), movie.id),movie.revenue)", "score": -0.3978255812145881, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Italy),movie.revenue)", "score": -0.3993853155310794, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.popularity)", "score": -0.4128381738169547, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.41438324440835184, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(company),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.4217111298223497, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(merge(filter(getData(country),country.name,!=,Italy),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.4233073186671808, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,spoken_language.iso_639_1), movie.id),movie.revenue)", "score": -0.4233391975403587, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),spoken_language.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.4300914696844939, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.4309557344482856, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.17511794858748692, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.19184225624771442, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(keyword),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.19351527036633343, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))", "score": -0.20063237351904853, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))", "score": -0.3029608160616213, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))", "score": -0.30609966561669133, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,cgi), movie.popularity),movie.popularity))", "score": -0.3234338626427177, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(keyword),keyword.name,!=,cgi), movie.popularity),movie.popularity))", "score": -0.36194092908408493, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(spoken_language),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.3683112421068785, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,cgi),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))", "score": -0.40842811729643136, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),spoken_language.movie_id,movie.id),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.41880566537947167, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,cgi), movie.popularity),movie.popularity))", "score": -0.42223336211341916, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(language),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.4628918463131413, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.4653266675823202, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}, {"orig_question": "How many distinct popularities are there for movies with the keyword \"cgi\" ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,=,cgi),keyword.name,=,cgi), movie.popularity),movie.popularity))", "score": -0.48492030741873704, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,cgi),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.080186906066956, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,2006-06-26),movie.runtime),movie.runtime))", "score": -0.4449295959493611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.release_date))", "score": -0.5599632812954951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.5992665295780171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.release_date),movie.runtime))", "score": -0.682236423046561, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),movie.release_date,=,2006-06-26),getData(movie),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.7534073855584189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.id),movie.runtime))", "score": -0.7562507291149814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), oscar.sub_category),movie.runtime))", "score": -0.7642056246113498, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.vote_average),movie.runtime))", "score": -0.7695031066250522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.id),movie.runtime)", "score": -0.7765173864086342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.8282223944843281, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.status),movie.runtime))", "score": -0.837607492954703, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.title))", "score": -0.8579755379178096, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), oscar.year),movie.runtime))", "score": -0.9075783987354953, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.title),movie.runtime))", "score": -0.9106960196804721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.29376629927292003, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.3051369491209208, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(cast),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.327899442614951, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),movie.revenue))", "score": -0.36393109439875865, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),movie.revenue))", "score": -0.37530174424675944, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.3772122317917696, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.38858288163977045, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.3894437073028482, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(cast),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),movie.revenue))", "score": -0.3980642377407896, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.40085438087259984, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(cast),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.person_id,person.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.4113453751338006, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,movie.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.4122250307206006, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.4179539375575482, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),cast.movie_id,movie.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.5147408090242237, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),cast.movie_id,movie.id),oscar.number,>,87), person.death_day),person.death_day))", "score": -0.5231300146440088, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(getData(oscar_nominee),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.23560061334690272, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.27185376539518924, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.27581472742004165, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.27790217476245144, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(country),production_company.company_id,country.iso_3166_1), country.name),country.name))", "score": -0.2808409089188896, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.28361364767217323, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.2914839902198525, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.29473528313514946, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.2999021459315239, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.30020580267745556, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3041286464488268, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3063629997175128, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(getData(oscar_nominee),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.30926301072327067, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3136110299383164, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,directing),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3202438098000105, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.budget),movie.vote_average))", "score": -0.16458598142071215, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,!=,tape recorder), movie.vote_average),movie.vote_average)", "score": -0.2737899880968841, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.vote_count),movie.vote_average))", "score": -0.3008508989160324, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.revenue),movie.vote_average))", "score": -0.3036204817600812, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(keyword),keyword.name,!=,tape recorder),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.vote_average))", "score": -0.31989729656670396, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.vote_average))", "score": -0.3402302508182126, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.budget),movie.vote_count))", "score": -0.3471890184826994, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.vote_average))", "score": -0.3515145377979921, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count,!=,tape recorder), movie.vote_average),movie.vote_average)", "score": -0.3685397908839499, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget,!=,tape recorder), movie.vote_average),movie.vote_average)", "score": -0.3889332965724844, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,!=,tape recorder), movie.id),movie.vote_average)", "score": -0.3977545016218302, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_average))", "score": -0.40372445749965874, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count,!=,tape recorder), movie.vote_count),movie.vote_average)", "score": -0.4124541901712, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,tape recorder),movie.budget),movie.vote_average))", "score": -0.4214137814559558, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count,!=,tape recorder), movie.id),movie.vote_average)", "score": -0.4531444149269227, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.popularity),movie.popularity))", "score": -0.03556921021663584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.vote_average),movie.popularity))", "score": -0.4633725571038667, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))", "score": -0.5143733151780907, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.status),movie.popularity))", "score": -0.5215901421906892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.popularity),movie.popularity))", "score": -0.5408557477203431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,>=,4.7),movie.popularity), movie.popularity))", "score": -0.5791095542372204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.revenue),movie.popularity))", "score": -0.5815094398858491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.release_date),movie.popularity))", "score": -0.5997287916543428, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,4.7), movie.popularity),movie.popularity))", "score": -0.6209741659986321, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,4.7), movie.popularity),movie.popularity))", "score": -0.6474492476845626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), movie.popularity),movie.revenue))", "score": -0.7042401725484524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,4.7), movie.popularity),movie.popularity))", "score": -0.7128056712972466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,4.7), movie.popularity),movie.popularity))", "score": -0.7301311419869307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), person.birth_day),movie.popularity))", "score": -0.7553767847421113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}, {"orig_question": "Find the popularity of the movies which received the average vote of at least 4.7.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,4.7), person.gender),movie.popularity))", "score": -0.7618819760682527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,4.7), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.14968760595785757, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.20484669298853367, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.33907355161163905, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.411935566971062, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>=,2004-04-07), movie.id),movie.vote_average)", "score": -0.5116281148509517, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.5459226773254771, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,2004-04-07), movie.id),movie.vote_average)", "score": -0.5667872018816278, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.5850148923516688, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,2004-04-07), movie.vote_average),movie.vote_average))", "score": -0.6484501393824758, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average)", "score": -0.6582912572918133, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.6583217768972506, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),person.gender,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.6769096264238902, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.tagline,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.6973850418341749, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,>=,2004-04-07), movie.id),movie.vote_average)", "score": -0.7010140447423676, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,2004-04-07), movie.vote_average),movie.vote_average)", "score": -0.7134503285601237, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.13316148995070423, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2486569859840341, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(has_genre),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.27734777995529947, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.id,oscar_nominee.person_id), genre.name),genre.name))", "score": -0.28418138829401535, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.id,oscar_nominee.oscar_id), genre.name),genre.name))", "score": -0.3017859493513139, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.person_id), genre.name),genre.name))", "score": -0.31595748176411914, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id), genre.name),genre.name))", "score": -0.3335620428214177, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.33386138559875495, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),country.name,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3368633007162657, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,person.id), genre.name),genre.name))", "score": -0.3417126069494906, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.id,oscar_nominee.person_id), genre.name),genre.name))", "score": -0.3442274628141654, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3593380122036202, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.id,oscar_nominee.oscar_id), genre.name),genre.name))", "score": -0.36183204675100017, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3656375019483949, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(production_company),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36806914373857574, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.12999191641853064, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1947-09-04),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.14747043505637297, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.17568338948687867, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2163616159335363, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.22693815937025022, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.revenue,>,1947-09-04), movie.title),movie.title))", "score": -0.25834454098004817, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.27507743437608195, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,1947-09-04), movie.title),movie.title))", "score": -0.31199814693757894, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>=,1947-09-04), movie.title),movie.title))", "score": -0.3140716432087881, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1947-09-04),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.title))", "score": -0.3182469734231664, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>=,1947-09-04), movie.title),movie.title))", "score": -0.3443054474841327, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1947-09-04),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.35078871239324466, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.title))", "score": -0.37314119497674636, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,>,1947-09-04),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.382937724749085, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,<,1947-09-04), movie.title),movie.title))", "score": -0.39516886077792684, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.18747204644897267, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.1923642696801913, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.22722030582889266, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.2600316720848437, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production), oscar.number),oscar.number))", "score": -0.2816597405557644, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.category))", "score": -0.3164569297626105, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))", "score": -0.3196037395349963, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3213491529938291, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production), oscar.category),oscar.number))", "score": -0.3395690336905548, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.number),oscar.number))", "score": -0.349685184538092, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.year))", "score": -0.3508332701649627, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.category),oscar.number))", "score": -0.3545774077693106, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.year))", "score": -0.3557254933961813, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.35620518914253047, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Post Production),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.sub_category))", "score": -0.3690453347224023, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,=,it), keyword.name),keyword.name))", "score": -0.12476735723013194, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,it),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.19170990556456874, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,=,it), keyword.name),keyword.name))", "score": -0.22916530836259058, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,!=,it), keyword.name),keyword.name))", "score": -0.24210500144217004, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,=,it), keyword.name),keyword.name))", "score": -0.2576328771701189, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.original_language,=,it), keyword.name),keyword.name))", "score": -0.26380441900909263, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,it),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.28329425652639195, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,it), keyword.name),keyword.name))", "score": -0.308514179358907, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,<=,it), keyword.name),keyword.name))", "score": -0.3295194061897448, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,it), keyword.name),keyword.name))", "score": -0.34650295257462865, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),country.name,=,it), keyword.name),keyword.name))", "score": -0.3679808932484516, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),country.name,=,it), keyword.name),keyword.name))", "score": -0.3740583042536534, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),keyword.name,=,it), keyword.name),keyword.name))", "score": -0.37665486317086416, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,>=,it), keyword.name),keyword.name))", "score": -0.3815365115629246, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "How many keywords are associated to italian speaking movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,!=,it), keyword.name),keyword.name))", "score": -0.38885750249573847, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,it),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.07739371260686312, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.24998360699100886, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.popularity), movie.popularity))", "score": -0.3507245493528899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.39069890802784357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.48567616766376887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,=,Released),movie.popularity), movie.popularity))", "score": -0.5290950213966426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.5416166206268826, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Released), movie.popularity),movie.popularity))", "score": -0.5750506204931298, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,Released), movie.popularity),movie.popularity))", "score": -0.5839239378838101, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.original_language,=,Released),movie.popularity), movie.popularity))", "score": -0.6792659585771617, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.6847566157957772, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.popularity),movie.popularity))", "score": -0.7142065150110284, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,Released), movie.popularity),movie.popularity))", "score": -0.7565138322679559, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),person.gender))", "score": -0.8079364687582711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.popularity))", "score": -0.8147843977349112, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,spoken_language.iso_639_1),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.45245794105989806, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,spoken_language.iso_639_1),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.4533123204730668, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,spoken_language.iso_639_1),getData(movie),production_country.movie_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.46579869265507706, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,spoken_language.iso_639_1),getData(movie),production_country.movie_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.4666530720682458, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.4690096327989576, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.46986401221212637, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,spoken_language.iso_639_1),getData(movie),crew.movie_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.4781513897405751, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,spoken_language.iso_639_1),getData(movie),crew.movie_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.4790057691537438, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,spoken_language.iso_639_1),getData(movie),production_country.iso_3166_1,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.48489403001003795, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,spoken_language.iso_639_1),getData(movie),production_country.iso_3166_1,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.4857484094232067, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,oscar_nominee.oscar_id),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.5125420660815603, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.oscar_id),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.5133964454947291, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,cast.person_id),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.5161877969476957, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.5167655937524781, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,cast.person_id),getData(movie),oscar_winner.oscar_id,movie.id),movie.title,=,cs), movie.status),movie.status))", "score": -0.5170421763608645, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.1786723680376687, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2032472461172963, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.24703792078980577, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2554040016239135, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63), movie.vote_average),movie.vote_count)", "score": -0.26028291621917193, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63), movie.vote_count),movie.vote_count)", "score": -0.28719763494657635, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,>,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2922860134093313, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63), movie.id),movie.vote_count)", "score": -0.2997953613845605, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.32225798380286985, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63), movie.runtime),movie.vote_count)", "score": -0.3269642824005291, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63), movie.title),movie.vote_count)", "score": -0.33890804248686596, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),merge(getData(movie),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.34636630342637326, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,movie.id),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3633843645513156, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.vote_count)", "score": -0.3730031999661487, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3740529638576844, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.30615320645301836, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),movie.vote_count,=,Clare Niederpruem),getData(cast),movie.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.4251920495719599, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.4265264183235844, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.42658428691356676, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(cast),movie.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.433296202275613, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),movie.vote_count,=,Clare Niederpruem),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.43790111307264995, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.vote_count,!=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.4608005913370656, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,!=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.46569374047248857, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_count,!=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.49277179007451255, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.vote_count,<,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.49674468801482435, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),getData(cast),person.id,cast.person_id),movie.vote_count,!=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5002254021313712, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.vote_count,=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5102118758549313, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.vote_count,!=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5109072951376732, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.person_id),movie.vote_count,!=,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.521706421261579, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What's the status of the movie with the highest vote count starring Clare Niederpruem?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_count,<,Clare Niederpruem),movie.vote_count),movie.status))", "score": -0.5287157383425234, "correct_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Clare Niederpruem),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.vote_average),movie.budget))", "score": -0.1378171928190568, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.vote_count),movie.budget))", "score": -0.2706985287331918, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.runtime),movie.budget))", "score": -0.3833538852595666, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.revenue),movie.budget))", "score": -0.4755000434779504, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.5402073592733725, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.id),movie.budget))", "score": -0.5451034270190576, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),getData(movie),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.5610549764396938, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,oscar_nominee.movie_id),movie.vote_average),movie.budget))", "score": -0.584756301464551, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,movie.revenue),movie.vote_average),movie.budget))", "score": -0.5925703333992185, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.vote_average),movie.budget))", "score": -0.5990839037516887, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),getData(movie),movie.id,movie.revenue),movie.vote_average),movie.budget))", "score": -0.6334752476645926, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.title),movie.budget))", "score": -0.639850165691314, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),getData(movie),movie.id,has_genre.movie_id),movie.vote_average),movie.budget))", "score": -0.6453149892171423, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.vote_average),movie.title))", "score": -0.661943462673662, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.6628508925004637, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar_winner.oscar_id), oscar.year),oscar.year))", "score": -0.2881069840930838, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.28990743825329557, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.oscar_id), oscar.year),oscar.year))", "score": -0.2941299500849283, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.29825811807690117, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.year),oscar.year))", "score": -0.3030461376867367, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.genre_id,oscar_winner.oscar_id), oscar.year),oscar.year))", "score": -0.3223198919804123, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.326629350674765, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar.id), oscar.year),oscar.year))", "score": -0.33100033571040655, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.3314639751633394, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.33265231666660955, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar.id), oscar.year),oscar.year))", "score": -0.3370233017022511, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.33981465498694496, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar.id), oscar.year),oscar.year))", "score": -0.3422289776447947, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar_winner.oscar_id), oscar.year),oscar.number))", "score": -0.342714318309199, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.oscar_id), oscar.year),oscar.number))", "score": -0.34873728430104356, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))", "score": -0.021999019518261775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,4524), movie.title),movie.title))", "score": -0.30354253979749046, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,cast.movie_id),movie.vote_count,<=,4524), movie.title),movie.title))", "score": -0.6133235390171629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), company.name),movie.title))", "score": -0.6634478519845288, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))", "score": -0.6701332614393323, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,4524), movie.title),movie.title))", "score": -0.6825588199717458, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,4524), movie.title),movie.title))", "score": -0.7248012907854645, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),company.name))", "score": -0.7379157974792179, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,cast.movie_id),movie.vote_count,>=,4524), movie.title),movie.title))", "score": -0.7683821654527963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.budget),movie.title))", "score": -0.8091193984437268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.original_language))", "score": -0.8253564074111637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,4524),movie.title), movie.title))", "score": -0.8325024360201496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.budget))", "score": -0.8347123696876224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.runtime),movie.title))", "score": -0.8512960027146619, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}, {"orig_question": "What are the titles of those movies with a vote count lower or equal than 4524?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4524), movie.title),movie.title))", "score": -0.875138745032018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4524), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.birth_day,<=,1948-06-03), person.name),person.name))", "score": -0.24672016504170438, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.name))", "score": -0.27708773823176275, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.28020659787981894, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.death_day,<=,1948-06-03), person.name),person.name))", "score": -0.28243320324747767, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), person.name),person.name))", "score": -0.3221885635735153, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.name))", "score": -0.3380379708806046, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_day))", "score": -0.34692803655135174, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03),getData(person),oscar_nominee.person_id,person.id), person.name),person.death_day))", "score": -0.3500468961994079, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), person.name),person.name))", "score": -0.3527357729949251, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.35745049309289245, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.birth_day,<=,1948-06-03), person.name),person.death_day))", "score": -0.36150276709824486, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>=,1948-06-03),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.name))", "score": -0.362141728025322, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>=,1948-06-03),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.36526058767337816, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.death_place,<=,1948-06-03), person.name),person.name))", "score": -0.37139559697806696, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "In how many distinct subcategories are there oscars with nominated people that were born on or before 1948-06-03 ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.release_date,<=,1948-06-03), person.name),person.name))", "score": -0.3831768855231549, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),genre.id,has_genre.genre_id), company.name),company.name))", "score": -0.1935627264882806, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.movie_id,has_genre.genre_id), company.name),company.name))", "score": -0.20644388247717171, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Documentary), company.name),company.name))", "score": -0.25151691463957393, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),genre.id,movie.id), company.name),company.name))", "score": -0.2542179964414739, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.movie_id,movie.id), company.name),company.name))", "score": -0.267099152430365, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Documentary), company.name),company.name))", "score": -0.29311643379812824, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),genre.id,production_company.company_id), company.name),company.name))", "score": -0.32161731855698283, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),genre.id,has_genre.genre_id), company.name),movie.title))", "score": -0.3262216241998137, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,has_genre.genre_id), company.name),company.name))", "score": -0.327292311317343, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.genre_id,has_genre.genre_id), company.name),company.name))", "score": -0.33076421229380343, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),production_company.movie_id,has_genre.genre_id), company.name),company.name))", "score": -0.3316446879359349, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.movie_id,has_genre.genre_id),genre.name,None,Documentary), None),None))", "score": -0.3396289350878018, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Documentary),merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),has_genre.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),genre.id,has_genre.genre_id), company.name),company.name))", "score": -0.34274154697589876, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),genre.id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.movie_id,has_genre.genre_id),genre.name,None,Documentary), None),None))", "score": -0.3443636452965886, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many production companies were involved in movies that did not belong to the genre Documentary?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.movie_id,company.id),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),has_genre.movie_id,has_genre.genre_id),genre.name,None,Documentary), None),None))", "score": -0.34834694163353497, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.10316281810628425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.14322993204223167, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.2946992222987319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.5194980506621505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.6086960439406539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1987-05-15),movie.vote_average), movie.vote_average))", "score": -0.6207001851507812, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.6395178441725875, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.popularity))", "score": -0.6401117560290004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.6717816758737172, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1987-05-15), movie.vote_average),movie.popularity))", "score": -0.6801788699649478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>=,1987-05-15),movie.vote_average), movie.vote_average))", "score": -0.6823052884647041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,null,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.6976585988722945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.7118487898096646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))", "score": -0.7526765613765747, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the distinct vote averages of movies released on 1987-05-15?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.status))", "score": -0.7844398137949611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1987-05-15), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.09632833437923848, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.16805694983604855, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.2109043143706842, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.release_date),movie.popularity)", "score": -0.27975610312605853, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),merge(getData(movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3116789141271698, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3142119792624932, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,!=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.31903549843028794, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),merge(getData(movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.33927911514695425, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.original_language),movie.popularity)", "score": -0.3401151140404104, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3477686800545349, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.36422217588047207, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), person.gender),movie.popularity)", "score": -0.38125692192408894, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),merge(getData(movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),movie.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3843803499868062, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,!=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.39076411388709803, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3918223629955595, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))", "score": -0.0304993898171233, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,<,6.87278),movie.revenue), movie.revenue))", "score": -0.3548216851922916, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.87278), movie.revenue),movie.revenue))", "score": -0.5851644058275269, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))", "score": -0.632497137899918, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.popularity),movie.revenue))", "score": -0.6899782046239125, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.popularity))", "score": -0.7393352188664721, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),person.death_day))", "score": -0.7614922918874072, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), person.death_day),movie.revenue))", "score": -0.7733291610638844, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.87278), movie.revenue),movie.revenue))", "score": -0.7852143425989198, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.87278), movie.revenue),movie.revenue))", "score": -0.789068114667316, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),cast.person_id))", "score": -0.8015640773373889, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<,6.87278), movie.revenue),movie.revenue))", "score": -0.8231446861318545, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,6.87278), movie.revenue),movie.revenue))", "score": -0.8249694227270084, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,6.87278), movie.revenue),movie.revenue))", "score": -0.8282036303571658, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}, {"orig_question": "How may different revenues do movies with a popularity of less than 6.87278 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),cast.movie_id))", "score": -0.8339385189610766, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.87278), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.year),oscar.year))", "score": -0.1465400756452085, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.year),movie.vote_average))", "score": -0.2039705214057907, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), movie.vote_average),oscar.year))", "score": -0.21091712761549908, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), person.name),oscar.year))", "score": -0.21987199459816306, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>=,4524), oscar.year),oscar.year))", "score": -0.22250851813539996, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), movie.vote_average),movie.vote_average))", "score": -0.2683475733760813, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), person.name),movie.vote_average))", "score": -0.2773024403587453, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>=,4524), oscar.year),movie.vote_average))", "score": -0.27993896389598216, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>=,4524), movie.vote_average),oscar.year))", "score": -0.28688557010569055, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>=,4524), person.name),oscar.year))", "score": -0.29584043708835456, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>=,4524), movie.vote_average),movie.vote_average))", "score": -0.34431601586627275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,>=,4524), person.name),movie.vote_average))", "score": -0.35327088284893676, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.sub_category),oscar.year))", "score": -0.3636842831777649, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), movie.status),oscar.year))", "score": -0.36457293416734443, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "Are there any years in which a movie with a vote count of less or equal than 4524 won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524), oscar.year),person.name))", "score": -0.36876905587399506, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.vote_count,<=,4524),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))", "score": -0.020536456555419136, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>=,1061), movie.original_language),movie.original_language))", "score": -0.4319502463360177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),language.name))", "score": -0.4823816919888486, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.popularity))", "score": -0.557362487372302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1061), movie.original_language),movie.original_language))", "score": -0.5679702321722289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1061), movie.original_language),movie.original_language))", "score": -0.6199121038152953, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))", "score": -0.6211456822638866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>=,1061), language.name),movie.original_language))", "score": -0.6217112184435114, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,1061),movie.original_language), movie.original_language))", "score": -0.6348327396917739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.vote_count,>=,1061), movie.original_language),movie.original_language))", "score": -0.6632053248272254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>=,1061), movie.original_language),language.name))", "score": -0.6755614346447155, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,1061),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6906432305979922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,1061),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.7012187984798587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),spoken_language.movie_id))", "score": -0.7086776400174131, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of those movies with a vote count of at least 1061?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1061), movie.original_language),movie.original_language))", "score": -0.7096415321066161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1061), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.1858115183906823, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.26138502618717535, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2901709175807822, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), oscar.year),movie.runtime))", "score": -0.30905845112672825, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3137697575960757, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.runtime))", "score": -0.31460201151542044, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3288117471662881, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.name,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.34255564898968255, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3488825478878255, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.35335282806629864, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.35725822035599175, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.35992495081460363, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), oscar.sub_category),movie.runtime))", "score": -0.3602936571126962, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.status,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.36165120009898183, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3698684177681488, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,35841901), company.name),company.name))", "score": -0.11495299834366847, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.17508557582541404, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>=,35841901), company.name),company.name))", "score": -0.22682651682327512, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>=,35841901), company.name),company.name))", "score": -0.26420486302531393, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,35841901), company.name),company.name))", "score": -0.26687728843111763, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,35841901), company.name),company.name))", "score": -0.2865930316940045, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,=,35841901), company.name),company.name))", "score": -0.2869590943050207, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,>=,35841901), company.name),company.name))", "score": -0.29807216242250817, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.32305851570602406, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,35841901), company.name),company.name))", "score": -0.3241160259777226, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,35841901), company.name),company.name))", "score": -0.3243374405070595, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,35841901), company.name),company.name))", "score": -0.3582047399042537, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,35841901), company.name),company.name))", "score": -0.3699239555185145, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,35841901), company.name),company.name))", "score": -0.3700710362238967, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,35841901), company.name),company.name))", "score": -0.3787508401367872, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.180286278858755, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.22395129313505063, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.24201935028908406, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2684502636118627, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.28034934167154796, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,!=,2008-02-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.28720891562637796, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3052769727804114, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.30674460649492497, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3248126636489584, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.name,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.32510549505582237, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.3326032364722944, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.33261867253466726, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.3473358988989735, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.number),oscar.number)", "score": -0.3482971673711563, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3493824097702677, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.0864408059893638, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.10663408794031179, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.21405952108926787, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.2587857893855685, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), oscar.category),country.name))", "score": -0.35777539704820266, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), person.birth_place),country.name))", "score": -0.36191438986219493, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.36675879663555216, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.37177149258716463, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.3748307889796827, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), oscar.category),country.name))", "score": -0.37817743281506916, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), person.birth_place),country.name))", "score": -0.38584965858368175, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.3946090738047344, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), movie.status),country.name))", "score": -0.40585175581933863, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.411376320867835, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),company.name))", "score": -0.4114141811359296, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)", "score": -0.02470875490667962, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.popularity),movie.popularity)", "score": -0.46780683132659306, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.revenue)", "score": -0.5787547544147625, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,142), movie.id),movie.popularity)", "score": -0.5958405561946141, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.id)", "score": -0.8485770184028966, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.vote_average)", "score": -0.8575475355923382, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.revenue),movie.popularity)", "score": -0.8652490897330841, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,<,142), movie.id),movie.popularity)", "score": -0.8809790684824219, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>,142), movie.id),movie.popularity)", "score": -0.8899934923521426, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<,142), movie.id),movie.popularity)", "score": -0.8940404928511785, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.release_date),movie.popularity)", "score": -0.9090609157617243, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),spoken_language.iso_639_1)", "score": -0.9132525899113855, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), language.iso_639_1),movie.popularity)", "score": -0.9213433342092252, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,142), movie.id),movie.popularity)", "score": -0.9457903967246986, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie popularities of the movies with a vote count less than 142?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,142), movie.id),movie.popularity)", "score": -0.9484808199212613, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,142), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)", "score": -0.1329181559778903, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.popularity),movie.popularity))", "score": -0.26620275841742114, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,ar), movie.id),movie.popularity)", "score": -0.30416838615326974, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(filter(getData(movie),movie.original_language,!=,ar),movie.popularity)", "score": -0.49717594460249476, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.popularity),movie.popularity)", "score": -0.6014273978659265, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,ar), movie.popularity),movie.popularity))", "score": -0.6489947674581344, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,<,ar), movie.id),movie.popularity)", "score": -0.7022937449174698, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.popularity),movie.vote_average))", "score": -0.7172354481899674, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(filter(getData(movie),movie.original_language,=,ar),movie.popularity)", "score": -0.7182294577376601, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.vote_average),movie.popularity))", "score": -0.7194596076169546, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,ar), movie.popularity),movie.popularity)", "score": -0.7726776280413059, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.vote_average)", "score": -0.816088323737639, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,ar), movie.popularity),movie.popularity))", "score": -0.839829281954735, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,ar), movie.id),movie.popularity)", "score": -0.8579302238118125, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}, {"orig_question": "Find the average popularity of the movies whose original language is ar.", "inferred_code": "avg(filter(getData(movie),movie.original_language,>,ar),movie.popularity)", "score": -0.8653325048951714, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.14777512627075154, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.18604446644123918, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.1942854932171317, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,=,Red Bank, New Jersey), movie.id),movie.budget)", "score": -0.19454243533625468, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.23255483338761934, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)", "score": -0.2855255092887482, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.release_date),movie.budget)", "score": -0.2985572303829142, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,<,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.33461064161194776, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,Red Bank, New Jersey), movie.id),movie.budget)", "score": -0.3362669326223614, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.release_date),movie.budget)", "score": -0.33682657055340187, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,=,Red Bank, New Jersey), movie.budget),movie.budget)", "score": -0.35240842406829115, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.36421264845752765, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.3728799919904517, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.budget),movie.runtime)", "score": -0.3749004170051021, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}, {"orig_question": "What is the average movie budget for movies with an oscar nominee that died in Red Bank, New Jersey?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,<,Red Bank, New Jersey),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3811210187663442, "correct_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Red Bank, New Jersey),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.13768796196351585, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.19363529964571488, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.20410984394006124, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.23487929107110078, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.23916497339925388, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.2951123110814529, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3230543322366848, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.324497648920245, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3548362631586603, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.35526709605128454, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3648968973478793, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,>=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3790016699188838, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.380210465735797, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.gender,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3808732518134655, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the averaged runtime of movies with a cast member that was born in 1962-03-17 or before ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,<=,1962-03-17), movie.runtime),movie.runtime)", "score": -0.38164786330624245, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<=,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,cinematography),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_average),movie.vote_average)", "score": -0.15667474304037787, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.16009728815910648, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.16882859914909817, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,cinematography),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.18425461383012187, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography), movie.vote_average),movie.vote_average)", "score": -0.22753485812164356, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography), movie.id),movie.vote_average)", "score": -0.2803605141193511, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,cinematography), movie.vote_average),movie.vote_average)", "score": -0.2849778493886787, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.30532927989313535, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,cinematography),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.vote_average)", "score": -0.32342106618865035, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,cinematography),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.33175744376903715, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,cinematography), movie.id),movie.vote_average)", "score": -0.3378035053863862, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,cinematography),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_average),movie.vote_average)", "score": -0.33881790496809705, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.39785913572432574, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.40659044671431743, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies that won an oscar in the category \"cinematography\" ?", "inferred_code": "sum(distinct(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_average),movie.vote_average)", "score": -0.4266777416656281, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,cinematography),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)", "score": -0.10780930527397076, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.popularity))", "score": -0.3227260452549672, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.status))", "score": -0.40621199876477476, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.original_language))", "score": -0.465496447388432, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,The Object of My Affection), movie.id),movie.popularity)", "score": -0.47283501008629364, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,!=,The Object of My Affection), movie.id),movie.popularity)", "score": -0.5790583356438016, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.release_date))", "score": -0.602906492058537, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.title))", "score": -0.6091462042968487, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.vote_average),movie.popularity))", "score": -0.6176677071343875, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.popularity)", "score": -0.6583749143441435, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.popularity),movie.id))", "score": -0.6636221078078961, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.tagline,!=,The Object of My Affection), movie.id),movie.popularity)", "score": -0.7010680109964371, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.vote_average),movie.status))", "score": -0.701153660644195, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,The Object of My Affection), movie.popularity),movie.popularity))", "score": -0.7123192879225826, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}, {"orig_question": "What's the average movie popularity of all the movies except \"The Object of My Affection\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,!=,The Object of My Affection), movie.id),movie.popularity)", "score": -0.7264827976542222, "correct_code": "avg(distinct(filter(getData(movie),movie.title,!=,The Object of My Affection), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.055732893039352055, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.2297978936361767, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.vote_average),movie.vote_average)", "score": -0.4983273875385167, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5039402557955448, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5329710146229377, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>=,pl), movie.id),movie.vote_average)", "score": -0.5710058967046756, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.runtime)", "score": -0.6058553052003846, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_count)", "score": -0.6315173943322079, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.63232557645872, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.6394552821733787, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6613563352861129, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.vote_average),movie.vote_average)", "score": -0.663681245859488, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.6649869973790927, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.vote_average),movie.vote_average)", "score": -0.6723923881353413, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.6793961919446478, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.07937167316941318, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.17592777295235001, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.24769516118732052, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.24925222478569262, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2889008248048264, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))", "score": -0.29677540085256904, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.29680147765804815, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3288242100180689, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35365130594607047, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),movie.title))", "score": -0.3571389363412635, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3584958350371983, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.375257540967498, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,2012-08-06),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.382780391056158, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.383674526216174, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<,2012-08-06),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3849112201677001, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.death_place))", "score": -0.15721854566940643, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.status,=,Rumored), person.birth_place),person.death_place))", "score": -0.21123274975114711, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.death_place))", "score": -0.22437701339230237, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.25389288138920324, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),movie.status,=,Rumored), person.birth_place),person.death_place))", "score": -0.2705278908967641, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,cast.movie_id),movie.status,=,Rumored), person.birth_place),person.death_place))", "score": -0.2783461762230906, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.2846075856090797, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.death_place))", "score": -0.29060249326720117, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.status,=,Rumored), person.death_place),person.death_place))", "score": -0.3137526486212599, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.3210513491120992, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.death_place))", "score": -0.33192628825140275, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,=,Rumored), person.birth_place),person.death_place))", "score": -0.3376413173687076, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.status,=,Rumored), person.birth_place),person.birth_place))", "score": -0.3379873280507257, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.status,=,Rumored), person.birth_place),person.death_place))", "score": -0.3513876207507341, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birthplaces of the persons which where involved in a movie with status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(crew),getData(person),cast.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.35176605333197564, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))", "score": -0.2045194994637256, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,86),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.21367183967431683, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,86), language.name),language.name))", "score": -0.2300076686671346, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,86),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.24360923565667322, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<,86), language.name),language.name))", "score": -0.27110871612523313, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,86),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2790117563684208, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), movie.original_language),language.name))", "score": -0.2870332592806561, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),movie.original_language))", "score": -0.2887638852865649, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,86), language.name),language.name))", "score": -0.29288122799793054, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,86), movie.original_language),language.name))", "score": -0.31252142848406506, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,86), language.name),language.name))", "score": -0.31387407922785004, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,86), language.name),movie.original_language))", "score": -0.31425205448997384, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,86), language.name),language.name))", "score": -0.31836939720133955, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,86),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.35305839230148606, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}, {"orig_question": "In which languages are movies with a runtime of 86 minutes translated? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<,86), movie.original_language),language.name))", "score": -0.3536224759421636, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,=,86), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,60), company.name),company.name))", "score": -0.1375209600324398, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,<,60), company.name),company.name))", "score": -0.13901218117934686, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,60), company.name),company.name))", "score": -0.1559732445949592, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,<,60), company.name),company.name))", "score": -0.16044789152714403, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,60), company.name),company.name))", "score": -0.21461993039029695, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,<,60), company.name),company.name))", "score": -0.29342610902488664, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,60), company.name),company.name))", "score": -0.3154921870080538, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,<=,60), company.name),company.name))", "score": -0.3169834081549609, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.homepage,<,60), company.name),company.name))", "score": -0.3294664283809859, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,<,60), company.name),company.name))", "score": -0.3337009350506421, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,60), company.name),company.name))", "score": -0.3339444715705732, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,<=,60), company.name),company.name))", "score": -0.3384191185027581, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<,60), company.name),company.name))", "score": -0.3603961367929919, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.tagline,<,60), company.name),company.name))", "score": -0.3640105299440761, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}, {"orig_question": "Which companies produced movies which run for less than 60 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,60), company.name),company.name))", "score": -0.3700583113437258, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<,60), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.status),movie.vote_average))", "score": -0.23405786383955274, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.vote_average),movie.vote_average))", "score": -0.25284115005342755, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.title),movie.vote_average))", "score": -0.4122172199568013, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.status),movie.runtime))", "score": -0.4745178275188664, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.status),movie.popularity))", "score": -0.47871727276651654, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.status),movie.status))", "score": -0.48841238547174726, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.status),movie.title))", "score": -0.4887337141117314, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.vote_average))", "score": -0.4893425308546284, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.vote_average),movie.runtime))", "score": -0.4933011137327412, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.vote_average),movie.popularity))", "score": -0.49750055898039136, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.runtime),movie.vote_average))", "score": -0.4977131687483052, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.status),movie.vote_count))", "score": -0.5006448679050663, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.vote_average),movie.status))", "score": -0.5071956716856221, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.vote_average),movie.title))", "score": -0.5075170003256062, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}, {"orig_question": "Are there movies released after 2015-02-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.vote_average),movie.vote_count))", "score": -0.5194281541189412, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2015-02-07), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.name),person.name))", "score": -0.08879834479012061, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.name),person.name))", "score": -0.2649073719076114, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,1938-12-16),person.name), person.name))", "score": -0.3665751738153631, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,1938-12-16), person.name),person.name))", "score": -0.38053108444728423, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))", "score": -0.4114367484144168, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1938-12-16), person.name),person.name))", "score": -0.43938584318675566, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,1938-12-16), person.name),person.name))", "score": -0.5534724702156382, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,1938-12-16),person.name), person.name))", "score": -0.6634945643745596, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.name),person.name))", "score": -0.6682795487286057, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1938-12-16), person.name),person.name))", "score": -0.6863662718824344, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,1938-12-16),person.name), person.name))", "score": -0.689265735229128, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,1938-12-16),person.name), person.name))", "score": -0.7214830590091879, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.birth_place),person.name))", "score": -0.7252295724611031, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,1938-12-16), person.name),person.name))", "score": -0.7295814973331289, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,1938-12-16),person.name), person.name))", "score": -0.7573756016645348, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,movie.id),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.49237829683168954, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.4946380678259197, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.49553848527192973, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,movie.id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5097248135886632, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5119845845828933, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5128850020289034, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),oscar.id,movie.id),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.5184690140417174, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.518650880219951, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),keyword.name,=,Documentary),getData(spoken_language),oscar.id,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.5193416640104838, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.5207287850359476, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),keyword.name,=,Documentary), movie.title),movie.title))", "score": -0.5216292024819577, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),oscar.id,movie.id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.535815530798691, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5359973969769246, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),keyword.name,=,Documentary),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.5367755124195802, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies with the genere name Documentary?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,Documentary), movie.title),movie.title))", "score": -0.5380753017929212, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))", "score": -0.049993371714663226, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1980-03-27), person.gender),person.gender))", "score": -0.32928851445467444, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1980-03-27), person.gender),person.gender))", "score": -0.36756164034159156, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1980-03-27), person.gender),person.gender))", "score": -0.4870647612333414, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1980-03-27),person.gender), person.gender))", "score": -0.5011494537466206, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1980-03-27), person.gender),person.gender))", "score": -0.5177868028476951, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.birth_place),person.gender))", "score": -0.5600988041915116, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.birth_day),person.gender))", "score": -0.5708302032508072, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,1980-03-27), person.gender),person.gender))", "score": -0.6578429285509628, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),movie.popularity))", "score": -0.6677071912054089, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.birth_day))", "score": -0.6683688027624157, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1980-03-27), person.gender),person.gender))", "score": -0.684137177777302, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1980-03-27), person.gender),person.gender))", "score": -0.6851922293499229, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))", "score": -0.7135084326437209, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.birth_place))", "score": -0.740359173512843, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))", "score": -0.011892399676071364, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<,683),movie.release_date), movie.release_date))", "score": -0.5614308158255881, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,683), movie.release_date),movie.release_date))", "score": -0.657479347935805, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,683), movie.release_date),movie.release_date))", "score": -0.7006148717318865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.budget))", "score": -0.7077057284022885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.popularity),movie.release_date))", "score": -0.7301461236038449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))", "score": -0.7393527752537921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.budget),movie.release_date))", "score": -0.7548701898613217, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.popularity))", "score": -0.7962641042377072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,683), movie.release_date),movie.release_date))", "score": -0.8669434618041123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,683), movie.release_date),movie.release_date))", "score": -0.8725774120375718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), person.birth_day),movie.release_date))", "score": -0.9037274853744748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,683), movie.release_date),movie.release_date))", "score": -0.9051370452925767, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,683), movie.release_date),movie.release_date))", "score": -0.9096963833853806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies with a vote count of less than 683?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),crew.movie_id))", "score": -0.9130937975551205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,683), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.06118167516739101, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))", "score": -0.1324768780700929, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2380207307663054, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.29284224962713834, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.3028068071272436, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.36568745507633604, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))", "score": -0.3723983446003499, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.37323888903970304, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m),person.gender,=,m), movie.title),movie.title))", "score": -0.37954297739882775, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),person.gender,=,m), movie.title),movie.title))", "score": -0.38876397829827575, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.40508419054397526, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m), movie.title),movie.title))", "score": -0.4122509948911323, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,m), movie.title),movie.title))", "score": -0.4139329345317477, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))", "score": -0.41437914751675814, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.4153737095163517, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.05326355281431461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.33798619019944454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.36705027925927425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,=,69),movie.revenue), movie.revenue))", "score": -0.40509063381978194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.5032878111596801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,69), movie.revenue),movie.revenue))", "score": -0.5495010803933837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,69), movie.revenue),movie.revenue))", "score": -0.6052052568193176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<,69),movie.revenue), movie.revenue))", "score": -0.6654630713564984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.vote_count),movie.revenue))", "score": -0.6762131826035329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_count))", "score": -0.6802687217495986, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<=,69),movie.revenue), movie.revenue))", "score": -0.682635288725578, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,null,69), movie.revenue),movie.revenue))", "score": -0.7000506113763549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.7103019134156057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,69), movie.revenue),movie.revenue))", "score": -0.7158927862546989, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.718206681405718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.013384152876824373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.5522007881409081, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.7026312290436181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.7162572449051368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.7389950691467675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.budget))", "score": -0.7630939791888522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_average),movie.vote_count))", "score": -0.7724416939054208, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.title))", "score": -0.7886622856349277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.7893861835800635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.8012624044640688, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.number,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.8072144924408349, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.8129473632179725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.revenue),movie.vote_count))", "score": -0.84851957238061, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.revenue))", "score": -0.8491756628245639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the vote count for movies which don't have the title Crazy/Beautiful?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),company.name,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))", "score": -0.8612199960953149, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Crazy/Beautiful), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.21244692380618024, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.22252673931481826, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.22734637646707295, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.22965168888131351, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.29421953037708676, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.movie_id,movie.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.29594521318594874, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33402550634743944, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.movie_id,movie.id),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33575118915630137, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.34117557215239014, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.title,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3488396092258331, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.status,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.36011458573306776, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3782820671374086, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.sub_category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3808869464491635, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3846773465093723, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.39430517236288837, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.07753921772115459, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.18554153437889528, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.22432401400174462, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<,2011-02-11), company.name),company.name))", "score": -0.25195311406841664, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>,2011-02-11), company.name),company.name))", "score": -0.2717090209962131, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,2011-02-11), company.name),company.name))", "score": -0.27864129498683365, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2011-02-11),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3024955116696136, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2011-02-11), company.name),company.name))", "score": -0.3145795172966606, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.31565146270604216, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2011-02-11), company.name),company.name))", "score": -0.3246442971930537, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.32999733648567836, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,!=,2011-02-11), company.name),company.name))", "score": -0.33656127239588235, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3442746529914163, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,2011-02-11),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,2011-02-11), company.name),company.name))", "score": -0.34629456196114755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}, {"orig_question": "Are there any companies with a movie release date earlier than 2011-02-11 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,>,2011-02-11),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36925729467709956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<=,2011-02-11), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.10572789352132844, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.18140246455225367, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.23317101691164283, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.24618612849922691, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.24753305435565817, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy), movie.title),movie.title))", "score": -0.2557849540929233, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.27421345940264397, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(production_company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.28644282153063283, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.30533161281290533, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),company.id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.31588297196432774, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.32255692204491904, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Entropy),getData(production_company),production_company.movie_id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.32335372252796185, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),movie.budget,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.35119236701687256, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),getData(production_company),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.3601201301530399, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.budget),movie.title))", "score": -0.3785099986089804, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.025889005362842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.revenue),movie.budget))", "score": -0.45171584593117586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.revenue))", "score": -0.48758836867273203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.vote_count),movie.budget))", "score": -0.5153475593215262, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.revenue,!=,75000000),movie.budget), movie.budget))", "score": -0.5517325685941614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,75000000), movie.budget),movie.budget))", "score": -0.5704449134318565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,75000000), movie.budget),movie.budget))", "score": -0.6197902875392174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,75000000), movie.budget),movie.budget))", "score": -0.6280744252399018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.vote_count))", "score": -0.6814170408433711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.release_date))", "score": -0.7415894794648921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.7859075171218137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.release_date),movie.budget))", "score": -0.8407548855429923, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,75000000), movie.budget),movie.budget))", "score": -0.843264955063205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.8995524852471135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.title),movie.budget))", "score": -0.9009213637000357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.07456834975882093, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,jewelry store),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.1640690058370347, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.22473957150595908, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.2489728114789785, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,jewelry store),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.2682037985190324, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(has_keyword),getData(movie),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.29023814290809546, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.3060536811244929, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(getData(movie),merge(getData(has_keyword),getData(movie),has_keyword.keyword_id,movie.id),movie.id,has_keyword.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.34410843145584735, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),spoken_language.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.3701027625075874, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.37939168790579897, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.3895916218764162, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),language.name,!=,jewelry store), movie.title),movie.title))", "score": -0.4053460398367213, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.4135387837232908, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.movie_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.41871100880165846, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have a keyword name other than jewelry store?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id),keyword.name,!=,jewelry store), movie.title),movie.title))", "score": -0.4193802584065591, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,jewelry store),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))", "score": -0.06764412584743695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,675), movie.original_language),movie.original_language))", "score": -0.2931902809723397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,675), movie.original_language),movie.original_language))", "score": -0.3178101285084267, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,675), movie.original_language),movie.original_language))", "score": -0.39989508229336934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,675), movie.original_language),movie.original_language))", "score": -0.411648551998951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),language.name))", "score": -0.5166491335912724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.popularity))", "score": -0.5417867964788456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,!=,675), movie.original_language),movie.original_language))", "score": -0.5793324471767642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,=,675), movie.original_language),movie.original_language))", "score": -0.5943637940171943, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))", "score": -0.6042938143145875, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,675), movie.original_language),movie.original_language))", "score": -0.612827579556324, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,<,675), movie.original_language),movie.original_language))", "score": -0.6238730710707389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,null,675), movie.original_language),movie.original_language))", "score": -0.6388793988808175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,=,675),movie.original_language), movie.original_language))", "score": -0.6701733532900107, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a vote count of 675 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),spoken_language.movie_id))", "score": -0.7005047267957707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.popularity)", "score": -0.030320467716048162, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,42000000), movie.id),movie.popularity)", "score": -0.5270993285071854, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity)", "score": -0.5495363726360067, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.vote_average),movie.popularity)", "score": -0.5646796609257868, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.vote_average),movie.popularity))", "score": -0.6828668931048014, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,!=,42000000), movie.id),movie.popularity)", "score": -0.6835048179057926, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.vote_average)", "score": -0.732240613762302, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>=,42000000), movie.id),movie.popularity)", "score": -0.7451304823768737, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,42000000), movie.id),movie.popularity)", "score": -0.7647818113781434, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity))", "score": -0.7852792473058798, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.status),movie.popularity)", "score": -0.8240309517322374, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.revenue)", "score": -0.8614041372195428, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,>=,42000000), movie.id),movie.popularity)", "score": -0.8683074466776098, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.status)", "score": -0.8917744200248208, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(filter(getData(movie),movie.budget,!=,42000000),movie.popularity)", "score": -0.9142188977860015, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.06498310416980488, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.12227771271434462, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.2004103049110838, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,ghost town),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.25082033527450875, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.37340142765821105, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.3854391468610974, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,ghost town), movie.title),movie.title))", "score": -0.38942121214906456, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.original_language))", "score": -0.40571107060597084, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.41049363090218227, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.41575905938426844, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.41675062894534276, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.movie_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.43445792026806085, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.4348242916045787, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(has_keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.43714251278123767, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.43871385269249374, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_count)", "score": -0.06263159220404274, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.revenue)", "score": -0.3302252678634521, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,41.493), movie.id),movie.vote_count)", "score": -0.3608987354941305, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,41.493), movie.id),movie.vote_count)", "score": -0.42285052037661464, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,41.493), movie.id),movie.vote_count)", "score": -0.5706069167897501, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.budget)", "score": -0.6057005798800621, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,41.493), movie.id),movie.revenue)", "score": -0.6284924111535398, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,>,41.493), movie.id),movie.vote_count)", "score": -0.6664417994455066, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)", "score": -0.6786962874699478, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,41.493), movie.id),movie.revenue)", "score": -0.6904441960360239, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,41.493), movie.id),movie.vote_count)", "score": -0.7062437842632201, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,41.493), movie.id),movie.vote_count)", "score": -0.7119801758608166, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,41.493), movie.id),movie.vote_count)", "score": -0.7211176636667024, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.runtime)", "score": -0.75541992501821, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}, {"orig_question": "What is the total sum of movie votes where the average movie popularity is greater than 41.493", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.vote_average),movie.vote_count)", "score": -0.7623060624175787, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,41.493), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,2008),oscar.year),movie.runtime))", "score": -0.2968580334140993, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2008),oscar.year),movie.runtime))", "score": -0.33765896535095036, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,!=,2008),oscar.year),movie.runtime))", "score": -0.3681557774800581, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,2008),oscar.year),movie.runtime))", "score": -0.3791412708061934, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2008),oscar.year),movie.runtime))", "score": -0.4089567094169092, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,2008),oscar.year),movie.runtime))", "score": -0.41028238281263923, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,2008),oscar.number),movie.runtime))", "score": -0.41132275951120323, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,!=,2008),oscar.year),movie.runtime))", "score": -0.41949725481334194, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,>=,2008),oscar.year),movie.runtime))", "score": -0.45043901487215227, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2008),oscar.year),movie.runtime))", "score": -0.4510833147494903, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2008),oscar.number),movie.runtime))", "score": -0.45212369144805425, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,2008),oscar.year),movie.runtime))", "score": -0.45455146227690807, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,2008),oscar.year),movie.runtime))", "score": -0.46029822440639767, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,2008),movie.vote_average),movie.runtime))", "score": -0.46033582744938817, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}, {"orig_question": "What is the movie runtime for a minimum vote count without the oscar year 2008 ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,2008),movie.runtime),movie.runtime))", "score": -0.4646618785677196, "correct_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2008),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2046779810769423, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.2053948296304626, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.2184990603098696, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),has_keyword.keyword_id,country.iso_3166_1), country.name),country.name))", "score": -0.25623100270410093, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.26552601116632707, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.2661096093011445, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,has_keyword.movie_id), country.name),country.name))", "score": -0.2827559606311307, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.28428007292544333, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.oscar_id), country.name),country.name))", "score": -0.29884768753425284, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3098075604410711, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.31069450475799987, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_winner.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.31722717872395195, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.person_id,country.iso_3166_1), country.name),country.name))", "score": -0.32441515456051867, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),production_company.company_id,country.iso_3166_1), country.name),country.name))", "score": -0.3244927174818992, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced that have an oscar nominee who was born before May 27th 1922? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1922-05-27),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,crew.movie_id), country.name),country.name))", "score": -0.3314016078117053, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1922-05-27),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.name,=,directing), person.death_day),person.death_day))", "score": -0.28409668229174534, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,directing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.28660206977907965, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,!=,directing),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.28771280901915414, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,directing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.29347580680256874, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,directing), person.death_day),person.death_day))", "score": -0.30038033273567083, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.name,!=,directing), person.death_day),person.death_day))", "score": -0.31462620215723375, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,directing),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.3297917160216129, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,directing), person.death_day),person.death_day))", "score": -0.33090985260115924, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id),person.name,=,directing), person.death_day),person.death_day))", "score": -0.33541349038081464, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,directing),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.3444184672719676, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),person.id,oscar_winner.oscar_id),oscar.year,!=,directing),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.3461925227727492, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,directing),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.3512922275190903, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id),oscar.year,=,directing), person.death_day),person.death_day))", "score": -0.35169714082474013, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id),person.name,!=,directing), person.death_day),person.death_day))", "score": -0.36594301024630305, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}, {"orig_question": "How many people already died, who won an oscar for directing?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.person_id),person.name,=,directing), person.death_day),person.death_day))", "score": -0.36852596450976033, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,directing), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))", "score": -0.016225911836954765, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))", "score": -0.5840851024440781, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,8), movie.budget),movie.budget))", "score": -0.5922634712624131, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,8), movie.budget),movie.budget))", "score": -0.6624049059319077, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.release_date),movie.budget))", "score": -0.6932503456919221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.title),movie.budget))", "score": -0.6945330972521333, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.release_date))", "score": -0.699963350474718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.revenue))", "score": -0.7040632559655933, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,>,8),movie.budget), movie.budget))", "score": -0.7359876666596392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.vote_count))", "score": -0.7566626860498218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), person.death_place),movie.budget))", "score": -0.7655104870646028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.vote_count),movie.budget))", "score": -0.8016474122850923, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.title))", "score": -0.8092982365487842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,8), movie.budget),movie.budget))", "score": -0.8307865969109116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}, {"orig_question": "Find the budget of the movies which received the vote average value of more than 8.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),person.death_place))", "score": -0.8470269038080005, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.19025368009338475, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.19970120219631105, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.20436778238914832, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.2130571755428342, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.251734937627391, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.25765326414897793, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.26123578218033705, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.2658490399231546, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.27176736644474153, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,=,Didsbury, Manchester, England), movie.vote_average),movie.vote_count)", "score": -0.28891530785790387, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Didsbury, Manchester, England), movie.vote_average),movie.vote_count)", "score": -0.30227128120442703, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.32174004636027287, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.32936575376684635, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,<=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.357418514574655, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3622960388859532, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
