{"index": 0, "beams": [{"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.category))", "score": -0.21650621070858342, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.number))", "score": -0.23963963110924752, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.category))", "score": -0.2771228121851468, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.number))", "score": -0.30025623258581086, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.category))", "score": -0.30136068685433415, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.number),oscar.category))", "score": -0.3034706769717986, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.number))", "score": -0.3244941072549982, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.number),oscar.number))", "score": -0.32660409737246265, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.category))", "score": -0.3492183317434108, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.category))", "score": -0.3619772883308975, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.number),oscar.category))", "score": -0.3640872784483619, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,!=,2000-05-26), oscar.category),oscar.category))", "score": -0.3652785125481316, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.category),oscar.category))", "score": -0.36584712345404025, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>=,2000-05-26), oscar.sub_category),oscar.number))", "score": -0.3723517521440749, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories is a persons death day later than 2000-05-26?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_place,>=,2000-05-26), oscar.category),oscar.category))", "score": -0.3790791970274094, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,2000-05-26), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))", "score": -0.26066592408460565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,86),getData(spoken_language),movie.id,cast.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.29623809332000134, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,86),getData(movie),movie.id,cast.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.32588145193556156, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,86),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.33409418157588705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,86),getData(movie),movie.id,oscar_nominee.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.36373754019144733, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.runtime,=,86), movie.original_language),movie.original_language))", "score": -0.371017040680575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.4219396278587371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.43059906641010226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id), movie.original_language),movie.original_language))", "score": -0.433827177783322, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.4402936695982879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.441333131472585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,cast.movie_id), movie.original_language),movie.original_language))", "score": -0.44248661633468717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.4489531834620625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.4499926453363595, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}, {"orig_question": "Show the original movie language where the movie runtime equals 86 minutes", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,86),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id), movie.original_language),movie.original_language))", "score": -0.45218129483528224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,86), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.13377560559167526, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.20188084776362705, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2453318207076637, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2533376184278565, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))", "score": -0.2616377686119206, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),country.name,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.30058207521741814, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.31343706287961554, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3214428605998083, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.34879167493117696, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.35012626398713537, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.title),oscar.number))", "score": -0.3587536521243988, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.gender,!=,Uvalde, Texas), movie.title),movie.title))", "score": -0.36046422387267296, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,!=,Uvalde, Texas),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.364893833543845, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,!=,Uvalde, Texas), movie.title),movie.title))", "score": -0.3785419788326082, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}, {"orig_question": "How many oscar winner movie titles are from persons that are not born in Uvalde, Texas?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),crew.movie_id,oscar_winner.person_id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))", "score": -0.41632571690923076, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,!=,Uvalde, Texas), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))", "score": -0.011542136075149756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.budget))", "score": -0.6516683986337739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Post Production),movie.release_date), movie.release_date))", "score": -0.6668176978128031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.release_date))", "score": -0.6732351535392809, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.runtime))", "score": -0.6971863796861726, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Post Production), movie.release_date),movie.release_date))", "score": -0.754834080573346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.title))", "score": -0.76099666859227, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.budget),movie.release_date))", "score": -0.7676252478195238, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), person.birth_day),movie.release_date))", "score": -0.7885727637840318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Post Production), movie.release_date),movie.release_date))", "score": -0.7966959127152222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.release_date))", "score": -0.8018959516120958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.release_date))", "score": -0.8193193429542589, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),person.birth_day))", "score": -0.8369663050325471, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.release_date),movie.release_date))", "score": -0.8497616895401734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "Which are the release dates of the movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.release_date),movie.release_date))", "score": -0.897970283862378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.050930872420353636, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>=,1980-07-12), movie.title),movie.title))", "score": -0.2223072165360361, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1980-07-12),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2595833601082002, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.30944364207304464, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.3169988406639926, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.321282894038739, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.3233876372070939, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.33549928834296366, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.3410961895762526, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.status))", "score": -0.3582071271784908, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),production_country.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.3608802273502565, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,>,1980-07-12), movie.title),movie.title))", "score": -0.37247889160910763, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.title),movie.release_date))", "score": -0.38675836282502873, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,1980-07-12), movie.status),movie.title))", "score": -0.3944578743903141, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "For which movies were oscars won by persons born after 1980-07-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_day,>,1980-07-12), movie.title),movie.title))", "score": -0.3983044172126683, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1980-07-12),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.20947022738455628, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,>,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.28122945172772434, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.year))", "score": -0.32192771385637303, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.32815248827835497, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3401327167678976, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,!=,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.34051993347665893, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3430184490677811, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.death_day,>,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.3567128987742004, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.36804948966680534, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,>,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.year))", "score": -0.3721183492167593, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.37815970050979425, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,>,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.number))", "score": -0.38119486595715985, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,>,1960-04-23),oscar_winner.person_id,person.id), oscar.category),oscar.category))", "score": -0.3830038453319453, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,>,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.3959573883853164, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}, {"orig_question": "Are there any oscar winners younger than 1960-04-23?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1960-04-23),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.birth_day,>,1960-04-23),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.39841177895808727, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-04-23), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))", "score": -0.019888605871528853, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,1967-06-04), person.gender),person.gender))", "score": -0.5541899217714672, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), movie.popularity),person.gender))", "score": -0.5755475758996909, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.birth_place),person.gender))", "score": -0.6264665722337668, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), movie.status),person.gender))", "score": -0.6356552838769858, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,1967-06-04), person.gender),person.gender))", "score": -0.6400663866152172, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.birth_day),person.gender))", "score": -0.6507750749078696, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),movie.popularity))", "score": -0.6557733688459848, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),crew.person_id))", "score": -0.6691856060133432, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), country.name),person.gender))", "score": -0.7130113839593832, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.name),person.gender))", "score": -0.7195222377267783, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), crew.person_id),person.gender))", "score": -0.7308682798829977, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), movie.release_date),person.gender))", "score": -0.7319954037157004, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),movie.release_date))", "score": -0.7371323380575632, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}, {"orig_question": "What are the genders of the persons who are not born on the 1967-06-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),movie.status))", "score": -0.7609057698355173, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1967-06-04), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id),company.name,=,art direction (color)), company.name),company.name))", "score": -0.16896872581838251, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id),movie.title,=,art direction (color)), company.name),company.name))", "score": -0.19382468131298414, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,art direction (color)), company.name),company.name))", "score": -0.19677235655101008, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,production_company.company_id),company.name,=,art direction (color)), company.name),company.name))", "score": -0.20363606051627567, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,art direction (color)), company.name),company.name))", "score": -0.224114337076651, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,production_company.company_id),movie.title,=,art direction (color)), company.name),company.name))", "score": -0.2284920160108773, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,production_company.company_id),oscar.category,=,art direction (color)), company.name),company.name))", "score": -0.23143969124890323, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,production_company.company_id),oscar.number,=,art direction (color)), company.name),company.name))", "score": -0.25878167177454414, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,art direction (color)), company.name),company.name))", "score": -0.2787069237974467, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,production_company.company_id),company.name,=,art direction (color)),company.name,=,art direction (color)), company.name),company.name))", "score": -0.2811086823686561, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,production_company.company_id),company.name,=,art direction (color)),movie.title,=,art direction (color)), company.name),company.name))", "score": -0.2932124075961521, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,production_company.company_id),movie.title,=,art direction (color)), company.name),company.name))", "score": -0.2969735872992633, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,production_company.company_id),company.name,=,art direction (color)),company.name,=,art direction (color)), company.name),company.name))", "score": -0.30073792342338573, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,production_company.company_id),company.name,=,art direction (color)),movie.title,=,art direction (color)), company.name),company.name))", "score": -0.327625397702226, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}, {"orig_question": "Are there any production companies that have worked on a movie that has been nominated in the category art direction (color)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,production_company.company_id),movie.title,=,art direction (color)), company.name),company.name))", "score": -0.3484362966424797, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,art direction (color)), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.09150984249772065, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.13031260810771098, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.14102614344717893, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_count)", "score": -0.33001215207735807, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.35118120137150555, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,Paramount Pictures),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3694524081723169, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,Paramount Pictures),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3751069051118124, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.3813942030161545, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.4030221213987643, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.41373565673823226, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.41859203595913713, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.runtime),movie.vote_count)", "score": -0.43868769096055743, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.movie_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.4482892327820042, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id), movie.id),movie.vote_count)", "score": -0.4500338049924076, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.budget)", "score": -0.4500620854506999, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.24162290472556705, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.2424108718840856, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),movie.vote_average))", "score": -0.24810522543692845, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.vote_average))", "score": -0.24889319259544704, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), movie.vote_average),oscar.year))", "score": -0.3410482233393661, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), movie.vote_average),oscar.year))", "score": -0.3418361904978846, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), movie.vote_average),movie.vote_average))", "score": -0.3475305440507275, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), movie.vote_average),movie.vote_average))", "score": -0.34831851120924606, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),movie.runtime))", "score": -0.3492280392417206, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.runtime))", "score": -0.3500160064002391, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.35441395207360965, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.35520191923212824, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),movie.vote_average))", "score": -0.36089627278497105, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),movie.vote_average))", "score": -0.36168423994348964, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),person.name))", "score": -0.3738338261060957, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.198354530633389, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,242),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.death_place))", "score": -0.20521769782109778, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,242),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.21380178852194662, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.death_place))", "score": -0.21408706701616215, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.2939202765473591, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,242),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.2949895581880135, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,242),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.death_place),person.birth_place))", "score": -0.3035736488888623, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.death_place))", "score": -0.3096528129301322, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.333697030598876, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.death_day))", "score": -0.3384365291241504, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),company.name))", "score": -0.34002666647556873, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,242),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.death_day))", "score": -0.3424927540826149, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_place),person.death_place))", "score": -0.3494295669816491, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,242),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.birth_place))", "score": -0.3724366984395977, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}, {"orig_question": "How many female actors from different birthplaces have played in movies that last longer than 242 minutes?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,242),getData(cast),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_place),company.name))", "score": -0.3743112015332673, "correct_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.runtime,>,242),person.gender,=,f), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.22693705603782857, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.status),movie.status))", "score": -0.2746671147762846, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.popularity),movie.status))", "score": -0.3155608673265428, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.3532273606087873, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))", "score": -0.3617737332122092, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.status),movie.status))", "score": -0.36978528489857787, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m), movie.status),movie.status)", "score": -0.3738474541421441, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m), movie.id),movie.status)", "score": -0.3895904836141719, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,m), movie.status),movie.status)", "score": -0.3969296509917269, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.vote_average),movie.status))", "score": -0.4012568998402295, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,m), movie.id),movie.status)", "score": -0.40589100529854255, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.4231017392948515, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m), movie.status),movie.status))", "score": -0.43255695449123766, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.4809896943253707, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.status),movie.title))", "score": -0.48864385764472607, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))", "score": -0.030990963274234673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1947-11-11), movie.status),movie.status))", "score": -0.3773619527310075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1947-11-11), movie.status),movie.status))", "score": -0.4197639519661607, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1947-11-11), movie.status),movie.status))", "score": -0.5124878282040299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<,1947-11-11),movie.status), movie.status))", "score": -0.5573576644601417, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.title),movie.status))", "score": -0.6344591862834932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.title))", "score": -0.6524166992712708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.popularity))", "score": -0.7549046209860535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.vote_average))", "score": -0.7565538815069885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), country.name),movie.status))", "score": -0.7686563617862703, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,<,1947-11-11), movie.status),movie.status))", "score": -0.7771124924147443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.popularity),movie.status))", "score": -0.7773192412532808, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),production_country.iso_3166_1))", "score": -0.7857305935431214, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.vote_average),movie.status))", "score": -0.7978676445163728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}, {"orig_question": "What are the status of movies released before 1947-11-11?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),country.name))", "score": -0.8134487799216004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1947-11-11), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))", "score": -0.020719517924590036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<,83),movie.original_language), movie.original_language))", "score": -0.4549371143002645, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,83), movie.original_language),movie.original_language))", "score": -0.5917996852367651, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,83), movie.original_language),movie.original_language))", "score": -0.6554444520443212, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),language.name))", "score": -0.658106677205069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.popularity),movie.original_language))", "score": -0.7001638395886403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),spoken_language.iso_639_1))", "score": -0.7145094200677704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.popularity))", "score": -0.737617962033255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.revenue))", "score": -0.7500776573724579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), language.name),movie.original_language))", "score": -0.7506669147114735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,83), movie.original_language),movie.original_language))", "score": -0.7622973503021058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,83), movie.original_language),movie.original_language))", "score": -0.7833429067104589, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.revenue),movie.original_language))", "score": -0.7846505625348072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), spoken_language.movie_id),movie.original_language))", "score": -0.7986419780354481, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}, {"orig_question": "What original languages do movies with a runtime of less than 83 minutes have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,83), movie.original_language),movie.original_language))", "score": -0.8098410548118409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,83), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Andrew Secombe), person.gender),person.gender))", "score": -0.2692082998910337, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.status,=,Andrew Secombe), person.gender),person.gender))", "score": -0.2698173997559934, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Andrew Secombe), person.gender),person.gender))", "score": -0.28340553768066457, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Andrew Secombe), person.gender),person.gender))", "score": -0.2840146375456243, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))", "score": -0.42618254102853825, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Andrew Secombe), person.gender),person.gender))", "score": -0.44037977881816914, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,=,Andrew Secombe), person.gender),person.gender))", "score": -0.48804801978258183, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Andrew Secombe), person.gender),person.gender))", "score": -0.5022452575722127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Andrew Secombe), movie.release_date),person.gender))", "score": -0.5189177794018178, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.status,=,Andrew Secombe), movie.release_date),person.gender))", "score": -0.5195268792667775, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Andrew Secombe), movie.release_date),person.gender))", "score": -0.5331150171914487, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Andrew Secombe), movie.release_date),person.gender))", "score": -0.5337241170564084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),country.name,=,Andrew Secombe), person.gender),person.gender))", "score": -0.5440386263289838, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.popularity,=,Andrew Secombe), person.gender),person.gender))", "score": -0.5532364872851758, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}, {"orig_question": "What's the gender of Andrew Secombe?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Andrew Secombe), person.gender),person.gender))", "score": -0.5582358641186147, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Andrew Secombe), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), oscar.id),oscar.number)", "score": -0.06892477194572193, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<=,77), oscar.id),oscar.number)", "score": -0.19457848758008806, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<,77), oscar.id),oscar.number)", "score": -0.23692966863615322, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), oscar.number),oscar.number)", "score": -0.26290474060397034, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), movie.id),oscar.number)", "score": -0.2785951420812214, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,77), oscar.id),oscar.number)", "score": -0.31064136648291474, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), oscar.category),oscar.number)", "score": -0.33639919088225007, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), oscar.id),oscar.number)", "score": -0.3512948407342617, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), oscar.sub_category),oscar.number)", "score": -0.35389567625473467, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), movie.title),oscar.number)", "score": -0.3863601803596131, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<=,77), oscar.number),oscar.number)", "score": -0.38855845623833646, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,<=,77), movie.id),oscar.number)", "score": -0.4042488577155875, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),movie.runtime,=,77), oscar.id),oscar.number)", "score": -0.40984029123216076, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), company.id),oscar.number)", "score": -0.4167530651142324, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers that have been won for movies with a runtime of maximum 77? ", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,77), company.name),oscar.number)", "score": -0.42178419252938876, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,<=,77),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.vote_count))", "score": -0.10720726360887056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,197), movie.vote_count),movie.vote_count))", "score": -0.1818608890971518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,>=,197), movie.vote_count),movie.vote_count))", "score": -0.4370029072961188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,197), movie.vote_count),movie.vote_count))", "score": -0.46044248554244405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,197), movie.vote_count),movie.vote_count))", "score": -0.5267278652390814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,197), movie.vote_count),movie.vote_count))", "score": -0.5350961110307253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.year,>=,197), movie.vote_count),movie.vote_count))", "score": -0.5654322605332709, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.title),movie.vote_count))", "score": -0.5864635880789137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,197), movie.vote_count),movie.vote_count))", "score": -0.5891885857781745, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.vote_count))", "score": -0.6477790944918524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,197), movie.title),movie.vote_count))", "score": -0.661117213567195, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,197), movie.vote_count),movie.vote_count))", "score": -0.6633088462695014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), movie.vote_count),movie.title))", "score": -0.6646466388119734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar_winner.movie_id,>=,197), movie.vote_count),movie.vote_count))", "score": -0.6833835344514227, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes have the movies which have a run time of 197 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,197), oscar.number),movie.vote_count))", "score": -0.691612112124858, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,197), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,ps), genre.name),genre.name))", "score": -0.06540570444802812, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,ps),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18787038415019924, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ps), genre.name),genre.name))", "score": -0.2426009876697744, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.name,=,ps), genre.name),genre.name))", "score": -0.2865281914355609, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,ps), genre.name),genre.name))", "score": -0.3055282010008105, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,<,ps), genre.name),genre.name))", "score": -0.3277327175903833, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.title,=,ps), genre.name),genre.name))", "score": -0.3494446389684293, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,ps), genre.name),genre.name))", "score": -0.35054272573886963, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,ps), genre.name),person.death_place))", "score": -0.36313046842390867, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,ps), genre.name),genre.name))", "score": -0.36379622818466284, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,ps), genre.name),genre.name))", "score": -0.3976372446585181, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),spoken_language.iso_639_1,genre.id),movie.original_language,=,ps), genre.name),genre.name))", "score": -0.39927535989108703, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,ps),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.40989916295167395, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.homepage,=,ps), genre.name),genre.name))", "score": -0.41112805401432073, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}, {"orig_question": "Are there genres that for portuguese speaking movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,language.iso_639_1),movie.original_language,=,ps), genre.name),genre.name))", "score": -0.4126371925925644, "correct_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,ps),genre.name), genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Krush Groove), movie.id),movie.popularity)", "score": -0.05350741064505433, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Krush Groove), movie.id),movie.popularity)", "score": -0.30686656657200534, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)", "score": -0.35880039892356047, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Krush Groove), movie.id),movie.popularity)", "score": -0.5145738687815729, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Krush Groove),getData(movie),movie.id,movie.id), movie.id),movie.popularity)", "score": -0.6365788663506059, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Krush Groove), movie.id),movie.popularity)", "score": -0.6527452894505771, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Krush Groove),getData(movie),movie.id,cast.movie_id), movie.id),movie.popularity)", "score": -0.6877639915194821, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Krush Groove), movie.id),movie.popularity)", "score": -0.7107603353080474, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Krush Groove),getData(movie),movie.id,movie.id), movie.id),movie.popularity)", "score": -0.7177053764283536, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Krush Groove), movie.popularity),movie.popularity)", "score": -0.7577692867914404, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.homepage,=,Krush Groove), movie.id),movie.popularity)", "score": -0.7697250526949636, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),production_country.movie_id,=,Krush Groove), movie.id),movie.popularity)", "score": -0.7721692995102108, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Krush Groove), movie.id),movie.runtime)", "score": -0.786278758190347, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Krush Groove), movie.popularity),movie.popularity))", "score": -0.8175100171829399, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}, {"orig_question": "What's the average popularity of the movie \"Krush Groove\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Krush Groove), movie.id),movie.vote_average)", "score": -0.8316011750457329, "correct_code": "avg(distinct(filter(getData(movie),movie.title,=,Krush Groove), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.budget),movie.budget))", "score": -0.014362043766595889, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.title),movie.budget))", "score": -0.587945495331951, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.8), movie.budget),movie.budget))", "score": -0.6097519573013415, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.8), movie.budget),movie.budget))", "score": -0.6115111883918871, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.release_date),movie.budget))", "score": -0.6311433059818228, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.budget),movie.vote_count))", "score": -0.6324081866259803, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.budget),movie.title))", "score": -0.6620869485850562, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2.8), movie.budget),movie.budget))", "score": -0.6735252559374203, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.vote_count),movie.budget))", "score": -0.7189727170116385, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,2.8), movie.budget),movie.budget))", "score": -0.7427481588165392, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.budget),movie.revenue))", "score": -0.7497839776988258, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.8),movie.budget), movie.budget))", "score": -0.7794897465173563, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.budget),movie.original_language))", "score": -0.7822921721453895, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.budget),movie.release_date))", "score": -0.8064788429255714, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}, {"orig_question": "Which are the budgets of the movies which have average vote of 2.8?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2.8), movie.budget),movie.budget))", "score": -0.8183050330917467, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2.8), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.2285986332815227, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Ti?ng Vi?t),movie.revenue),movie.popularity))", "score": -0.23946611893666267, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.24918433676603705, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Ti?ng Vi?t),movie.popularity),movie.popularity))", "score": -0.28777365800868165, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.original_language,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.30831378618087085, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Ti?ng Vi?t),movie.revenue),movie.popularity))", "score": -0.3112822560369681, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),movie.original_language,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.3288994896653852, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))", "score": -0.35687441481969057, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Ti?ng Vi?t),movie.popularity),movie.popularity))", "score": -0.3595897951089871, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))", "score": -0.3774601183042049, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Ti?ng Vi?t),movie.popularity),movie.popularity))", "score": -0.3831088892830108, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.revenue),movie.popularity))", "score": -0.384693779008252, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.3895626850191349, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.40194347695593885, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}, {"orig_question": "What is the movie popularity of the movie that received the highest revenue and was translated to Ti?ng Vi?t?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.popularity))", "score": -0.4101781888210787, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Ti?ng Vi?t),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.1162212903946056, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.23255268888169667, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.3390376980751171, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.40732100823515793, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.45295790986710927, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.id))", "score": -0.49801228599244496, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.popularity))", "score": -0.5060747585594072, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.title))", "score": -0.5199148471801891, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.523652406722249, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.vote_average))", "score": -0.5415223057716503, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.5885876715328777, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.6024017557647312, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6097157430704101, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.status))", "score": -0.6224061570464983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.6301374159156694, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,!=,17500000), genre.name),genre.name))", "score": -0.09753811150683456, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,17500000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.098493909650576, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,17500000), genre.name),genre.name))", "score": -0.24126024448719297, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.title,!=,17500000), genre.name),genre.name))", "score": -0.25492616848523514, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,17500000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.26692566204960394, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.name,!=,17500000), genre.name),genre.name))", "score": -0.32323789070286335, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,!=,17500000), genre.name),person.death_place))", "score": -0.32341128478880904, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.budget,!=,17500000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3469811777778289, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,!=,17500000), person.death_place),genre.name))", "score": -0.3914302513350199, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,!=,17500000), genre.name),genre.name))", "score": -0.4039323729477584, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,17500000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),has_genre.genre_id))", "score": -0.409529266201168, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.budget,!=,17500000), genre.name),has_genre.genre_id))", "score": -0.42032517156228466, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,17500000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4214825389395966, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),has_genre.movie_id,!=,17500000), genre.name),genre.name))", "score": -0.42361634323416936, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "what are the genre names when the movie budget was not 17500000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,!=,17500000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),language.name))", "score": -0.4283644922146887, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,17500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,m), oscar.year),oscar.year))", "score": -0.2442759199475404, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,m), oscar.year),oscar.year))", "score": -0.2709708063339349, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,m), oscar.year),oscar.year))", "score": -0.4361967764016721, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,>=,m), oscar.year),oscar.year))", "score": -0.48936754078022204, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,m), oscar.year),movie.vote_average))", "score": -0.49687635138980113, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,!=,m), oscar.year),oscar.year))", "score": -0.511607166234171, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,>=,m), oscar.year),oscar.year))", "score": -0.5160624271666165, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,>=,m), oscar.year),oscar.year))", "score": -0.5223745513871864, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,m), oscar.year),movie.vote_average))", "score": -0.5235712377761956, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,!=,m), oscar.year),oscar.year))", "score": -0.5383020526205655, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.year),oscar.year))", "score": -0.5509489987613102, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,m), oscar.year),person.name))", "score": -0.5608159823750611, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,m), person.name),oscar.year))", "score": -0.5732137019222137, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,m), oscar.year),person.name))", "score": -0.5875108687614556, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "How many years did a male win an oscar? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,=,m), oscar.year),movie.vote_average))", "score": -0.589597710254671, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.014894731277308892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,=,48000000),movie.original_language), movie.original_language))", "score": -0.5593099431062001, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.original_language),movie.original_language))", "score": -0.632072591157339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.6493097824786673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.6709234860536526, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,48000000), movie.original_language),movie.original_language))", "score": -0.6834403980101342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.6979914539770107, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,48000000), movie.original_language),movie.original_language))", "score": -0.7276811831907253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.7560888078805874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),spoken_language.iso_639_1))", "score": -0.7635008377765189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.revenue))", "score": -0.7738368196223746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.7781791198576684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.popularity))", "score": -0.7931717319224845, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,48000000), movie.original_language),movie.original_language))", "score": -0.793347786697268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,48000000), movie.original_language),movie.original_language))", "score": -0.7996952045286889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.number))", "score": -0.19767969820411688, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.number))", "score": -0.22300948098045278, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.category))", "score": -0.22878099431177884, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.category))", "score": -0.25411077708811475, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.2896548450765208, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3267448335351643, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3520746163115002, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.3579615257928621, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,paris),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.number))", "score": -0.3645412161601229, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),has_keyword.movie_id,movie.id),keyword.name,=,paris),getData(oscar_nominee),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.36999908613755994, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),has_keyword.movie_id,movie.id),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.373053125070774, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,paris),getData(oscar_nominee),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.38901602992006284, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3906826301261683, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.3912250566793913, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many different oscar sub categories exist with movies having oscar nominees and the keyword paris?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.3920700913242499, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,paris),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))", "score": -0.015632560760423075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,100), movie.vote_count),movie.vote_count))", "score": -0.5057902986227418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,100), movie.vote_count),movie.vote_count))", "score": -0.5492585951506044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,100), movie.vote_count),movie.vote_count))", "score": -0.6296939903913881, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,100), movie.vote_count),movie.vote_count))", "score": -0.7007169597127358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_average))", "score": -0.71500344719243, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,100), movie.vote_count),movie.vote_count))", "score": -0.7381652051626588, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))", "score": -0.7606163030868629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.vote_count),movie.vote_count))", "score": -0.7656289212682168, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.vote_count),movie.vote_count))", "score": -0.7663600318410317, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_average),movie.vote_count))", "score": -0.7700507283952902, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,100), movie.vote_count),movie.vote_count))", "score": -0.7783501202284242, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,100), movie.vote_count),movie.vote_count))", "score": -0.7974270636259462, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.revenue))", "score": -0.8217567964966292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies that are 100 minutes long?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.revenue),movie.vote_count))", "score": -0.832189986067533, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,100), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))", "score": -0.03296360894819372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Tango & Cash), movie.status),movie.status))", "score": -0.36973437629421824, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.title))", "score": -0.47373209297438734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Tango & Cash), movie.status),movie.status))", "score": -0.49088159166058176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Tango & Cash), movie.status),movie.status))", "score": -0.4961646493502485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.title),movie.status))", "score": -0.5165399178840744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.vote_average))", "score": -0.6018592506625282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.popularity))", "score": -0.681338766215049, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),production_country.iso_3166_1))", "score": -0.7286255747058021, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), country.name),movie.status))", "score": -0.7339266404487716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), oscar.sub_category),movie.status))", "score": -0.737233327326976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),country.name))", "score": -0.738264122603141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),oscar.sub_category))", "score": -0.7443436771609413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.vote_average),movie.status))", "score": -0.7460042700149643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}, {"orig_question": "Which is the status of the movie Tango & Cash?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.runtime))", "score": -0.7622417002894508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Tango & Cash), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))", "score": -0.015600766768329777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,14.4037), movie.release_date),movie.release_date))", "score": -0.448346271426999, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,14.4037), movie.release_date),movie.release_date))", "score": -0.6061749896180118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.runtime))", "score": -0.687003077720874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.budget))", "score": -0.7020358459703857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.id),movie.release_date))", "score": -0.7064267855748767, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,14.4037), movie.release_date),movie.release_date))", "score": -0.7064674338471377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,14.4037), movie.release_date),movie.release_date))", "score": -0.7166765474394197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.runtime),movie.release_date))", "score": -0.7190201741323108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,14.4037), movie.release_date),movie.release_date))", "score": -0.7206006487976993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), person.birth_day),movie.release_date))", "score": -0.7679780584439868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,14.4037), movie.release_date),movie.release_date))", "score": -0.7721198639046634, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.popularity),movie.release_date))", "score": -0.7834750276670093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.title))", "score": -0.7872601763956482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}, {"orig_question": "Show movie release dates of all movies except those with a popularity rating of 14.4037", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.budget),movie.release_date))", "score": -0.7914353471860522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,14.4037), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.03472109179927874, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.23781797729831097, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.27881186343947933, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.movie_id))", "score": -0.33351932923192446, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),movie.title))", "score": -0.3365533383754569, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.id),company.name))", "score": -0.3875564615576066, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3892478805323354, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), movie.title),company.name))", "score": -0.39004652017916147, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.40515908740368417, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4115866449699859, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),movie.budget))", "score": -0.4152015735971463, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.id))", "score": -0.4211905227146431, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4264867466293366, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4271514637839234, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id), company.name),company.name))", "score": -0.4315194464705978, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),has_keyword.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.16825087672737074, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.20189553552105693, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),has_keyword.movie_id,movie.id), language.name),movie.original_language))", "score": -0.28904278611374057, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),keyword.id,has_keyword.keyword_id),keyword.name,=,suicide bombing), movie.original_language),movie.original_language))", "score": -0.29506654951099043, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),has_keyword.movie_id,movie.id), movie.original_language),language.name))", "score": -0.322469754835287, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),has_keyword.movie_id,has_keyword.keyword_id), movie.original_language),movie.original_language))", "score": -0.32681945781494537, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(spoken_language),movie.id,language.iso_639_1),has_keyword.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.3320577917636099, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.original_language),language.name))", "score": -0.33328126990733603, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(language),movie.id,spoken_language.movie_id),has_keyword.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.3357270731030268, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),has_keyword.movie_id,has_keyword.keyword_id), movie.original_language),movie.original_language))", "score": -0.3390359992314114, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))", "score": -0.3423898091161398, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),keyword.id,has_keyword.keyword_id),keyword.name,=,suicide bombing), language.name),movie.original_language))", "score": -0.34603360897540336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),keyword.id,has_keyword.keyword_id),keyword.name,=,suicide bombing), movie.popularity),movie.original_language))", "score": -0.3475432820765189, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,suicide bombing), movie.original_language),movie.original_language))", "score": -0.3492858631388204, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}, {"orig_question": "Are there any original language from the movie with the keyword name suicide bombing?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,suicide bombing),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_keyword.movie_id),has_keyword.movie_id,has_keyword.keyword_id), movie.original_language),movie.original_language))", "score": -0.3507964865303022, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,suicide bombing),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))", "score": -0.06227854084863793, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2013-06-23), person.birth_place),person.birth_place))", "score": -0.32065932457044255, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.name),person.birth_place))", "score": -0.3762593456049217, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.name))", "score": -0.4407513635669602, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_day),person.birth_place))", "score": -0.4855107851763023, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.gender),person.birth_place))", "score": -0.4932346232671989, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))", "score": -0.5385889709333975, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))", "score": -0.5464232269206548, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2013-06-23), person.birth_place),person.birth_place))", "score": -0.5753120035369648, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,2013-06-23),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5837673864544485, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,2013-06-23), person.birth_place),person.birth_place))", "score": -0.5896221914299531, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,2013-06-23),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.6008091315939129, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.death_place))", "score": -0.6047029691253556, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_day))", "score": -0.6049607592140092, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}, {"orig_question": "What are the persons birth places when their death day was before 2013-06-23?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2013-06-23), person.name),person.birth_place))", "score": -0.6346401293267263, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2013-06-23), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.12087571104107173, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.id,movie.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.19157522550969208, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.22202030786931154, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),company.id,movie.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.24417412342090694, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.id,production_company.movie_id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.27364177699098485, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2777835164140377, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.title,movie.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.278980784722372, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.release_date,movie.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.28607021109501524, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3122309704880332, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.id,company.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.31509860912042836, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.id,movie.id),production_company.movie_id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3187360258126006, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.id,movie.runtime),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.32025818319609944, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),company.id,production_company.movie_id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3262406562832033, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.3303417047823291, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),merge(getData(movie),getData(movie),movie.runtime,movie.id),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3318086222911887, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))", "score": -0.04518820358823705, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special achievement award (sound effects editing)), movie.budget),movie.budget))", "score": -0.21706398702582774, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,special achievement award (sound effects editing)),movie.title,=,Castle Rock, Colorado), movie.budget),movie.budget))", "score": -0.22366097831042256, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))", "score": -0.2821664474743439, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special achievement award (sound effects editing)),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.3059321854800902, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special achievement award (sound effects editing)),movie.title,=,Castle Rock, Colorado), movie.budget),movie.budget))", "score": -0.35471935877003136, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.budget),movie.budget))", "score": -0.35930384958857864, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,special achievement award (sound effects editing)),movie.title,<,Castle Rock, Colorado), movie.budget),movie.budget))", "score": -0.3815175983531953, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.revenue),movie.budget))", "score": -0.3930995219005407, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award (sound effects editing)),movie.title,=,special achievement award (sound effects editing)), movie.budget),movie.budget))", "score": -0.39332074999513145, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,special achievement award (sound effects editing)), movie.budget),movie.budget))", "score": -0.40165858798106957, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id), movie.budget),movie.budget))", "score": -0.41615731147538554, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.title))", "score": -0.4219803235430009, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.budget),movie.budget))", "score": -0.4289587230996172, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}, {"orig_question": "What are the different budgets used by movies that won an oscar in the sub category special achievement award (sound effects editing) with an oscar winner born in Castle Rock, Colorado?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id), movie.budget),movie.budget))", "score": -0.43225556865605214, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (sound effects editing)),merge(filter(merge(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),getData(crew),person.id,crew.person_id),person.birth_place,=,Castle Rock, Colorado),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.044775624089742, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.28305579138259185, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.29801550604331556, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)", "score": -0.3201742582754018, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.34585401750974015, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3464766032852777, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3589983072237379, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3665636673903739, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),country.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3790108462885796, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3832557171328906, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.38625787202114137, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3907214912958758, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(production_company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.39110556379490197, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.popularity)", "score": -0.3950075490754418, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue of movies produced by Spooky Tooth Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_company.company_id),company.name,=,Spooky Tooth Productions), movie.id),movie.revenue)", "score": -0.3957392225328466, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Spooky Tooth Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,6.1),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.08527414243336584, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.1298673170297694, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<,6.1),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.22031299605464782, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2305469328108416, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.30488233594522607, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<=,6.1),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.34170256646264957, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,6.1), language.name),language.name))", "score": -0.3511645477649612, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,6.1),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.35672044948370474, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,6.1),getData(language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.36461229509836013, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.3787840502713572, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,6.1),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3867674111775197, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,6.1), language.name),language.name))", "score": -0.3870546875077444, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,6.1),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3881426390959826, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,6.1), movie.original_language),language.name))", "score": -0.395759701165935, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "What are the spoken languages of movies with a vote average of at most 6.1?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,6.1),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.name), language.name),language.name))", "score": -0.4120774244463927, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,6.1),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),movie.vote_average))", "score": -0.19391851564677423, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.iso_3166_1,country.iso_3166_1), country.name),movie.vote_average))", "score": -0.27260293183595935, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),movie.title))", "score": -0.28838972416448, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Greece),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.2898972375224937, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30224178499738186, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),keyword.name))", "score": -0.33587379070709833, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),movie.vote_average))", "score": -0.3394704810899827, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,movie.id), country.name),movie.vote_average))", "score": -0.34139558802454983, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Greece),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.35784419677285545, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Greece),merge(getData(production_country),getData(movie),production_country.movie_id,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.3601387975413541, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Greece),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.3618226102396191, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.movie_id,country.iso_3166_1), country.name),movie.vote_average))", "score": -0.3622930693784116, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Greece),merge(getData(production_country),getData(movie),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.vote_average),movie.vote_average))", "score": -0.3641172110081177, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(movie),production_country.iso_3166_1,country.iso_3166_1), country.name),movie.title))", "score": -0.36707414035366515, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}, {"orig_question": "What is the movie vote average from production country Greece?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),production_country.iso_3166_1))", "score": -0.37061705316796195, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Greece), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.03471407042254392, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.budget)", "score": -0.22009737255312514, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)", "score": -0.2682046198704236, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.31633575806667324, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3508618130151378, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4064422255389041, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.release_date),movie.budget)", "score": -0.4096008038144966, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4135579659747542, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4144828876709322, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)", "score": -0.41455260526721066, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.person_id,movie.id), movie.id),movie.budget)", "score": -0.42750601787320475, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(crew),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4408222925281722, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.name,=,Alhambra, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.44374608288606465, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,cast.movie_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4467435484668606, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the movie budgets of all movies having cast members who died in Alhambra, Kalifornien?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Alhambra, Kalifornien),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.budget)", "score": -0.4478983107373181, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Alhambra, Kalifornien), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.title))", "score": -0.2239135396448546, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.vote_count))", "score": -0.22605096220650012, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.title),movie.title))", "score": -0.29173439412988955, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.title),movie.vote_count))", "score": -0.29387181669153506, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.vote_average))", "score": -0.3347669881550246, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.title),movie.vote_average))", "score": -0.40258784264005953, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,621),movie.vote_average), movie.id))", "score": -0.4919943384156795, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.runtime))", "score": -0.5514105600086623, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.title))", "score": -0.5609033074943, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.vote_count))", "score": -0.5630407300559455, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.title))", "score": -0.5974542465773993, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.vote_count))", "score": -0.5995916691390448, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.title),movie.runtime))", "score": -0.6192314144936972, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.status),movie.title))", "score": -0.6233511534301215, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.status),movie.vote_count))", "score": -0.625488575991767, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.18001927748182886, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.18620921769940055, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.21624512497931794, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,sound),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.21953775250652813, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.22298842710395134, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,sound),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.22917836732152302, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.2901235275035121, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))", "score": -0.33535761366512, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_day))", "score": -0.3492485661455087, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_day))", "score": -0.3554385063630804, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,sound),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.3669784769558416, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_place))", "score": -0.38279452299736394, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,sound), person.death_day),person.death_day))", "score": -0.38497618317979, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_place))", "score": -0.3889844632149356, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "How many different death days for oscar winners in the category sound are there?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_day))", "score": -0.3922177268429855, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.20069866080195792, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.27453137266741473, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.2831861371463828, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.32620320751704984, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3305820055781822, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3321920331795118, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),person.death_day,!=,Leehom Wang),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3523640895112805, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.36622455547633104, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,Leehom Wang),getData(oscar_nominee),oscar.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3666172385987613, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.3670199278056682, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),language.name,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.3756350225069321, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.37831302893761576, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_place,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.37910841601186535, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),person.name,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.386870269281572, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}, {"orig_question": "Whats the total budget of movies with a oscar nominee other than Leehom Wang?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),person.death_place,!=,Leehom Wang), movie.id),movie.budget)", "score": -0.39552503376054, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,!=,Leehom Wang), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.025370292913392916, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.runtime)", "score": -0.5743852053449521, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average)", "score": -0.7566513965854146, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7677712064687878, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),production_country.movie_id,movie.id),movie.id,production_company.movie_id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7954110835380509, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),cast.movie_id,movie.id),movie.id,production_company.movie_id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7993750343126563, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),company.name,=,Illuminata), movie.id),movie.vote_average)", "score": -0.8437538124448308, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.popularity)", "score": -0.8447816515002307, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.movie_id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.8498365789875025, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.runtime),movie.vote_average)", "score": -0.8630601520779211, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_count)", "score": -0.8700631212917939, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Illuminata), movie.id),movie.vote_average)", "score": -0.8847667350112917, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),oscar.year)", "score": -0.9020462816794597, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(company),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -1.0165231654077258, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), oscar.id),movie.vote_average)", "score": -1.0493574912764414, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))", "score": -0.011640054450253956, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.1), movie.budget),movie.budget))", "score": -0.681343068004935, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,6.1), movie.budget),movie.budget))", "score": -0.6858805095980642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.title))", "score": -0.7057707743224455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.original_language))", "score": -0.7127409414824797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.revenue))", "score": -0.7127679423865629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.vote_count))", "score": -0.716872675853665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.release_date),movie.budget))", "score": -0.7222176259820117, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))", "score": -0.7703459744443535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.title),movie.budget))", "score": -0.7726699179474963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.release_date))", "score": -0.7746186093863798, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))", "score": -0.7995908860757481, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.revenue),movie.budget))", "score": -0.8339123195473803, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.budget),movie.budget))", "score": -0.8508506907237461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}, {"orig_question": "How big are the different budgets for movies with an average vote other than 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.original_language),movie.budget))", "score": -0.853645867711748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,1448), keyword.name),keyword.name))", "score": -0.08733998240731174, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1448),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.1539050186554851, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))", "score": -0.17844079968371404, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,1448), keyword.name),keyword.name))", "score": -0.23384080771064797, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1448),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2907457061063605, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,1448), keyword.name),keyword.name))", "score": -0.2930327129347689, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,1448),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.35365394187715415, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,1448), keyword.name),keyword.name))", "score": -0.3647769942956911, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,1448), keyword.name),keyword.name))", "score": -0.36755012263754194, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,company.id),movie.vote_count,>,1448), keyword.name),keyword.name))", "score": -0.38984931578599197, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,1448), keyword.name),keyword.name))", "score": -0.4083969350084034, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,1448), keyword.name),has_keyword.keyword_id))", "score": -0.41447200668678336, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1448),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.4218827402725242, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,oscar.id),movie.vote_count,>,1448), keyword.name),keyword.name))", "score": -0.4245709761835784, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of all movies with a vote count more than 1448.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,1448), keyword.name),movie.vote_count))", "score": -0.4274670300214794, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,1448), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.07639621904309024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.17826777657683124, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.4144533868711733, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.46055436095412006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.popularity),movie.original_language))", "score": -0.6235448909756087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.6341489131594484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.6426952280417794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.6656114253030757, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),language.name,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.6741577401854066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Fast Five), movie.popularity),movie.original_language))", "score": -0.6831952248811632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,Fast Five), movie.popularity),movie.original_language))", "score": -0.6917415397634942, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.title),movie.original_language))", "score": -0.696114559268608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.701277702657535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), language.name),movie.original_language))", "score": -0.7079063249584578, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie titled \"Fast Five\" ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Fast Five), movie.popularity),movie.original_language))", "score": -0.7254164485093497, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.death_day))", "score": -0.13367138907779008, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.death_place))", "score": -0.21804247901309282, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))", "score": -0.3483165364013985, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2008-04-03), person.name),person.death_day))", "score": -0.349285404314287, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2008-04-03), person.name),person.death_place))", "score": -0.43365649424958974, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_day),person.death_day))", "score": -0.43993053503800184, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_place),person.death_day))", "score": -0.48366127081681043, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2008-04-03), person.name),person.death_day))", "score": -0.4951001360313967, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_day),person.death_place))", "score": -0.5243016249733046, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2008-04-03), person.name),person.name))", "score": -0.5639305516378954, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_place),person.death_place))", "score": -0.5680323607521132, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2008-04-03), person.name),person.death_place))", "score": -0.5794712259666994, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),movie.revenue))", "score": -0.6342961649643257, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,2008-04-03), person.name),person.death_day))", "score": -0.6528852294431999, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}, {"orig_question": "Who died before 2008-04-03?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.death_day),person.name))", "score": -0.6545756823616102, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2008-04-03), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.original_language),movie.original_language))", "score": -0.2497257553113741, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.original_language),language.name))", "score": -0.27878122404945316, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), language.name),movie.original_language))", "score": -0.4446420036329073, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,6.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.4540127128364984, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), language.name),language.name))", "score": -0.47369747237098636, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.vote_average),movie.original_language))", "score": -0.5087797008527559, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,6.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5134614935123266, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.original_language),movie.vote_average))", "score": -0.5150913633478922, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.original_language),person.name))", "score": -0.5285724140776438, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.vote_average),language.name))", "score": -0.537835169590835, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.original_language),movie.original_language))", "score": -0.5416250375637901, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), country.name),movie.original_language))", "score": -0.567104872323398, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.original_language),language.name))", "score": -0.5681415868530166, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), country.name),language.name))", "score": -0.5961603410614771, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}, {"orig_question": "Does s language name exist for movies with a vote average of 6.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.5), movie.popularity),movie.original_language))", "score": -0.5974615775121492, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,6.5), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.09693758477861034, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1961-03-07),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18376523520407428, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,1961-03-07),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18873033967039862, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21099295839272966, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.gender,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.22811618630491784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.2562988659904809, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,1961-03-07),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2737285066338359, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,!=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2751337369520607, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,1961-03-07),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.27556287017843223, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.person_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.291912522741895, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.29499398573576646, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,production_country.movie_id), country.name),country.name))", "score": -0.30413416882291333, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1961-03-07),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.30556284000153544, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.movie_id), country.name),country.name))", "score": -0.3085311192466401, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1961-03-07),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.31475997069396355, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.03513574045386078, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(distinct(extractValues(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name), company.name))", "score": -0.3605532608697826, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36682373342371233, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.3699840352478924, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4045320857285658, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), movie.title),company.name))", "score": -0.4118001700182617, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),movie.title))", "score": -0.41192762478046147, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.42269442886720077, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.movie_id))", "score": -0.4249894192112877, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.id),company.name))", "score": -0.4297626226701574, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.43260036944826913, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(keyword),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.43401255246291515, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),has_keyword.keyword_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.44361160884625783, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),country.name,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.44616909574777985, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}, {"orig_question": "Are there companies that are producing rumored movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.44882645244182023, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_count))", "score": -0.028052841342287138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))", "score": -0.40142390414257534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_average),movie.vote_count))", "score": -0.6078595847648103, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,185), movie.vote_count),movie.vote_count))", "score": -0.6454372136213351, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_average))", "score": -0.6902933623932768, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,185), movie.vote_count),movie.vote_count))", "score": -0.6946814386465121, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.revenue),movie.vote_count))", "score": -0.7093671888869721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,185), movie.vote_count),movie.vote_count))", "score": -0.7156654922582675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,185), movie.vote_count),movie.vote_count))", "score": -0.7612696147116367, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>,185),movie.vote_count), movie.vote_count))", "score": -0.7711254611203913, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,185), movie.vote_count),movie.vote_count))", "score": -0.8169181203993503, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.revenue))", "score": -0.8191071655892301, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,185), movie.vote_count),movie.vote_count))", "score": -0.823257061681943, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.title))", "score": -0.83571009899606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,185), movie.vote_count),movie.vote_count))", "score": -0.8437049842032138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.05166621960139986, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.14241401118533073, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.2839233615908933, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,<=,64572262), company.name),company.name))", "score": -0.37303442210623744, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<,64572262), company.name),company.name))", "score": -0.40211781897540405, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,>=,64572262), company.name),company.name))", "score": -0.4100402945899695, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.41424280663762136, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,64572262), company.name),company.name))", "score": -0.41769209366728216, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41907451983058097, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),production_company.company_id))", "score": -0.4192597971963138, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.movie_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.42758120707351993, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), movie.title),company.name))", "score": -0.4345235543941661, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.4350180803168349, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.4369144462313182, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,=,64572262), company.name),company.name))", "score": -0.4399959023312035, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))", "score": -0.1927218022829038, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.original_language))", "score": -0.31457592873630347, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.vote_average),movie.title))", "score": -0.32025397895631613, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr), movie.vote_average),movie.title))", "score": -0.38083579532541584, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.vote_average))", "score": -0.40193857579288306, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr), movie.vote_average),movie.original_language))", "score": -0.41834875138387156, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr), movie.title),movie.title))", "score": -0.4216131854891223, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.status))", "score": -0.4295454802995664, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), movie.vote_average),movie.title))", "score": -0.43136557101587125, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.vote_average),movie.original_language))", "score": -0.4421081054097158, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.original_language),movie.title))", "score": -0.44275416015443625, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr), movie.popularity),movie.title))", "score": -0.4586374038819612, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr), movie.title),movie.original_language))", "score": -0.459126141547578, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), movie.vote_average),movie.original_language))", "score": -0.468878527074327, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), movie.title),movie.title))", "score": -0.4721429611795777, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))", "score": -0.15749670247896574, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.revenue),movie.revenue))", "score": -0.3335697023139801, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,1910),movie.vote_average),movie.revenue))", "score": -0.36264966483577155, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.39602162744267844, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,<=,1910),movie.vote_average),movie.revenue))", "score": -0.45399286653264426, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_count),movie.revenue))", "score": -0.4914946822391357, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),getData(movie),movie.id,movie.id),movie.vote_average),movie.revenue))", "score": -0.4919480761045149, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,1910),movie.revenue),movie.revenue))", "score": -0.5387226646707859, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,1910),movie.vote_average),movie.revenue))", "score": -0.5677428847120609, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>=,1910),movie.vote_average),movie.revenue))", "score": -0.5681692665384617, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.5720946272776928, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.popularity),movie.revenue))", "score": -0.576253321574768, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<,1910),movie.vote_average),movie.revenue))", "score": -0.6011746051663067, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.runtime),movie.revenue))", "score": -0.6060540500038769, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,<=,1910),movie.revenue),movie.revenue))", "score": -0.6300658817344811, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.07321245628756953, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.1932662683936909, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_count))", "score": -0.2688124266291055, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.2965177829200321, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_average),movie.vote_average))", "score": -0.30177973266252867, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_average),movie.vote_average))", "score": -0.3365260725209113, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.34678879093233145, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker),movie.vote_average),movie.vote_average))", "score": -0.3863386340719826, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_average))", "score": -0.40584098132096097, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_count))", "score": -0.42191347155135794, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average))", "score": -0.43353571209433084, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.43957164773628243, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.vote_average))", "score": -0.4410320779488633, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(has_keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.45131054810558763, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.46040116349109267, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.025755206825124333, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2.6), movie.popularity),movie.popularity))", "score": -0.4798597467633954, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))", "score": -0.48127574960744823, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,2.6), movie.popularity),movie.popularity))", "score": -0.539768256017851, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.vote_average))", "score": -0.5815585113632551, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.5819345307572803, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.status))", "score": -0.626580462561833, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.id),movie.popularity))", "score": -0.6682534737083188, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,2.6), movie.popularity),movie.popularity))", "score": -0.7026477826329938, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.status),movie.popularity))", "score": -0.7303165716621152, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.revenue))", "score": -0.7492570735084882, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.6), movie.popularity),movie.popularity))", "score": -0.7608118844254932, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.release_date),movie.popularity))", "score": -0.7703322691413632, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.vote_average),movie.popularity))", "score": -0.7724528831931821, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.original_language))", "score": -0.7734749771225324, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.1551355624443699, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.vote_count),movie.status))", "score": -0.30942581358199484, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.3165856779490885, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.status))", "score": -0.3196208764891423, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,!=,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.status))", "score": -0.32292099095587345, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,!=,46),movie.vote_count),movie.status))", "score": -0.3573203996491573, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.number,>,46),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.3714488832332805, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.revenue),movie.status))", "score": -0.3894075451634549, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.title))", "score": -0.4002911103424713, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.number),movie.status))", "score": -0.4051148784699352, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.year),movie.status))", "score": -0.42287547614411897, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.43661775973543787, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,!=,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_count),movie.status))", "score": -0.4372343422272251, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,46),movie.vote_count),movie.status))", "score": -0.4422464657777032, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.runtime),movie.status))", "score": -0.4426342787233026, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))", "score": -0.045594844665174605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,260000000), movie.title),movie.title))", "score": -0.27982078089917195, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,260000000), movie.title),movie.title))", "score": -0.48448882594311726, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.original_language))", "score": -0.5296059718129982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,=,260000000),movie.title), movie.title))", "score": -0.5459667882641952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,260000000), movie.title),movie.title))", "score": -0.5686361004372884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,260000000), movie.title),movie.title))", "score": -0.5765434910317708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.budget))", "score": -0.5894852449891914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,260000000), movie.title),movie.title))", "score": -0.7000629712601949, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.budget),movie.title))", "score": -0.7217955514097412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,260000000), movie.title),movie.title))", "score": -0.7256294895669271, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.homepage,=,260000000), movie.title),movie.title))", "score": -0.7458173443337728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.release_date))", "score": -0.7612811496255745, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,260000000), movie.title),movie.original_language))", "score": -0.7638319080469955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}, {"orig_question": "Which movies have a budget of 260000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.status))", "score": -0.7818533351419319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.027257722151685645, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count)", "score": -0.5759944019491308, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)", "score": -0.5787928753064507, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count)", "score": -0.5800787402542301, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.vote_count)", "score": -0.6386770924891184, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.budget)", "score": -0.6814905296707139, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.7134489499003394, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id), movie.id),movie.vote_count)", "score": -0.7304163022807274, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_count)", "score": -0.7327974740519885, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,cast.movie_id), movie.id),movie.vote_count)", "score": -0.754789578774302, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Rumored), movie.id),movie.vote_count)", "score": -0.7588614746657321, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.7616636394713207, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Rumored), movie.id),movie.vote_count)", "score": -0.8004346909224246, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.vote_count)", "score": -0.8184363466262112, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),oscar.number)", "score": -0.8280916614991007, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.13401695860375185, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_place,=,Frankreich), movie.revenue),movie.revenue))", "score": -0.23759148044337053, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.revenue))", "score": -0.32693840255900675, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.revenue))", "score": -0.3339538332355364, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.revenue))", "score": -0.36010106133345154, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.revenue))", "score": -0.3671164920099812, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))", "score": -0.3710079443525477, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,!=,Frankreich), movie.revenue),movie.revenue))", "score": -0.38590218832541723, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.38984882509912455, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.3968642557756542, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.42301148387356935, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.430026914550099, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id), movie.revenue),movie.revenue))", "score": -0.47549472116240865, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Frankreich),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,movie.id), movie.revenue),movie.revenue))", "score": -0.4825101518389383, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many different movie revenues are there for movies with an actor that died in Frankreich?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_place,!=,Frankreich), movie.revenue),movie.revenue))", "score": -0.4894767101650359, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Frankreich),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,!=,1987),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.30562204191771475, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,!=,1987),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3247287071450751, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,1987),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3259579607211578, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,1987),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3450646259485181, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,1987), person.birth_day),person.birth_day))", "score": -0.36686677897368974, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.category,!=,1987),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3705001916490443, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,1987),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.37081150213843944, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.category,!=,1987),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.38960695669303547, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,1987),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.38991816861177714, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.gender,!=,1987),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.3911474221878598, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,1987), person.birth_day),person.birth_day))", "score": -0.3917263042530976, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.gender,!=,1987), person.birth_day),person.birth_day))", "score": -0.3944677314989229, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,!=,1987),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,crew.person_id), person.birth_day),person.birth_day))", "score": -0.3974802627183253, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),country.iso_3166_1,oscar_winner.oscar_id),oscar.sub_category,!=,1987), person.birth_day),person.birth_day))", "score": -0.41375059221927296, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays which did not win the oscar in 1987?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,!=,1987),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,crew.person_id), person.birth_day),person.birth_day))", "score": -0.4165869279456857, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1987), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.020696882574418967, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(genre),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.37371382252213614, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id), company.name),company.name))", "score": -0.3743041293549499, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3804335678191467, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id), company.name),company.name))", "score": -0.3961503277750154, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),genre.name))", "score": -0.39621045282790146, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.39760176541855, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4051324365298188, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.41491753283867083, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.4187324782289151, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(keyword),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.41974285331548483, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.42307924552062004, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),movie.title))", "score": -0.42666080163056197, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4281472764343747, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there any company which produced a movie with a popularity of 23.5317?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.428590270948459, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,23.5317),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,!=,235483004),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2250422040896705, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,!=,Tulsa, Oklahoma), genre.name),genre.name))", "score": -0.25265872172642706, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,235483004),getData(oscar_winner),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.26157785100993897, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,!=,235483004), genre.name),genre.name))", "score": -0.2766262676588132, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,Tulsa, Oklahoma),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31510776513261096, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(genre),has_genre.genre_id,genre.id),person.id,oscar_winner.person_id), genre.name),genre.name))", "score": -0.33144547814270386, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(genre),oscar_winner.oscar_id,genre.id),person.id,oscar_winner.person_id),person.gender,!=,Tulsa, Oklahoma), genre.name),genre.name))", "score": -0.3445168328410115, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(genre),has_genre.genre_id,genre.id),person.id,oscar_winner.person_id),person.gender,!=,Tulsa, Oklahoma), genre.name),genre.name))", "score": -0.3690427708308743, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),has_genre.genre_id,genre.id),person.gender,!=,Tulsa, Oklahoma), genre.name),genre.name))", "score": -0.36957526546168645, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,!=,235483004),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,oscar_winner.person_id), genre.name),genre.name))", "score": -0.36967782209613576, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,!=,235483004),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.3779749355399871, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),country.name,!=,235483004),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3788529930238279, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,235483004),getData(oscar_winner),person.id,oscar_winner.person_id),getData(genre),oscar_winner.person_id,genre.id), genre.name),genre.name))", "score": -0.39973918425883687, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,Tulsa, Oklahoma),getData(oscar_winner),person.id,oscar_winner.person_id),getData(genre),oscar_winner.oscar_id,genre.id), genre.name),genre.name))", "score": -0.4004199375573869, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}, {"orig_question": "How many genres are there for movies that generate a revenue of less than 235483004 and for which a person won an oscar who was not born in Tulsa, Oklahoma ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,!=,235483004),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,oscar_winner.person_id), genre.name),genre.name))", "score": -0.4163032011251202, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_place,!=,Tulsa, Oklahoma),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,<,235483004), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.1326976342291022, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.2455126818699583, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.death_place))", "score": -0.27492751162446, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.298680899349019, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.birth_place))", "score": -0.3246456809201342, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.3266869041626198, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),language.iso_639_1,oscar_winner.person_id), person.name),person.name))", "score": -0.33444430383610224, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,spoken_language.iso_639_1), person.name),person.name))", "score": -0.3429763758127764, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.person_id), person.name),person.name))", "score": -0.35282085069563324, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.3729004858000894, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.death_day))", "score": -0.3772131047287004, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),genre.id,oscar_winner.person_id), person.name),person.name))", "score": -0.377434505491718, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.385340921842518, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.name),person.death_place))", "score": -0.3877425592653161, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}, {"orig_question": "How many persons died in Oxnard?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Oxnard),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,person.id),person.id,oscar_winner.person_id), person.name),person.name))", "score": -0.3882233492566722, "correct_code": "count(filter(getData(person),person.death_place,=,Oxnard))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28), movie.id),movie.revenue)", "score": -0.07338950017033735, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)", "score": -0.10794578383946236, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-02-28), movie.id),movie.revenue)", "score": -0.3119002150367399, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1933-02-28),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3307183195988883, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)", "score": -0.3782814989496435, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28), movie.id),movie.popularity)", "score": -0.38450966717031027, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28), movie.id),movie.runtime)", "score": -0.3952241824793361, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28),getData(oscar),oscar_winner.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.4074756332642707, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28),getData(oscar),oscar_winner.oscar_id,movie.id), movie.id),movie.revenue)", "score": -0.4301605402397489, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id), movie.id),movie.revenue)", "score": -0.4399872820841464, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.44658856843275785, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.runtime)", "score": -0.4505885014566149, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.runtime),movie.revenue)", "score": -0.4588832130405198, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),person.birth_day,<,1933-02-28), movie.id),movie.revenue)", "score": -0.4670482282847461, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}, {"orig_question": "What's the total revenue sum of movies that won an oscar where the oscar winner was born before 1933-02-28?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1933-02-28), movie.id),movie.revenue)", "score": -0.46882823679497065, "correct_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1933-02-28),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.05550544982810771, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.2643720670368149, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.27766176503513607, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3321681368936128, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3548896815580513, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3627247385501896, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.39688949210649516, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.40003949961824004, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(production_company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4109679386522414, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4144488631122859, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.432425360315428, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.43466622403785565, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.43622159678607514, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.43702016309026775, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.44211803349286255, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.06458775515672735, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.20494239670908, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.popularity),movie.vote_average))", "score": -0.2676308664230304, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.2846261998404262, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3426113027197742, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.3434683942644111, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3732813050098662, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.popularity),movie.vote_average))", "score": -0.37694077923991537, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3832562176631672, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,!=,Hrvatski),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.revenue),movie.vote_average))", "score": -0.3913038682690979, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.39335102213452794, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(keyword),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.40366533376020125, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.4045060780277816, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.4049865808905769, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.41165521868818955, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.08067811180080753, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.birth_day))", "score": -0.29228963975037914, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,f), person.birth_day),person.birth_day))", "score": -0.3443136763962684, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.birth_day))", "score": -0.37079652670945507, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.gender))", "score": -0.4770927419158397, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.gender),person.birth_day))", "score": -0.5218874727579532, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_place),person.birth_day))", "score": -0.5511295710894046, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_place))", "score": -0.601355879494804, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.status,=,f), person.birth_day),person.birth_day))", "score": -0.606103653946775, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),movie.release_date))", "score": -0.6159406592341838, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),crew.person_id))", "score": -0.6457048346492229, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), movie.release_date),person.birth_day))", "score": -0.6512028490396915, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),country.name,=,f), person.birth_day),person.birth_day))", "score": -0.6539894295128761, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.death_day))", "score": -0.6738081862422405, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.gender))", "score": -0.6887042698654113, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.0763380569457068, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,crew.movie_id),movie.vote_average,!=,2),getData(person),crew.person_id,person.id), person.death_place),person.death_place))", "score": -0.16860459306119926, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))", "score": -0.21400410755484148, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.24329939657352592, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.budget),person.death_place))", "score": -0.32338771138600997, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),movie.budget))", "score": -0.3332024173777552, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.movie_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.34699626282573987, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), movie.budget),person.death_place))", "score": -0.3522338261327619, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), genre.name),person.death_place))", "score": -0.3716142962696449, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,crew.movie_id),movie.vote_average,!=,2),getData(person),crew.person_id,movie.id), person.death_place),person.death_place))", "score": -0.38126152941894814, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(cast),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.38207850921007264, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,2),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))", "score": -0.40427970287969167, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),keyword.name))", "score": -0.4045377999278384, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,cast.movie_id), person.death_day),person.death_place))", "score": -0.40755800198090664, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of the crew when the movie vote average is not 2.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,2),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_day))", "score": -0.4091293760208021, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.vote_average,!=,2), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))", "score": -0.01594082008523401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,48000000), movie.runtime),movie.runtime))", "score": -0.5098500514723128, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.runtime),movie.runtime))", "score": -0.6007678771711653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.release_date))", "score": -0.6261349718406564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,<=,48000000), movie.runtime),movie.runtime))", "score": -0.71151165185438, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,<=,48000000),movie.runtime), movie.runtime))", "score": -0.7165781389558106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.title))", "score": -0.7259586255386239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.runtime),movie.runtime))", "score": -0.7260866428114241, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,48000000), movie.runtime),movie.runtime))", "score": -0.742545644621714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.vote_average),movie.runtime))", "score": -0.7520766847155755, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.status))", "score": -0.780531982643879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),person.birth_day))", "score": -0.7870997588470345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,48000000), movie.runtime),movie.runtime))", "score": -0.7981071275280556, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.title),movie.runtime))", "score": -0.8047807805560296, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a budget equal or smaller than 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,48000000), movie.runtime),movie.runtime))", "score": -0.8055773776577553, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.13914633436797885, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.1519699086129549, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.20552325143216876, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.6185410077378037, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.6313645819827798, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.revenue,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.634949176448572, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.name),person.death_place))", "score": -0.6498057300850633, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.death_place),person.name))", "score": -0.6603579086877289, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), keyword.name),person.death_place))", "score": -0.6614639217659715, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.name),person.death_place))", "score": -0.6626293043300393, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),person.name))", "score": -0.673181482932705, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), keyword.name),person.death_place))", "score": -0.6742874960109475, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.6849179248019936, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.name),person.death_place))", "score": -0.7161826471492532, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.death_place),keyword.name))", "score": -0.723942713222641, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.title))", "score": -0.2860369455665932, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_count))", "score": -0.3022473227829323, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1219), movie.title),movie.title))", "score": -0.3681348708123551, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1219), movie.title),movie.vote_count))", "score": -0.3843452480286942, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_average))", "score": -0.3935572278351174, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1219), movie.title),movie.vote_average))", "score": -0.47565515308087924, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1219), movie.title),movie.title))", "score": -0.4805020239800797, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.budget))", "score": -0.483396567091404, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1219), movie.title),movie.vote_count))", "score": -0.4967124011964188, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1219), movie.title),movie.title))", "score": -0.52715335755056, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1219), movie.title),movie.title))", "score": -0.5393904891461716, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1219), movie.title),movie.vote_count))", "score": -0.5433637347668991, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1219), movie.title),movie.vote_count))", "score": -0.5556008663625107, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1219), movie.title),movie.budget))", "score": -0.5654944923371659, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.revenue))", "score": -0.5708023083061562, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.03907829699809513, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,176), country.name),country.name))", "score": -0.1485446760222136, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,176),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3281012166928239, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.3532936065124808, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.status))", "score": -0.37697611639952744, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.39204714526539597, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39245082337917625, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4100010542505266, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.42875040307417805, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.name),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4402280683948631, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.iso_3166_1),country.name))", "score": -0.4415182898582956, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,176), country.name),country.name))", "score": -0.4424313091842306, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.4426935008276434, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,production_country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4437959627783663, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were movies with a runtime of 176 minutes produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.45687014291637157, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,176),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.07764858562586596, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.2245690915369778, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.death_place))", "score": -0.3658392019206076, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.4969319644951611, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.49999856386421015, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Encino, Kalifornien, USA), person.name),person.death_place))", "score": -0.5127597078317194, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),company.name,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5715428534531384, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.death_place),person.name))", "score": -0.588341193702945, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5937854591393261, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6006284299874096, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.death_day),person.name))", "score": -0.6540283136637299, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),genre.name,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6740429345154553, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.death_day))", "score": -0.6764432377749472, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.budget,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.6833010259651928, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.birth_place),person.name))", "score": -0.7074449830324738, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(language),language.name,!=,T\u00fcrk\u00e7e),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.vote_average,<,1.9), company.name),company.name))", "score": -0.3772223692630878, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,<,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.38040002465375605, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.381593280715098, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(language),language.name,!=,T\u00fcrk\u00e7e),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.vote_average,=,1.9), company.name),company.name))", "score": -0.3819098292222391, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.vote_average,<,1.9), company.name),company.name))", "score": -0.3874918993846537, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(language),language.name,!=,T\u00fcrk\u00e7e),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.original_language,<,1.9), company.name),company.name))", "score": -0.389403124230034, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.vote_average,=,1.9), company.name),company.name))", "score": -0.39165500989021534, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(language),language.name,!=,T\u00fcrk\u00e7e),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.original_language,=,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.3940905841891853, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.vote_average,<,1.9), company.name),company.name))", "score": -0.396718766861176, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.vote_average,=,1.9), company.name),company.name))", "score": -0.3995904329265293, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.original_language,<,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.399702433222088, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),language.name,<,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.401012342611085, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),language.name,=,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.402205598672427, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(company),production_company.company_id,company.id),movie.original_language,<,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.40898906655813405, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,T\u00fcrk\u00e7e),getData(company),production_company.company_id,company.id),movie.vote_average,<,1.9), company.name),company.name))", "score": -0.41764616463423065, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.14469771734729875, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,!=,1938-03-04), person.name),person.name))", "score": -0.1918523599888431, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.gender,>,1938-03-04), person.name),person.name))", "score": -0.43366476795927156, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.name))", "score": -0.44878067093668506, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,>,1938-03-04), person.name),person.name))", "score": -0.4507421245361911, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,!=,1938-03-04),person.name), person.name))", "score": -0.47074612247524783, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.gender,!=,1938-03-04), person.name),person.name))", "score": -0.4808194106008159, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,!=,1938-03-04), person.name),person.name))", "score": -0.4974279386121714, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,!=,1938-03-04), person.name),person.name))", "score": -0.49789676717773546, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.5428387342670409, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,<,1938-03-04), person.name),person.name))", "score": -0.5586944212700473, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>=,1938-03-04), person.name),person.name))", "score": -0.5697620799328433, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.birth_day,!=,1938-03-04), person.name),person.name))", "score": -0.5850296918383685, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.gender))", "score": -0.6273239235888468, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-03-04), person.name),person.name))", "score": -0.6415339102532016, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.title))", "score": -0.16275416818461963, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.title),movie.title))", "score": -0.3252702219506318, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.3705855434855039, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.3831724947413022, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.title))", "score": -0.45132271704278537, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Brotherly Love), movie.title),movie.title))", "score": -0.473423467399698, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.vote_average),movie.title))", "score": -0.4780571883638913, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.title))", "score": -0.5064917629679258, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.release_date))", "score": -0.5072194649001176, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.budget))", "score": -0.5107868922968919, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.5331015972515161, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.status),movie.title))", "score": -0.5351745313128049, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.budget),movie.title))", "score": -0.5394573336561734, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.5456885485073144, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Brotherly Love), movie.title),movie.title))", "score": -0.5663622388710792, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.20913563907822136, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22035498720169755, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.2216545831115459, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23113663196972625, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.241217501725507, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2426667662039807, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.250558029879763, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2584735757289027, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.26356276281140234, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.26732911042202323, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.26925522049693146, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.27012094849372403, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2858313469599984, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.28599226231243, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.title,=,sound),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3189857623741574, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))", "score": -0.1506321472588752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.original_language))", "score": -0.19970216280853492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.budget))", "score": -0.22512138313686592, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.budget),movie.title))", "score": -0.40745623274779064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.budget),movie.original_language))", "score": -0.45652624829745037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.budget),movie.budget))", "score": -0.48194546862578136, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.original_language),movie.title))", "score": -0.48753191395735485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.original_language),movie.original_language))", "score": -0.5366019295070146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.release_date))", "score": -0.5379321617547248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.original_language),movie.budget))", "score": -0.5620211498353456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.vote_count))", "score": -0.5812122268143867, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.revenue))", "score": -0.5878635091248725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.vote_average))", "score": -0.6467539114419196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.status))", "score": -0.6789001268807624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}, {"orig_question": "What are the movies with a revenue less than 98337295?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.homepage))", "score": -0.6815608186188911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,98337295), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.06998005072819069, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.2681932647828944, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.3547479727421887, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,1980-05-17),movie.vote_count), movie.vote_count))", "score": -0.4468032482545823, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.4858283021603711, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,>=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.5529611867968924, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.5814637162839063, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>=,1980-05-17),movie.vote_count), movie.vote_count))", "score": -0.6635435062926263, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.6840415162150748, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.7072739846116747, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),person.birth_day,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.7145489075337537, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.status,<=,1980-05-17),movie.vote_count), movie.vote_count))", "score": -0.7568549911957234, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_average))", "score": -0.7634687305544503, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<=,1980-05-17), movie.vote_count),movie.vote_count))", "score": -0.7676775823929347, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there vote counts for movies that were released before or on May 17th 1980?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,<=,1980-05-17),movie.vote_count), movie.vote_count))", "score": -0.7852790642064065, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-05-17), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.05348764375888463, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.1943825583569347, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,Nic Arts),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.271765581415376, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3542316648497653, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.3655702673307069, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.39017694338088554, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.runtime),movie.runtime)", "score": -0.39025497813560844, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.4006484690565059, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.40611694673405385, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Nic Arts),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4091251213302356, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.41237645634914993, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,=,Nic Arts), movie.id),movie.runtime)", "score": -0.4160487465196415, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),country.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.4167263047310163, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(production_company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.41996287168348073, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies produced by Nic Arts?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_company.company_id),company.name,=,Nic Arts), movie.id),movie.runtime)", "score": -0.42309670374284397, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,Nic Arts),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.042698368595823814, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,hi), company.name),company.name))", "score": -0.22226573340705905, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,hi), company.name),company.name))", "score": -0.22297350170986874, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.27263721101802363, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,hi), company.name),company.name))", "score": -0.27400358659613544, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,hi), company.name),company.name))", "score": -0.2997238907959699, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),movie.title))", "score": -0.3765095555821193, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,hi), company.name),company.name))", "score": -0.3833224018260867, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.3893433472312172, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.39540768240920265, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.39639565593035514, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41371221330012287, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,production_company.movie_id), company.name),company.name))", "score": -0.4239005437394888, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,movie.id), company.name),company.name))", "score": -0.42910932717805067, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(production_company),production_company.company_id,company.id), company.name),company.name))", "score": -0.42958101731219184, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown), person.name),person.name))", "score": -0.159496500949624, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))", "score": -0.23778463190435079, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(has_keyword),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown), person.name),person.name))", "score": -0.24127288235142846, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))", "score": -0.2551869443988428, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),has_keyword.keyword_id,person.id), person.name),person.name))", "score": -0.26225408212450935, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))", "score": -0.29422773675653735, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,nervous breakdown),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id), person.name),person.name))", "score": -0.29642034992273475, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.29757542491922606, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.29835987897535404, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))", "score": -0.31163004925102944, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),keyword.id,movie.id), person.name),person.name))", "score": -0.314720250925426, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,has_keyword.keyword_id), person.name),person.name))", "score": -0.3246394025496332, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,production_country.movie_id),has_keyword.movie_id,movie.id), person.name),person.name))", "score": -0.3261405391323753, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown), person.gender),person.name))", "score": -0.33006376388150815, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}, {"orig_question": "Is there any person who have been involved in a movie which has the keyword nervous breakdown, have won the oscar and who have died?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,nervous breakdown),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),keyword.id,movie.id), person.name),person.name))", "score": -0.33212260468479576, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,nervous breakdown),merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),getData(person),oscar_winner.person_id,person.id), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.02416762325083255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,417), movie.original_language),movie.original_language))", "score": -0.4965608617021644, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<,417),movie.original_language), movie.original_language))", "score": -0.5052323691052152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,417), movie.original_language),movie.original_language))", "score": -0.5696532925321662, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.585315743341198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,417), movie.original_language),movie.original_language))", "score": -0.58563156926175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,417), movie.original_language),movie.original_language))", "score": -0.6125500401212776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,417), movie.original_language),movie.original_language))", "score": -0.6398248466393852, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),language.name))", "score": -0.6571991556520516, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.popularity),movie.original_language))", "score": -0.7238210890172923, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),spoken_language.iso_639_1))", "score": -0.7381438129777962, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,417), movie.original_language),movie.original_language))", "score": -0.7420388254067802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,417), movie.original_language),movie.original_language))", "score": -0.7544044050118828, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.revenue))", "score": -0.7548719757432991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), language.name),movie.original_language))", "score": -0.7856830212949717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))", "score": -0.08158292367665713, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,15000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.09159150875998429, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,15000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.20724799408872618, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.budget,=,15000), company.name),company.name))", "score": -0.32052724795261966, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,15000), company.name),company.name))", "score": -0.38088267391924496, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,15000), company.name),company.name))", "score": -0.3925765934242366, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,15000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),movie.title))", "score": -0.399946969855167, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,=,15000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))", "score": -0.4004657650826319, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,15000), company.name),company.name))", "score": -0.4021432895604405, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.budget,=,15000),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4070930055140332, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),movie.title))", "score": -0.4080634053508325, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,15000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.4132195112503637, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), movie.title),company.name))", "score": -0.4161548136217393, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,15000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.4260289740839506, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}, {"orig_question": "What are the production company names that produced movies with a budget of exactly 15000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,15000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,movie.id), company.name),company.name))", "score": -0.4385060457371698, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,15000), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.024054902720308746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,17.7091), movie.original_language),movie.original_language))", "score": -0.40935322467521473, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,17.7091), movie.original_language),movie.original_language))", "score": -0.44205710117057606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.6002113510603522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>,17.7091),movie.original_language), movie.original_language))", "score": -0.6196697883387969, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.popularity))", "score": -0.6892560411924933, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,17.7091), movie.original_language),movie.original_language))", "score": -0.7103213352365856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),spoken_language.iso_639_1))", "score": -0.714682309770069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.revenue))", "score": -0.7221230556006049, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.popularity),movie.original_language))", "score": -0.7247055129828368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,17.7091), movie.original_language),movie.original_language))", "score": -0.7538258233089437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,17.7091), movie.original_language),movie.original_language))", "score": -0.7574754753131856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,17.7091), movie.original_language),movie.original_language))", "score": -0.7689487022562389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.7873473720374022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity score greater than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,17.7091), movie.original_language),movie.original_language))", "score": -0.8035442628879537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,Spider-Man 2), movie.id),movie.runtime)", "score": -0.2184994488178174, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,Spider-Man 2),movie.runtime),movie.runtime))", "score": -0.3912434728408698, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,Spider-Man 2), movie.id),movie.runtime)", "score": -0.4959661091878006, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Spider-Man 2), movie.runtime),movie.runtime))", "score": -0.6132127148157451, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,Spider-Man 2), movie.id),movie.runtime)", "score": -0.6419704190670463, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,<=,Spider-Man 2),movie.runtime),movie.runtime))", "score": -0.6453561914677266, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,Spider-Man 2), movie.id),movie.runtime)", "score": -0.706570816692427, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.release_date,=,Spider-Man 2),getData(cast),person.id,movie.id),movie.runtime),movie.runtime))", "score": -0.7176354066969748, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.release_date,=,Spider-Man 2),getData(cast),person.id,cast.person_id),movie.runtime),movie.runtime))", "score": -0.761261213335018, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,<,Spider-Man 2),movie.runtime),movie.runtime))", "score": -0.7657629979366902, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,=,Spider-Man 2),movie.runtime),movie.runtime))", "score": -0.777003199007595, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.release_date,=,Spider-Man 2),getData(crew),person.id,movie.id),movie.runtime),movie.runtime))", "score": -0.7868721068307807, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.release_date,=,Spider-Man 2),getData(movie),person.id,movie.id),movie.runtime),movie.runtime))", "score": -0.786879628030646, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.release_date,=,Spider-Man 2),getData(cast),person.id,oscar_nominee.person_id),movie.runtime),movie.runtime))", "score": -0.7958166274636365, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}, {"orig_question": "What's the runtime of Spider-Man 2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,Spider-Man 2), movie.id),movie.runtime)", "score": -0.8789513956735552, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Spider-Man 2), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.05679699360766809, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.1744914937709671, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Bangkok, Thailand),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2671798572655655, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2769520926369051, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,!=,Bangkok, Thailand),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.28517699887801345, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),language.name,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.28533106229783045, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_place,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.30097466865025363, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.32315688825556965, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_place,!=,Bangkok, Thailand),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3244709063837949, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3347483399668031, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),keyword.name,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3370062201211668, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),genre.name,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3504683044380027, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,!=,Bangkok, Thailand),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.36052417831761074, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.36476660071054695, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies where an oscar winners death place isn't Bangkok, Thailand? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3670955462912368, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,!=,Bangkok, Thailand),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_place,=,Wanganui), person.death_place),person.death_place))", "score": -0.30357060702981914, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,Wanganui),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.30712770563815067, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_place,=,Wanganui), person.death_place),person.death_place))", "score": -0.3332668083759155, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Wanganui),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.35381582219671864, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,=,Wanganui), person.death_place),person.death_place))", "score": -0.36388496651710533, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Wanganui), person.death_place),person.death_place))", "score": -0.3653834619567304, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Wanganui),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.36938280861324385, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Wanganui),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.3716613501179772, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Wanganui),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.3872283365345024, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(filter(getData(crew),person.birth_place,=,Wanganui),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_place,=,Wanganui), person.death_place),person.death_place))", "score": -0.3883961782599653, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,=,Wanganui), person.death_place),person.death_place))", "score": -0.39358116786320174, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Wanganui), person.death_place),person.death_place))", "score": -0.3950796633028268, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,Wanganui),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.39833026613786515, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,Wanganui),getData(cast),person.id,cast.person_id),filter(getData(person),person.name,!=,Wanganui),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.4206974966946804, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}, {"orig_question": "Are there death places from persons that were born in Wanganui?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.name,=,Wanganui), person.death_place),person.death_place))", "score": -0.4256978258741584, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Wanganui),person.death_place), person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))", "score": -0.019116359610052314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget))", "score": -0.3899278788230731, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.4), movie.budget),movie.budget))", "score": -0.4408292321822955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,6.4), movie.budget),movie.budget))", "score": -0.6503967921817093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.release_date))", "score": -0.653551798859553, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.title))", "score": -0.6668364224824472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.release_date),movie.budget))", "score": -0.6755058336639195, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.title),movie.budget))", "score": -0.6853346991920262, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.4), movie.budget),movie.budget))", "score": -0.7159719316623523, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.original_language))", "score": -0.7730565486344858, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.revenue))", "score": -0.7837670264634653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.4), movie.budget),movie.budget))", "score": -0.8218615500591113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,6.4), movie.budget),movie.budget))", "score": -0.8283914606654434, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,6.4), movie.budget),movie.budget))", "score": -0.844327596911171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.vote_count))", "score": -0.85949448923202, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.04711752479057529, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), person.birth_day),movie.popularity))", "score": -0.21777352509238432, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.popularity))", "score": -0.228210159299507, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.23865729792643536, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.29334447505418376, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.status,=,writing (screenplay--original)),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.3335841121453663, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.3645716309031457, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.popularity))", "score": -0.3939928143115375, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),country.name,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.4010117675045089, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.revenue))", "score": -0.4067488384220838, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), person.birth_day),movie.popularity))", "score": -0.4093132982282444, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),movie.popularity))", "score": -0.4121015325227374, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),person.birth_place,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.4175750041929126, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), person.id),movie.popularity))", "score": -0.4189115463876055, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar_winner.oscar_id,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.41895540091434247, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.08703398769862278, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.11454151887252279, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.262947479677122, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Jordan),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.27329807035414283, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.status))", "score": -0.2897422871274294, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan),getData(movie),production_country.movie_id,movie.id), movie.title),movie.status))", "score": -0.3177746239658278, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3669591339629373, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.release_date))", "score": -0.3734591715445285, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,production_country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3882200388505709, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.status))", "score": -0.4135185934404972, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan),getData(movie),production_country.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.41376117575215166, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,country.name), movie.title),movie.title))", "score": -0.423137243904303, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),production_country.iso_3166_1,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4312356469536731, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4331392659792592, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}, {"orig_question": "How many movies were produced in the country Jordan?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Jordan),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4523515477236112, "correct_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Jordan), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.name))", "score": -0.1489259539896064, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.death_day))", "score": -0.16316652496166212, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.name))", "score": -0.2834395090931227, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.death_place))", "score": -0.2943192316779575, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.death_day))", "score": -0.29768008006517843, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.name))", "score": -0.30797191176730265, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.name))", "score": -0.3210735769199166, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.death_day))", "score": -0.3222124827393584, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.name),person.name))", "score": -0.33120186163362186, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.death_day))", "score": -0.33531414789197234, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.name),person.death_day))", "score": -0.34544243260567764, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),oscar.year))", "score": -0.3636227385846019, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.name))", "score": -0.3703080411909775, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,), person.death_day),oscar.number))", "score": -0.3735412588563069, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "How many people have received an oscar who were born in Astoria, New York?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Astoria, New York,), person.death_day),person.death_day))", "score": -0.3845486121630332, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,=,Astoria, New York,),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.016267174352833536, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Jason Tobin), person.death_day),person.death_day))", "score": -0.49985074900178006, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5620896340915351, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),movie.revenue))", "score": -0.5877721472279518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.6558755756923347, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_place))", "score": -0.6882644458310097, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.6888659121104865, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),language.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.7445736648151069, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>=,Jason Tobin), person.death_day),person.death_day))", "score": -0.7608121027806192, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(oscar),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.7713114980942919, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.777689469010511, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(language),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.7860359911210253, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),movie.vote_count))", "score": -0.7985988421933143, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Jason Tobin), person.death_day),person.death_day))", "score": -0.8027734150746255, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.birth_day))", "score": -0.8066707416073768, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lone Wolf McQuade Associates),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2588264192136556, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lone Wolf McQuade Associates),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.28860823398320595, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.29213605808513704, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.305021287493344, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),movie.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3149603609165616, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.31622187921485206, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),company.name,=,Lone Wolf McQuade Associates),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3198003545376109, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.32557487417436226, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3326794022757404, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.company_id),getData(movie),production_company.movie_id,company.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3329729605577517, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),person.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3366646884779175, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3390461820462766, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),movie.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3483991631615939, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3496606814598844, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}, {"orig_question": "How many movies did the company with name Lone Wolf McQuade Associates produce? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),movie.id,production_company.company_id),getData(movie),production_company.movie_id,company.id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))", "score": -0.3557972495449834, "correct_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lone Wolf McQuade Associates), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.0629648218081997, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),production_company.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.22542101403665316, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.29412323878757923, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.31596355917191904, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3208218132651378, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.34663965512877515, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),cast.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.35173068772005506, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3573407561628445, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(production_company),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3575180570192297, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),oscar.category,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3656975575293104, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),production_country.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.37833370353770557, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),company.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.38317131560433076, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)", "score": -0.40373155504464664, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.id,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.40538683275714904, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}, {"orig_question": "What is the total revenue earned by movies made as documentaries?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id),merge(getData(production_company),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.revenue)", "score": -0.47340144527894074, "correct_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Documentary), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.15051569801885178, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,oscar.id), language.name),language.name))", "score": -0.20719992406149285, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.23474507863367322, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.person_id,language.iso_639_1), language.name),language.name))", "score": -0.2567062639153536, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),oscar.category))", "score": -0.26718649514722526, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.27155252164944277, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,person.id), language.name),language.name))", "score": -0.27641845198950343, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,2.3), language.name),language.name))", "score": -0.30969756336650756, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.person_id,oscar.id), language.name),language.name))", "score": -0.3133904899579946, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,oscar.id), language.name),oscar.category))", "score": -0.3238707211898663, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), language.name),language.name))", "score": -0.32823674769208383, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,genre.id), language.name),language.name))", "score": -0.3374041374337417, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.34679432343306166, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,movie.id), language.name),language.name))", "score": -0.34803254361600255, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.person_id,language.iso_639_1), language.name),oscar.category))", "score": -0.37337706104372703, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)", "score": -0.03846772401600644, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.3607798247274664, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.id),movie.popularity)", "score": -0.520957531688564, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity)", "score": -0.6021627060804359, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.popularity)", "score": -0.6227816249995319, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.vote_average)", "score": -0.6642386701780918, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Post Production), movie.id),movie.popularity)", "score": -0.6925163816507482, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Post Production),movie.popularity)", "score": -0.7354503190861238, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.id),movie.popularity)", "score": -0.7437611078167403, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,!=,Post Production), movie.id),movie.popularity)", "score": -0.7485272952654123, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity))", "score": -0.7990754429265507, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.popularity)", "score": -0.8183094817190217, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.revenue)", "score": -0.8255978727440476, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.id),movie.popularity)", "score": -0.8256120957741152, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.id),movie.popularity)", "score": -0.8432696245799356, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.popularity))", "score": -0.1127697863157664, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.status))", "score": -0.2955855727668677, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.vote_average))", "score": -0.34362520282229525, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.vote_average),movie.popularity))", "score": -0.3606814407285128, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.original_language),movie.popularity))", "score": -0.43737065424284083, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.popularity))", "score": -0.4443333708222781, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.popularity),movie.original_language))", "score": -0.48188747470339877, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.vote_average),movie.status))", "score": -0.5434972271796141, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.popularity,>,10.521),movie.popularity), movie.popularity))", "score": -0.5514299937203759, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,>,10.521), movie.popularity),movie.popularity))", "score": -0.5558642819996749, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.vote_average),movie.vote_average))", "score": -0.5915368572350417, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.original_language),movie.status))", "score": -0.6201864406939421, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.popularity,>,10.521),movie.popularity), movie.id))", "score": -0.6241234608605737, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))", "score": -0.6271491572733794, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}, {"orig_question": "Are there movies with a popularity more than 10.521 that are released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.title),movie.popularity))", "score": -0.6297365390237246, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,10.521), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,155),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.09023118963555142, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,155),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.23213394315061467, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,=,155), genre.name),genre.name))", "score": -0.2435819136942096, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,155), genre.name),genre.name))", "score": -0.262947290338224, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,155),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.28049014511444903, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,155),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.283448646922363, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,155), genre.name),genre.name))", "score": -0.3199680343766946, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,155), genre.name),genre.name))", "score": -0.32567866452982613, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,155),getData(spoken_language),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32717152646019165, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,>,155),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34402906412612955, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,155),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3498230183230755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,155),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35136272294105797, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,155),getData(has_genre),movie.id,oscar_nominee.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3524199462918586, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,155),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3664952771307035, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}, {"orig_question": "Are there any genres of movies with a runtime of 155 and oscar nomiees whose id is over 48?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,=,155), genre.name),genre.name))", "score": -0.36991759577209793, "correct_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.number,>,48),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,155), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_average),movie.vote_count))", "score": -0.08653190051700221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))", "score": -0.2437492876269971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_average),movie.vote_average))", "score": -0.27211608616198646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,130), movie.vote_average),movie.vote_count))", "score": -0.3663127168038045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_average))", "score": -0.42933347327198135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,130), movie.vote_count),movie.vote_count))", "score": -0.5235301039137994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,130), movie.vote_average),movie.vote_average))", "score": -0.5518969024487888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,130), movie.vote_average),movie.vote_count))", "score": -0.5850441927977954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_average),movie.title))", "score": -0.6370782467492973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.title),movie.vote_count))", "score": -0.6469892083623563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,130), movie.vote_average),movie.vote_count))", "score": -0.6516896958419238, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,130), movie.vote_average),movie.vote_count))", "score": -0.6622854216911946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_average),movie.revenue))", "score": -0.6898192974695121, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.revenue),movie.vote_count))", "score": -0.6934246241071378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote count when the movie runtime is 130?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,130), movie.vote_count),movie.vote_average))", "score": -0.7091142895587836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,130), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.08594764531485871, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.28439021124087965, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.3824240743933498, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,1986-10-05), movie.id),movie.runtime)", "score": -0.4752308340896914, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,1986-10-05), movie.id),movie.vote_average)", "score": -0.6176659912668966, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,1986-10-05), movie.id),movie.vote_average)", "score": -0.6204542594089174, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.659075934342669, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,1986-10-05), movie.id),movie.runtime)", "score": -0.6736734000157123, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),person.gender,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.6746303403172813, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.7145782294109301, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,1986-10-05), movie.id),movie.popularity)", "score": -0.7227275904028997, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.7551290160361513, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,1986-10-05), movie.id),movie.runtime)", "score": -0.7717072631681825, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,1986-10-05), movie.id),movie.vote_average)", "score": -0.7799103027128657, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}, {"orig_question": "What is the summed rating of all movies released not earlier than May 10th 1986?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,!=,1986-10-05), movie.id),movie.vote_average)", "score": -0.8019104111351611, "correct_code": "sum(filter(getData(movie),movie.release_date,>=,1986-10-05),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))", "score": -0.013975056623166893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,8.1), movie.title),movie.title))", "score": -0.5869255126817734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,8.1), movie.title),movie.title))", "score": -0.6218086162480176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,8.1), movie.title),movie.title))", "score": -0.6531833091648878, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,8.1), movie.title),movie.title))", "score": -0.6536787429722608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.original_language))", "score": -0.6578796131434501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.vote_count))", "score": -0.6819069607081474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.status))", "score": -0.6885560376467765, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.budget))", "score": -0.6900460941615165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.original_language),movie.title))", "score": -0.6921363595538423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.vote_average))", "score": -0.7186331970515312, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.status),movie.title))", "score": -0.7432364347987459, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,8.1), movie.title),movie.title))", "score": -0.7965324202450574, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),company.name))", "score": -0.802608333331591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}, {"orig_question": "Which movies have a vote average higher than 8.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,8.1), movie.title),movie.title))", "score": -0.8131151260240586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,8.1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3382673187597889, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.sub_category))", "score": -0.3454237697078164, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.category))", "score": -0.35387928883542413, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.sub_category),oscar.number))", "score": -0.36771922437041543, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.number),oscar.year))", "score": -0.37208096028036897, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.sub_category),oscar.sub_category))", "score": -0.3748756753184429, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.sub_category),oscar.category))", "score": -0.3833311944460506, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3866677520590069, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3977611857883542, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,person.id), oscar.category),oscar.category))", "score": -0.4008762488049491, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.category,=,Bob Papenbrook), oscar.sub_category),oscar.year))", "score": -0.4015328658909955, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),oscar.category,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.4081019738791833, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.4097976992285559, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,person.id), oscar.category),oscar.category))", "score": -0.41196968253429644, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),oscar.category,=,Bob Papenbrook),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.41919540760853063, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.08355172765405065, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.08977456816342101, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.16333522244951076, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.29395605105570854, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id), movie.title),movie.title))", "score": -0.41393768617024573, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.42087645035419047, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(production_company),company.id,production_company.movie_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.4260372387448025, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.44235831210146365, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.44473928291309883, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.44744016256545616, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),movie.title,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.44966847844587937, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.45451005823504614, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),production_company.company_id,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.4557292843237685, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,company.name), movie.title),movie.title))", "score": -0.4578421803373229, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies produced by the company called Deutsche Filmf\u00f6rderfonds (DFFF)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)),getData(production_company),company.name,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.4626787149737969, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Deutsche Filmf\u00f6rderfonds (DFFF)), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.04065505100789402, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.29596213214858996, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.30893126251212694, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_count)", "score": -0.4141491005377225, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.48398118870999524, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.id),movie.vote_count)", "score": -0.4932287965734052, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4941962206809642, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4969503190735322, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,fr), movie.id),movie.vote_count)", "score": -0.5265307622779006, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.5319129198359983, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,fr), movie.id),movie.vote_count)", "score": -0.5394998926414376, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.5448820598404396, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fr),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.5464093262337545, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,fr), movie.id),movie.vote_count)", "score": -0.5665283625855076, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_average)", "score": -0.5963148510220534, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_average,!=,2000-09-14),movie.runtime),movie.budget))", "score": -0.37211227689113, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.runtime,!=,2000-09-14),movie.runtime),movie.budget))", "score": -0.5263907899352489, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_average,!=,2000-09-14),movie.vote_average),movie.budget))", "score": -0.5345200327428756, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,!=,2000-09-14),getData(movie),movie.id,movie.id),movie.runtime),movie.budget))", "score": -0.5381441958462018, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,!=,2000-09-14),getData(movie),movie.id,cast.movie_id),movie.runtime),movie.budget))", "score": -0.6347723225742291, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_average,>,2000-09-14),movie.runtime),movie.budget))", "score": -0.6377466180565534, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,!=,2000-09-14),movie.runtime),movie.budget))", "score": -0.638922791564255, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.runtime,!=,2000-09-14),movie.vote_average),movie.budget))", "score": -0.6887985457869945, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,!=,2000-09-14),getData(cast),movie.id,movie.id),movie.runtime),movie.budget))", "score": -0.6894675763904424, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.status,!=,2000-09-14),movie.runtime),movie.budget))", "score": -0.700272574016708, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,!=,2000-09-14),getData(movie),movie.id,movie.revenue),movie.runtime),movie.budget))", "score": -0.701404704874011, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_average,>=,2000-09-14),movie.runtime),movie.budget))", "score": -0.7091127791645704, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2000-09-14), movie.runtime),movie.budget))", "score": -0.729806223345804, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,>,2000-09-14),getData(movie),movie.id,movie.id),movie.runtime),movie.budget))", "score": -0.730137258425356, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}, {"orig_question": "What is the budget of the movie with minimum runtime released not later than September 14th 2000?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,!=,2000-09-14),merge(getData(movie),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),movie.runtime),movie.budget))", "score": -0.7492486322648917, "correct_code": "done(extractValues(min(filter(getData(movie),movie.release_date,<=,2000-09-14),movie.runtime),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.056294894336083104, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1956-10-11), movie.title),movie.title))", "score": -0.13873137476070369, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.263732463646681, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1956-10-11), movie.title),movie.title))", "score": -0.2961987069102628, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.2966239800267819, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.31182134587471544, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.3420978559159542, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.34220100318269997, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1956-10-11), movie.title),movie.title))", "score": -0.3461689440713016, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.35001191010797783, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1956-10-11), movie.title),movie.title))", "score": -0.3790604604514025, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1956-10-11), movie.title),movie.title))", "score": -0.394257826299336, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.4154943292328716, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,cast.person_id),person.birth_day,<,1956-10-11), movie.title),movie.title))", "score": -0.4156246396367411, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movie titles got an oscar for a person who was born before 1956-10-11?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1956-10-11), movie.title),movie.title))", "score": -0.4245343363405748, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1956-10-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))", "score": -0.07479070367116947, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1988-02-28), person.death_day),person.death_day))", "score": -0.20436845959920902, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.death_day),person.death_day))", "score": -0.25094841660757083, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.sub_category,=,1988-02-28), person.death_day),person.death_day))", "score": -0.5567676747014048, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.runtime,=,1988-02-28), person.death_day),person.death_day))", "score": -0.6241147840191843, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.6329127338976832, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1988-02-28), person.death_day),person.death_day))", "score": -0.6354743564297678, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1988-02-28), person.death_day),person.death_day))", "score": -0.6363073399552377, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1988-02-28), person.death_day),person.death_day))", "score": -0.711012216823292, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,1988-02-28), person.death_day),person.death_day))", "score": -0.7301170551945688, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.7624904898257228, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<=,1988-02-28), person.death_day),person.death_day))", "score": -0.7658850958832772, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1988-02-28), person.death_day),movie.revenue))", "score": -0.8090704468340846, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,<=,1988-02-28), person.death_day),person.death_day))", "score": -0.8124650528916391, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}, {"orig_question": "What are the death days of the people born on February 28th 1988?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.birth_day))", "score": -0.8184643772692652, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1988-02-28), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.title,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.16978722519500963, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.18195320952722333, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.18986610717537197, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Little Fockers),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.28903673917574557, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Little Fockers),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29777900365686455, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.vote_count,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.30022345394985733, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Little Fockers),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30704919926747126, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.vote_average,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3145343179807173, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Little Fockers),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.31579146374859024, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.number,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3235123014429199, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),language.name,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3329723374868713, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),cast.character,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3374568636351104, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.homepage,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3429236610198879, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.original_language,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3456496867104633, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3501445793903468, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.05966776794284206, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.11021988690060212, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2439199339710003, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.27383010466986735, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.29727877395592306, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3216362602367059, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3529360517517885, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.35447894323442747, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.37213099793623156, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3738796993216574, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3865005706065413, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),movie.popularity,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.4123860211592401, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.category,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.4231662396318515, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.4233011463045195, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.43132663811267985, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2014-06-28), person.birth_place),person.birth_place))", "score": -0.048475608840817586, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))", "score": -0.3285351429658476, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2014-06-28),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.4332064157832862, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2014-06-28), person.birth_place),person.death_place))", "score": -0.4744849192502443, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,<=,2014-06-28), person.birth_place),person.birth_place))", "score": -0.5053581855303062, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2014-06-28), person.birth_place),person.birth_day))", "score": -0.505672632396454, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2014-06-28), person.birth_day),person.birth_place))", "score": -0.5077584941464011, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2014-06-28),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5258695034871318, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2014-06-28),merge(getData(cast),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5370247316021451, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2014-06-28), person.birth_place),person.birth_place))", "score": -0.5467317138391081, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2014-06-28),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.movie_id), person.birth_place),person.birth_place))", "score": -0.5542281437059378, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2014-06-28),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.590609637136823, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2014-06-28),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_day),person.birth_place))", "score": -0.601189968528583, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_day,<=,2014-06-28), person.birth_place),person.birth_place))", "score": -0.6015755848031158, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}, {"orig_question": "Where were born those who died on 2014-06-28 or afterwards?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2014-06-28), person.birth_place),company.name))", "score": -0.621725677192444, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2014-06-28), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.16035238976769758, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.1819838542197573, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.18727365730303389, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.22421602588732792, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.22797833062183046, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.24292166645959568, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,!=,Italiano), movie.id),movie.vote_average)", "score": -0.24821146954287227, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.32925062996624416, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),movie.original_language,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3319670224722857, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,!=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.33669737409194844, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.original_language),movie.vote_average)", "score": -0.3508333555691613, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.3534198218890129, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.35474850808299485, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.revenue),movie.vote_average)", "score": -0.36448875952148396, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.37195935724904716, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,movie.id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.20017219716508247, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,movie.id),oscar.number,=,176), company.name),company.name))", "score": -0.21444557619893315, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_winner.movie_id,production_company.company_id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.24858185543483427, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),production_company.movie_id,company.id),oscar.number,=,assistant director), company.name),company.name))", "score": -0.2538529511849755, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_winner.movie_id,movie.id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.2549706373799066, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,production_company.company_id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.2570802452432128, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,movie.id),oscar.sub_category,=,assistant director), company.name),company.name))", "score": -0.25735012571496263, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_winner.movie_id,production_country.iso_3166_1),oscar.category,=,assistant director), company.name),company.name))", "score": -0.26625775704270466, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,company.id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.2678175396646123, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,production_company.company_id),oscar.number,=,176), company.name),company.name))", "score": -0.2713536242770635, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,movie.id),movie.title,=,176), company.name),company.name))", "score": -0.27546725375276027, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_winner.movie_id,company.id),oscar.number,=,176), company.name),company.name))", "score": -0.28209091195717106, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(company),production_company.movie_id,company.id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.2942496415493952, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),getData(company),production_company.company_id,company.id),oscar.number,=,assistant director), company.name),company.name))", "score": -0.29990909990268666, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a runtime of 176 which won an oscar in the category assistant director?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,production_company.company_id),oscar.category,=,assistant director), company.name),company.name))", "score": -0.317011888761351, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,176),oscar.category,=,assistant director), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),person.name,!=,177),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.2268932926090023, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.name,!=,1997),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.23529478940000306, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,!=,177),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.250687852912566, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,!=,177),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.2680144678212202, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),person.name,!=,1997),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.budget)", "score": -0.2945813199713723, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),person.name,!=,177),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.31025095274338393, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.name,!=,177),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.31865244953438465, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),person.name,!=,1997),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id), movie.id),movie.budget)", "score": -0.3194873960033018, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,1997),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.321981449223128, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),person.name,!=,177),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id), movie.id),movie.budget)", "score": -0.3278527382692701, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),oscar.category,!=,1997),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.33038294601412876, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,!=,177),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.budget)", "score": -0.3367579757082069, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),person.name,!=,1997),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.34897781145165907, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.oscar_id),person.name,!=,1997),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)", "score": -0.35108248144980103, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of movies with a runtime of at least 177 in which a cast member won an oscar, but not in 1997?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),person.name,!=,177),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.budget)", "score": -0.3527588143011996, "correct_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,1997),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.runtime,>=,177),oscar_winner.person_id,person.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.14443806141171098, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_winner.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.17402658373295732, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.24425787307106805, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_nominee.oscar_id),oscar.number,=,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.2615501792912469, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.27384639539231437, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_winner.oscar_id),oscar.number,=,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.2911387016124933, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,42),merge(getData(crew),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.status),movie.status))", "score": -0.3124649797933776, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.title),movie.status))", "score": -0.33416179485537134, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),getData(movie),oscar_nominee.movie_id,movie.id), movie.status),movie.status))", "score": -0.34024473607484834, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.3519502060668613, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.number,<,42),merge(getData(crew),getData(movie),crew.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.status),movie.status))", "score": -0.3588571537343434, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.number,=,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.361369990950604, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_nominee.oscar_id),oscar.category,<,42),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.36166649106087534, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_winner.oscar_id),oscar.number,<,42),getData(movie),crew.movie_id,movie.id), movie.title),movie.status))", "score": -0.36375033572783616, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}, {"orig_question": "How many movie status are counted for movies with an oscar number less than 42 and the crew departement Camera?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(crew),oscar.id,oscar_winner.oscar_id),oscar.number,<,42),getData(movie),oscar_nominee.movie_id,movie.id), movie.status),movie.status))", "score": -0.36983334063060047, "correct_code": "count(extractValues(distinct(filter(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,42),merge(getData(person),getData(crew),person.id,crew.person_id),oscar_nominee.person_id,person.id),getData(movie),crew.movie_id,movie.id),crew.department,=,Camera), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), movie.id),oscar.year)", "score": -0.16289901364639, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,Released), movie.id),oscar.year)", "score": -0.2249795021490276, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), oscar.id),oscar.year)", "score": -0.2349378416425847, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.status,>=,Released), movie.id),oscar.year)", "score": -0.2779917172882384, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.status,>=,Released), movie.id),oscar.year)", "score": -0.2908889797949228, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,Released), oscar.id),oscar.year)", "score": -0.2970183301452223, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), movie.id),oscar.number)", "score": -0.30412354838478917, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.status,>=,Released), oscar.id),oscar.year)", "score": -0.3433745523293137, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.status,>=,Released), oscar.id),oscar.year)", "score": -0.34648823113588173, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.status,=,Released), movie.id),oscar.year)", "score": -0.35811626841571925, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,Released), movie.id),oscar.number)", "score": -0.36620403688742675, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), oscar.id),oscar.number)", "score": -0.3761623763809839, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), oscar.year),oscar.year)", "score": -0.3773715896277829, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), movie.id),movie.vote_average)", "score": -0.3914185469954691, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of all oscar years where the movie status is released?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,Released), movie.runtime),oscar.year)", "score": -0.3993259928143824, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.birth_place),person.birth_place))", "score": -0.1608658787663444, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), country.name),person.birth_place))", "score": -0.20595881909684977, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.status),person.birth_place))", "score": -0.22896239728288492, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), oscar.sub_category),person.birth_place))", "score": -0.46809061438398203, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.name),person.birth_place))", "score": -0.5093955305273994, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.title),person.birth_place))", "score": -0.5391649809535011, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.birth_place),country.name))", "score": -0.5489982888902887, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), company.name),person.birth_place))", "score": -0.5513709989245399, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.birth_place),person.name))", "score": -0.5920655951704248, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), country.name),country.name))", "score": -0.594091229220794, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.status),country.name))", "score": -0.6170948074068292, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.birth_place),company.name))", "score": -0.6188217029775842, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), country.iso_3166_1),person.birth_place))", "score": -0.625230928962992, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.birth_place),person.birth_day))", "score": -0.6255452857221826, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), production_country.iso_3166_1),person.birth_place))", "score": -0.628724536007212, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.03861945856666609, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.29136316365319775, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.29142137349611147, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.29706763260645924, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.31648479400102847, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.34330345382552935, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,10037390),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3436685697965928, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3537484831512273, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),movie.title))", "score": -0.3618909584964887, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,movie.id), company.name),company.name))", "score": -0.38269543400867256, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3835034427130446, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(oscar_nominee),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3905733926518707, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.39424802368601314, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.40173327753805027, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4146848469969519, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))", "score": -0.0156398404360516, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,97), movie.revenue),movie.revenue))", "score": -0.4996476306550903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>,97),movie.revenue), movie.revenue))", "score": -0.661563354289683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.vote_average))", "score": -0.6779581527662231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.popularity))", "score": -0.6799225430440856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,97), movie.revenue),movie.revenue))", "score": -0.6920301749341888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.budget),movie.revenue))", "score": -0.7145885001373244, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.vote_count))", "score": -0.7163167219114257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.popularity),movie.revenue))", "score": -0.7266145716857864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.original_language))", "score": -0.7327306489896728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.vote_count),movie.revenue))", "score": -0.7519179354858352, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.budget))", "score": -0.7902329783391906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,97), movie.revenue),movie.revenue))", "score": -0.7954079395130975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),spoken_language.movie_id))", "score": -0.8277205448102904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a runtime longer than 97 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),spoken_language.iso_639_1))", "score": -0.835198543543811, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,97), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))", "score": -0.014732503921550233, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.popularity))", "score": -0.5431821771271643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.vote_average))", "score": -0.582263869822782, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,262), movie.status),movie.status))", "score": -0.5935841942045954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.title),movie.status))", "score": -0.6476275838285801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,262), movie.status),movie.status))", "score": -0.6640924358580378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), country.name),movie.status))", "score": -0.686984411564481, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.title))", "score": -0.6944200821526465, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),production_country.movie_id))", "score": -0.7003564663536963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),production_country.iso_3166_1))", "score": -0.7109701462395606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),country.name))", "score": -0.7147319741852698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.popularity),movie.status))", "score": -0.7240260756880161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.vote_average),movie.status))", "score": -0.7350069201856968, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,262), movie.status),movie.status))", "score": -0.74242915155628, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}, {"orig_question": "What different status do movies with a vote count of at least 262 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), production_country.movie_id),movie.status))", "score": -0.8125553644567844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,262), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.053495471160724124, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,bureaucrat),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.15317098984956903, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,bureaucrat),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.24463982625652358, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,bureaucrat),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3098964093266484, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.34678119382832345, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),getData(has_keyword),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.34986773502167734, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,bureaucrat),getData(movie),has_keyword.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3751901358752818, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(merge(filter(getData(keyword),keyword.name,=,bureaucrat),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.38580515672826415, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.3943820606456161, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.39960839482088145, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.403453709023328, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,production_company.company_id), movie.id),movie.popularity)", "score": -0.4261182332841804, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.name,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.43000689398442626, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.4340400207278935, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies with the keyword bureaucrat?", "inferred_code": "avg(distinct(merge(filter(getData(has_keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)", "score": -0.43700307912665703, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,bureaucrat),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)", "score": -0.13738462060162338, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,171), movie.id),movie.popularity)", "score": -0.14753259285402298, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,171), movie.id),movie.popularity)", "score": -0.26521688349820244, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,171), movie.id),movie.popularity)", "score": -0.5022636401066868, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,cast.movie_id),movie.runtime,<=,171), movie.id),movie.popularity)", "score": -0.5776402965563026, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,171), movie.id),movie.popularity)", "score": -0.5893128910343488, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,cast.movie_id),movie.runtime,=,171), movie.id),movie.popularity)", "score": -0.6290945983552398, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,cast.movie_id),movie.runtime,<,171), movie.id),movie.popularity)", "score": -0.6669311959844169, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.id),movie.runtime,<=,171), movie.id),movie.popularity)", "score": -0.6795222038482297, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,null,171), movie.id),movie.popularity)", "score": -0.7199459029339582, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,crew.movie_id),movie.runtime,<=,171), movie.id),movie.popularity)", "score": -0.7213602768603088, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.id),movie.runtime,=,171), movie.id),movie.popularity)", "score": -0.7309764942080114, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,171), movie.id),movie.popularity)", "score": -0.8100202455592876, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.runtime)", "score": -0.8244934676236193, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}, {"orig_question": "How much is the average popularity of all movies with a runtime up to 171?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,171), movie.id),movie.runtime)", "score": -0.8346414398760189, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,171), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.03983313756850315, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,197), keyword.name),keyword.name))", "score": -0.28449333865468085, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<,197), keyword.name),keyword.name))", "score": -0.31182538157700124, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,197), keyword.name),keyword.name))", "score": -0.312763561551104, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3203708718278188, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.3330252690408838, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.33532230444914607, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))", "score": -0.3400956044734244, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3438803589220666, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),movie.vote_count))", "score": -0.3590443611038665, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.38491749301044037, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3900852100745762, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.movie_id,keyword.id), keyword.name),keyword.name))", "score": -0.3939535780582947, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),has_keyword.keyword_id))", "score": -0.39663574396133977, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}, {"orig_question": "What are the names of the keywords of movies with a runtime smaller than 197 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,197),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3981802933200175, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<,197), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.10142613315431229, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2031296650070515, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.23726158831602606, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3041729520110511, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(movie),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.31675856990753554, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(country),movie.title,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.3323279950502414, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.title),movie.vote_count)", "score": -0.3349623563809289, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.3415322537730215, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America),merge(getData(movie),getData(movie),country.iso_3166_1,production_country.movie_id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.35081499043565134, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(country),movie.original_language,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.35193656888621017, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.vote_count)", "score": -0.3643918084310081, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(company),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.36600221259471416, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(country),keyword.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.37862343590116365, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(genre),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.3977645778686962, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies that were not produced in the country called United States of America?", "inferred_code": "avg(distinct(merge(filter(getData(person),country.name,!=,United States of America),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_count)", "score": -0.4031198392889245, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,United States of America), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.050560906581917225, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.12648904770723238, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special achievement award),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.2685171072208257, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award), movie.runtime),movie.runtime))", "score": -0.3878141551513617, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.40478835603762237, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.4057005044989292, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.41107107551718675, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.41324092628292114, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.runtime),movie.runtime))", "score": -0.41696333715703476, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.4210604559058372, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.425484815418859, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.43006692194543644, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.43528443315906057, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,has_genre.genre_id), movie.runtime),movie.runtime))", "score": -0.44478175647943075, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "What are the movie runtimes of movies who had an oscar nominee in the category special achievement award? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special achievement award),merge(getData(oscar_nominee),getData(movie),production_company.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.4458966884484674, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special achievement award),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.10589510732596237, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,drug lord),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.11914888498133153, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,drug lord),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.19286440903371357, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,drug lord), movie.title),movie.title))", "score": -0.19694875169938128, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,drug lord), movie.title),movie.title))", "score": -0.30283552451080437, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3078137450670393, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),keyword.id,movie.id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.36081771285992104, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(keyword),has_keyword.keyword_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3669072556669135, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(language),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.36944979303757086, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3712284417798153, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(keyword),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3830904262785026, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),has_keyword.keyword_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.38700521957316986, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3949205562141291, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4030022688429794, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "How many movies have the keyword name drug lord?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,drug lord),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.40474628046696004, "correct_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,drug lord),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.18266488094605077, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.gender),person.gender))", "score": -0.21244992814746064, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.name,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.2192394931151597, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.name,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.2431483028930473, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.gender),person.gender))", "score": -0.25143793976565654, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.2625211696239734, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),person.name,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.gender),person.gender))", "score": -0.29079677196708487, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.295072673909172, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.29553528702901655, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.3400787052348863, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.3413219453773337, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.34424424882057664, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,Cheap Thrills),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.34900013236347543, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),oscar.category,!=,Cheap Thrills),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.gender),person.gender))", "score": -0.3647107855160661, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}, {"orig_question": "What are the genders from the persons who won the oscar but not for Cheap Thrills?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.name,!=,Cheap Thrills),person.name,!=,Cheap Thrills), person.gender),person.gender))", "score": -0.38083271943340097, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.title,!=,Cheap Thrills), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.0458991699006885, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),movie.title))", "score": -0.27776055148766343, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.2837523772997373, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.31531504608755984, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.3281824458993447, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.status),movie.title))", "score": -0.33136666785846136, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.3408645857674482, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.release_date),movie.title))", "score": -0.3450750857759622, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.runtime,<,105),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.release_date),movie.title))", "score": -0.36593501350086793, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.36774307077961693, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.374361173812092, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.37579499568925334, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.runtime),movie.title))", "score": -0.3991016027812009, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.title))", "score": -0.40307241010994266, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}, {"orig_question": "Which movies with a runtime below 105 minutes won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,105),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), movie.title),movie.status))", "score": -0.40436817715037826, "correct_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,<,105), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.16071851598946105, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.21803238920696333, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id), country.name),country.name))", "score": -0.25515990461017773, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,production_country.iso_3166_1), country.name),country.name))", "score": -0.26028303478665243, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.27259866182624076, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),spoken_language.movie_id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.28308742565165007, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),language.iso_639_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.2885031288162729, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.name,!=,P??????), country.name),country.name))", "score": -0.29365238641921093, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id),language.name,None,P??????), None),None))", "score": -0.2980211439526436, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id), country.name),country.name))", "score": -0.3158730418131239, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(country),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id), country.name),country.name))", "score": -0.3196604205426851, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,production_country.iso_3166_1), country.name),country.name))", "score": -0.32099618342936675, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(production_country),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id), country.name),country.name))", "score": -0.3237336317632677, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))", "score": -0.32964151092499405, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))", "score": -0.3330277289141496, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.23416314533111732, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.25721452916298226, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.year),oscar.year)", "score": -0.28144653131974284, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.person_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.2833202285775764, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.year),oscar.year)", "score": -0.3044979151516078, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.person_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.30637161240944133, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.3075282396277525, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.33057962345961744, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.person_id),oscar.year,=,f), oscar.year),oscar.year)", "score": -0.3306036145662019, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,f),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.3329322915519813, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.movie_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.3491958510851084, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.id),oscar.number)", "score": -0.35187091731470127, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.person_id),oscar.year,=,f), oscar.year),oscar.year)", "score": -0.35365499839806686, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.oscar_id),oscar.year,=,f), oscar.year),oscar.year)", "score": -0.3548116627622149, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}, {"orig_question": "what is the sum of the oscar year where the winner of the oscar was a woman?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.year,=,f), oscar.id),oscar.year)", "score": -0.35668536002004836, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,f), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Horror), movie.title),movie.title))", "score": -0.08111119954096191, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.08148094824296687, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Horror), movie.status),movie.title))", "score": -0.36451225844329893, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Horror), movie.release_date),movie.title))", "score": -0.3736992559922467, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3766930895032138, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.3941789887615019, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Horror), movie.title),movie.title))", "score": -0.40529623373580076, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.status),movie.title))", "score": -0.405314026782472, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.original_language),movie.title))", "score": -0.40916413891464, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.title),movie.title))", "score": -0.41562715071483636, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),oscar.category,=,Horror), movie.title),movie.title))", "score": -0.4194725701447497, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Horror), movie.title),movie.release_date))", "score": -0.42029493070857654, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.4306963203055983, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,genre.name),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.4348123432500547, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}, {"orig_question": "Which movies belong to the genre Horror?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Horror),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.status))", "score": -0.4431937933152444, "correct_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.05312169135405652, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.15330845685083724, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,0.545825), company.name),company.name))", "score": -0.2567769712335094, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,!=,0.545825), company.name),company.name))", "score": -0.26540309511907706, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,0.545825), company.name),company.name))", "score": -0.30490060847717065, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.33817140819216623, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,>,0.545825), company.name),company.name))", "score": -0.38884368416335696, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>=,0.545825), company.name),company.name))", "score": -0.40260663858566387, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,!=,0.545825), company.name),company.name))", "score": -0.4154530572462231, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.4158190567277197, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.4162547345858556, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),production_company.company_id))", "score": -0.41744591364846906, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.545825), company.name),company.name))", "score": -0.42583399715868736, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),movie.title))", "score": -0.43213885082255155, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.4334191011444889, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.01619139289323357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1584), movie.revenue),movie.revenue))", "score": -0.431363926956692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.popularity),movie.revenue))", "score": -0.5708193613572803, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.popularity))", "score": -0.6139463565668848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_average))", "score": -0.6646578691324976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1584), movie.revenue),movie.revenue))", "score": -0.6897109316087153, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1584), movie.revenue),movie.revenue))", "score": -0.7253732250428584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.vote_average),movie.revenue))", "score": -0.7373547984643665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.id),movie.revenue))", "score": -0.7623866035028186, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_count))", "score": -0.7946999452433374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.vote_count),movie.revenue))", "score": -0.8102410270257678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,1584), movie.revenue),movie.revenue))", "score": -0.8353471733753395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1584), movie.revenue),movie.revenue))", "score": -0.8483700917458918, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.budget),movie.revenue))", "score": -0.8539498878999439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),spoken_language.movie_id))", "score": -0.8796428821406153, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))", "score": -0.02401003532577306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1405), movie.popularity),movie.popularity))", "score": -0.4582048865268007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1405), movie.popularity),movie.popularity))", "score": -0.5432156535098329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1405), movie.popularity),movie.popularity))", "score": -0.5902329894015566, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.release_date),movie.popularity))", "score": -0.6858444939134642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.status))", "score": -0.6960104984464124, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,1405),movie.popularity), movie.popularity))", "score": -0.7465894632259733, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.status),movie.popularity))", "score": -0.7722823153017089, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.vote_average))", "score": -0.7732957286061719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))", "score": -0.7778519856365165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.revenue))", "score": -0.7907952350797132, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.release_date))", "score": -0.799876241129823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.id),movie.popularity))", "score": -0.8158122430322692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.revenue),movie.popularity))", "score": -0.8432411084650084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}, {"orig_question": "What popularity do the movies have with a vote count of at most 1405.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.runtime),movie.popularity))", "score": -0.8490926752565429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1405), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.010185571987676667, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.5409694503941864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.6522116851010651, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.6965121581633866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,12.8674), movie.vote_average),movie.vote_average))", "score": -0.740120370308432, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7473468139251054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_count))", "score": -0.7600343264821277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7799400877156586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.823690231092769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.popularity),movie.vote_average))", "score": -0.8383664895845868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8418441369612992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.popularity))", "score": -0.8578974045994983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.runtime))", "score": -0.8580381907704577, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_count),movie.vote_average))", "score": -0.8609935452295758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.runtime),movie.vote_average))", "score": -0.8860129525019147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.01741778755967971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,0.553752), movie.runtime),movie.runtime))", "score": -0.44338214815070387, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,0.553752), movie.runtime),movie.runtime))", "score": -0.5836558085720753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,0.553752), movie.runtime),movie.runtime))", "score": -0.6363031011860585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.release_date))", "score": -0.6538650535367196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.7340739646315342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,<=,0.553752),movie.runtime), movie.runtime))", "score": -0.7564539308368694, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),person.birth_day))", "score": -0.7584759734891122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.status))", "score": -0.7819343947194284, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.7881310263037449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.release_date),movie.runtime))", "score": -0.8019706494960701, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.title),movie.runtime))", "score": -0.8026589639339363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8035359366840567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.title))", "score": -0.81422288644535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8300528207182651, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))", "score": -0.08907844062258613, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,2000 ad),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.1691696566122372, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,2000 ad), movie.title),movie.title))", "score": -0.2462812667301105, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,2000 ad),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.24835133848013208, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,2000 ad),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.25319003603163664, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,2000 ad),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.27795169814007664, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,2000 ad),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.30611290522611745, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,2000 ad),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.33285726144269634, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,2000 ad),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3585846922425868, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad),movie.title,=,2000 ad), movie.title),movie.title))", "score": -0.3843420427627578, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad),keyword.name,=,2000 ad), movie.title),movie.title))", "score": -0.3883705690994039, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))", "score": -0.4010310276992571, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.title,=,2000 ad),keyword.name,=,2000 ad), movie.title),movie.title))", "score": -0.4270461360396598, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,>=,2000 ad), movie.title),movie.title))", "score": -0.429143190130129, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles have the keyword 2000 ad assigned?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,=,2000 ad), movie.title),movie.title))", "score": -0.44490332269637983, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,2000 ad), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))", "score": -0.09990935817768332, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<=,1932-03-03), person.death_place),person.death_place))", "score": -0.2736118067841744, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.33494456939674805, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.337588659616057, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(cast),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.39680444584796437, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.3994485360672733, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.4010865854014841, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.40373067562079307, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4447021857347538, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(cast),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.46294646185270044, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.4655905520720094, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4661790565293493, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4688231622541543, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,=,1932-03-03), person.death_place),person.death_place))", "score": -0.4957420457940316, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}, {"orig_question": "How many different death places of persons born before 1932-03-03 are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1932-03-03),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_day),person.death_place))", "score": -0.5025937051409298, "correct_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,<,1932-03-03), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.20364633241506577, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.20667578342794687, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)", "score": -0.2282573494551594, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11), movie.id),movie.vote_count)", "score": -0.24790887150350255, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<=,1911-05-11), movie.id),movie.vote_count)", "score": -0.26161106208610735, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.27545247424169333, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3137813248783437, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3196766653265967, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)", "score": -0.3201518533334883, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.32692220462312876, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-05-11), movie.id),movie.vote_count)", "score": -0.33038775289985384, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3448157790267771, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_place,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.345681843742623, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>=,1911-05-11),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3475526499387354, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.36028997443675753, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))", "score": -0.03614872871548869, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Brighton, England), person.name),person.name))", "score": -0.42154548864262864, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,movie.id),person.id,cast.person_id),person.death_place,!=,Brighton, England), person.name),person.name))", "score": -0.45078360890386865, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id),person.death_place,!=,Brighton, England), person.name),person.name))", "score": -0.49344447555175747, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Brighton, England),getData(cast),person.id,cast.person_id),getData(person),cast.movie_id,movie.id), person.name),person.name))", "score": -0.4980114012091406, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),language.name))", "score": -0.518296067515621, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), language.name),person.name))", "score": -0.5227065811923239, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Brighton, England),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,movie.id), person.name),person.name))", "score": -0.5502167163081833, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), movie.vote_average),person.name))", "score": -0.5687610040477011, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),movie.vote_average))", "score": -0.5714066074287985, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), oscar.year),person.name))", "score": -0.5849993358424399, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,Brighton, England), person.name),person.name))", "score": -0.5892729016685446, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Brighton, England),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), person.name),person.name))", "score": -0.6100744521926312, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),movie.revenue))", "score": -0.6300578759110067, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}, {"orig_question": "What are the names of those who have not died in Brighton, England?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),oscar.year))", "score": -0.6491499588883016, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Brighton, England), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.11510528108348853, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.14068677837595994, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.15082270530478847, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.22515416867312246, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.28339399860406767, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32929739075292885, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.35005258736324135, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.35729204144669185, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.36566066726609764, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3666147915977135, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3920802073157729, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.status,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3963483126886386, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.40044006666992354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.homepage,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.40231840661459795, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),person.death_place))", "score": -0.4288572044182981, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.024245135973615106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.runtime),movie.vote_average))", "score": -0.5186785524929292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.popularity))", "score": -0.5462732720407075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.runtime))", "score": -0.559593420031888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.popularity),movie.vote_average))", "score": -0.5803294247234589, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.status))", "score": -0.5937552261384553, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.6104578871963895, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,19.0433), movie.vote_average),movie.vote_average))", "score": -0.6244680185554898, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.6636072155306465, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.status),movie.vote_average))", "score": -0.6808883613193757, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.6924421545336372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,19.0433), movie.vote_average),movie.vote_average))", "score": -0.7116849918602384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>=,19.0433),movie.vote_average), movie.vote_average))", "score": -0.713168345799204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.title),movie.vote_average))", "score": -0.763099438532663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with a popularity of at least 19.0433 get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.title))", "score": -0.7641159701379365, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,19.0433), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.0538414731274959, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.36777374311312533, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.503951541738068, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.6139929785128256, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,7.4), movie.id),movie.vote_count)", "score": -0.6768116022273444, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.714261491784382, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.7328730232267063, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.revenue)", "score": -0.768743609406617, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count)", "score": -0.7716249345228137, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.budget)", "score": -0.7999432595021365, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,7.4), movie.id),movie.vote_count)", "score": -0.819237766180756, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.8230711395223133, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.8342933130792286, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),oscar.number)", "score": -0.8737451869207423, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,7.4), movie.id),movie.vote_count)", "score": -0.908128564460268, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), oscar.category),oscar.category))", "score": -0.24762266871565058, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.title,=,m),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.31344599854794736, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), movie.title),oscar.category))", "score": -0.31436325445973345, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),oscar.category,=,m), oscar.category),oscar.category))", "score": -0.3282836413685121, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.title,=,m),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3288844355419402, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), oscar.category),oscar.category))", "score": -0.342132831469574, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,m),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.35915751222333947, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,m),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3745959492173323, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), oscar.category),oscar.category))", "score": -0.3831606664054693, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), oscar.category),oscar.category))", "score": -0.3862684639896297, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.title,=,m),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3901755100373858, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), oscar.sub_category),oscar.category))", "score": -0.39215217509036876, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.title,=,m), oscar.category),movie.title))", "score": -0.39252171979278344, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.title,=,m),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.39351322588580434, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}, {"orig_question": "In which oscar category are the males nominee at?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,m),getData(oscar_nominee),person.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.39446633903702194, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.gender,=,m), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.5460090421979559, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))", "score": -0.552387879228684, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),language.name,=,Cathedral City, Kalifornien),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),spoken_language.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.6103821580918531, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),language.name,=,Cathedral City, Kalifornien),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),spoken_language.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.6124579726502452, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.original_language))", "score": -0.6865280048914476, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.original_language))", "score": -0.6907203098410195, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.original_language))", "score": -0.6920285066513425, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.budget))", "score": -0.6931553848608105, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.original_language))", "score": -0.6962208523640065, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.budget))", "score": -0.6973476141074972, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),keyword.name))", "score": -0.6982870621639542, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.budget))", "score": -0.6986558866207055, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(person),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),keyword.name))", "score": -0.7024793612902273, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),movie.budget))", "score": -0.7028481566304843, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}, {"orig_question": "Does a movie exist in the original movie language where the oscar winners death place is Cathedral City, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),language.name,=,Cathedral City, Kalifornien),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(movie),merge(getData(oscar_winner),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), movie.title),keyword.name))", "score": -0.7037875639238491, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Cathedral City, Kalifornien),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.id),movie.runtime)", "score": -0.11280573754495855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,2001-05-11), movie.id),movie.runtime)", "score": -0.4518823403427693, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,2001-05-11),movie.runtime),movie.runtime))", "score": -0.5933875589689706, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.6005979005640256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),person.birth_place,=,2001-05-11), movie.id),movie.runtime)", "score": -0.6444645281478865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,2001-05-11), movie.id),movie.runtime)", "score": -0.6557296469418747, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime)", "score": -0.682236177317371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,=,2001-05-11),movie.runtime),movie.runtime))", "score": -0.7307453825196717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2001-05-11), movie.runtime),movie.runtime))", "score": -0.73452768590505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),company.name,=,2001-05-11), movie.id),movie.runtime)", "score": -0.7374341802845966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,2001-05-11), movie.id),movie.runtime)", "score": -0.7380395802444417, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),person.gender,=,2001-05-11), movie.id),movie.runtime)", "score": -0.7695966113101729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.id),movie.release_date)", "score": -0.8035787940016625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "done(extractValues(max(filter(getData(movie),person.birth_place,=,2001-05-11),movie.runtime),movie.runtime))", "score": -0.8315424890315626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}, {"orig_question": "What is the runtime of movies released on May 11, 2001?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,2001-05-11),movie.runtime)", "score": -0.871865645997505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2001-05-11), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.09991905362703393, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.19484123270635034, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.26016736098146026, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2694268221039987, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,movie.id), movie.id),movie.vote_average)", "score": -0.2735253327121614, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.29156602121036906, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2999105650083937, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3003565044657733, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3176084286625447, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.32054118460173525, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),genre.id,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.33485986075593027, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id), movie.id),movie.vote_average)", "score": -0.3581775070931474, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.37343002784856055, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.37861839889201715, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.38075034648396133, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.0346965108690241, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.popularity)", "score": -0.539105907912918, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,4.6), movie.id),movie.revenue)", "score": -0.5595542336818299, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,4.6), movie.id),movie.revenue)", "score": -0.6276647007979755, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,4.6), movie.id),movie.revenue)", "score": -0.6535257329774694, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,4.6), movie.id),movie.revenue)", "score": -0.686593946264128, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.revenue),movie.revenue)", "score": -0.7448820388152462, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.budget)", "score": -0.7988734463821596, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),cast.movie_id)", "score": -0.8895736463184626, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.vote_average)", "score": -0.9052973415657153, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,4.6), movie.id),movie.revenue)", "score": -0.9252297604658805, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),cast.person_id)", "score": -0.9253118254505556, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,4.6),movie.revenue)", "score": -0.9334303318107209, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,<,4.6), movie.id),movie.revenue)", "score": -0.937678153934827, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.vote_count)", "score": -0.9422723458715333, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.11116000323600815, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24932905988950657, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.25668393687928354, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.26661534000313464, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.2764658841801594, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2954796504088426, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2997498127850403, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),production_country.iso_3166_1,genre.id), genre.name),genre.name))", "score": -0.3411191676701043, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),spoken_language.iso_639_1,genre.id), genre.name),genre.name))", "score": -0.34504565544566956, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.34913572084674005, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3503911130893956, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.35340588322293776, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,oscar_nominee.oscar_id), genre.name),genre.name))", "score": -0.3622771426754428, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),has_genre.genre_id,genre.id), genre.name),has_genre.genre_id))", "score": -0.3723673949658652, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}, {"orig_question": "How many different genre names do movies have who won an oscar before the year 1978 and had a revenue of less or equal to 2500000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1978),getData(genre),oscar_winner.person_id,genre.id), genre.name),genre.name))", "score": -0.37611944923348173, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1978),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.revenue,<=,2500000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))", "score": -0.011534574390680064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.revenue))", "score": -0.6336237617724692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.popularity),movie.revenue))", "score": -0.6912315913432394, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.vote_count))", "score": -0.7040405927182292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.budget),movie.revenue))", "score": -0.7179341741793905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.popularity))", "score": -0.7674613652707194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,no), movie.revenue),movie.revenue))", "score": -0.767810205295973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.vote_average))", "score": -0.7780342159749125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.budget))", "score": -0.7857199368954753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.revenue),movie.revenue))", "score": -0.7898019611675409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,=,no), movie.revenue),movie.revenue))", "score": -0.8027866280826856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.id),movie.revenue))", "score": -0.8056001492732321, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.original_language))", "score": -0.8069751916409587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_average),movie.revenue))", "score": -0.8106643387072836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that have the original language no?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), person.death_day),movie.revenue))", "score": -0.8550271817439352, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))", "score": -0.038027775335649494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,How She Move), movie.status),movie.status))", "score": -0.3431856677416363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,How She Move), movie.status),movie.status))", "score": -0.3993767545107403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.title),movie.status))", "score": -0.5810520736049511, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.title))", "score": -0.5882252020310261, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,How She Move), movie.status),movie.status))", "score": -0.6229991958025494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.status),movie.status))", "score": -0.6533555433634319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.vote_average))", "score": -0.6641689700554707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,How She Move), movie.status),movie.status))", "score": -0.6653446600321331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.popularity),movie.status))", "score": -0.6879011479686596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.popularity))", "score": -0.6994216007660725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.vote_average),movie.status))", "score": -0.7261148778270581, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), country.name),movie.status))", "score": -0.7617698994945385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.homepage,=,How She Move), movie.status),movie.status))", "score": -0.7659353062990704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),production_country.iso_3166_1))", "score": -0.7809485358666279, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.052898266429431684, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.15531565021218463, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), person.death_place),genre.name))", "score": -0.33604181199156835, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.34319488213210697, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3638348092192951, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),has_genre.genre_id))", "score": -0.36989517997744614, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3736702434321064, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.3854917533723882, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3898538168793223, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.4071830594163232, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),company.name))", "score": -0.4096997553190173, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), company.name),genre.name))", "score": -0.41783266571140326, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),person.death_place))", "score": -0.41914549086546943, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.id),genre.name))", "score": -0.42162490247203166, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,>,1999-12-16), genre.name),genre.name))", "score": -0.4262611630510968, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.20480235478722608, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.2222758925678359, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.22746919004580246, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.24568387543225814, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2603299213710329, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.26315741321286795, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.30124707183109917, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3129062453343314, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.31872060961170895, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.32702219863463866, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.3421285924761312, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3457669766595618, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.3596021501923788, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3598829485803085, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.426111487607537, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.11141652292873143, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.1396561645568036, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(language),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.23084419060946412, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.2682447450297874, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),movie.original_language,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.332643048472149, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.34430832489579577, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.35480199496260045, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),movie.status,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.355559267884154, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3578540324856967, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.36088269010022117, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3744310633868233, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3830416365906727, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.38379890425143287, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3878851568381585, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3945750761497407, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.11778185568663675, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.title),movie.revenue)", "score": -0.16150464931967637, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.18613193793486874, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.revenue)", "score": -0.22234642258619206, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.status),movie.revenue)", "score": -0.25035511368494584, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.revenue)", "score": -0.3148217943461816, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.vote_average),movie.revenue)", "score": -0.33168663458403724, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),merge(getData(movie),getData(movie),movie.id,production_country.movie_id),production_country.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.34641478278380744, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.popularity)", "score": -0.3473394005514795, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3503930182746322, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3676882832312253, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.popularity)", "score": -0.3835538852028028, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.title),movie.popularity)", "score": -0.3941158119076718, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.budget)", "score": -0.40482332596358994, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy),getData(movie),production_country.movie_id,movie.id), movie.original_language),movie.revenue)", "score": -0.40651063133863874, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.272999116628911, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.30375620401470294, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3330129707424777, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3402291400010038, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.35432848783221993, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),person.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.36377005812826957, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.37098622738679565, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3732141368017153, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.37599319220595717, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),cast.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3775192399948841, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.37865381036687695, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.3842890667808514, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4002429941145704, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.40071251825551124, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many movies are produced from Kyrgyz republic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),country.name,=,Kyrgyz Republic), movie.title),movie.title))", "score": -0.40170907409628853, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Kyrgyz Republic),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.02372991967422422, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,1967-08-13), person.gender),person.gender))", "score": -0.4383396447956329, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.45743765732326563, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.47154881942529364, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1967-08-13), person.gender),person.gender))", "score": -0.5227849036309635, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5236079110513784, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5307989259651708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5682133135852409, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1967-08-13),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.gender),person.gender))", "score": -0.5774958056815297, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5823244618430758, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1967-08-13),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.gender),person.gender))", "score": -0.5916759805314024, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.death_day,=,1967-08-13), person.gender),person.gender))", "score": -0.5968946116861533, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1967-08-13),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_nominee.person_id), person.gender),person.gender))", "score": -0.5997057195681469, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1967-08-13), person.birth_place),person.gender))", "score": -0.6189597323391354, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}, {"orig_question": "What are the gender of the person with a death day on 1967-08-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1967-08-13), person.gender),person.gender))", "score": -0.6592306047532475, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1967-08-13), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)", "score": -0.06330635277354378, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,21.8151), movie.id),movie.vote_average)", "score": -0.2735007949829683, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,21.8151), movie.id),movie.vote_average)", "score": -0.3870802899709201, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,21.8151), movie.id),movie.vote_average)", "score": -0.4343362393114722, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,21.8151), movie.id),movie.vote_average)", "score": -0.4675456521134113, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.popularity)", "score": -0.6803131920007229, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,null,21.8151), movie.id),movie.vote_average)", "score": -0.6995267588098789, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<=,21.8151), movie.id),movie.vote_average)", "score": -0.7160280836428374, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.runtime)", "score": -0.7890130456981944, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,21.8151), movie.id),movie.vote_average)", "score": -0.8011298822058781, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),oscar.year)", "score": -0.8135898942489046, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,21.8151), movie.id),movie.popularity)", "score": -0.8905076342101474, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,21.8151), movie.id),movie.vote_average)", "score": -0.8971096427509737, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,>,21.8151), movie.id),movie.vote_average)", "score": -0.9353065827822948, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all rating of all movies with a popularity above 21.8151?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>,21.8151), movie.id),movie.vote_average)", "score": -0.9473547113827749, "correct_code": "sum(distinct(filter(getData(movie),movie.popularity,>,21.8151), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.013085629747365601, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.5905009433190571, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.6397953908453928, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.original_language),movie.original_language))", "score": -0.6632191576791229, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,48000000), movie.original_language),movie.original_language))", "score": -0.6934635369834723, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.popularity))", "score": -0.7109554688940989, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.7113397159409942, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.budget,=,48000000),movie.original_language), movie.original_language))", "score": -0.7179218032033532, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,48000000), movie.original_language),movie.original_language))", "score": -0.7209835090470733, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.7593680545251118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,48000000), movie.original_language),movie.original_language))", "score": -0.7817150085029425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),spoken_language.iso_639_1))", "score": -0.7824875991354929, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.7855580775794806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,48000000), movie.original_language),movie.original_language))", "score": -0.8002212374267401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a budget of 48000000 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.revenue))", "score": -0.803959755183314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.07182210817316938, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.14946529905045775, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.21681497857675502, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2988763365093331, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),keyword.name,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.3053449107321031, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.3126890933660125, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.3503373619670597, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.36197350133412926, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.36307814560446594, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.37873377029669264, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.homepage,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.3974057190066721, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.4031133754444737, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.name,!=,The Film that THE MAN doesn't want you to see!), country.name),country.name))", "score": -0.40416580337451624, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,The Film that THE MAN doesn't want you to see!), country.name),keyword.name))", "score": -0.41097916878004376, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was the movie with the tagline The Film that THE MAN doesn't want you to see! produced in?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,!=,The Film that THE MAN doesn't want you to see!), country.name),person.birth_place))", "score": -0.4120046225461957, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,=,The Film that THE MAN doesn't want you to see!),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.popularity),movie.popularity))", "score": -0.012562830365823174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))", "score": -0.6023526858925834, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,13100000), movie.popularity),movie.popularity))", "score": -0.6455651981677875, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.revenue,>,13100000),movie.popularity), movie.popularity))", "score": -0.678462124284124, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,13100000), movie.popularity),movie.popularity))", "score": -0.6903358173012748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.popularity),movie.status))", "score": -0.7178739981181934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,13100000), movie.popularity),movie.popularity))", "score": -0.7465871643662467, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.popularity),movie.vote_average))", "score": -0.7471801714427784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,13100000), movie.popularity),movie.popularity))", "score": -0.7511611444797381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.status),movie.popularity))", "score": -0.7768434238541886, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,13100000), movie.popularity),movie.popularity))", "score": -0.7854956848468646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.vote_average),movie.popularity))", "score": -0.7872830581773087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.popularity),movie.revenue))", "score": -0.809469290209563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.id),movie.popularity))", "score": -0.8399761271584794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularity of movies with a revenue greater than 13100000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,13100000), movie.revenue),movie.popularity))", "score": -0.869108314524965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.1523304126271069, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special effects),movie.runtime),movie.popularity))", "score": -0.21796604571172204, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.2550251736213806, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))", "score": -0.27629631443569225, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.29639263318999254, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,special effects),movie.runtime),movie.popularity))", "score": -0.29956019227853337, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.29966064772583767, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.popularity),movie.popularity))", "score": -0.3000824805149946, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.30601373035908547, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3206608067059957, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3620282662746077, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special effects),movie.popularity),movie.popularity))", "score": -0.36571811359960976, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3716493728577518, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),person.birth_day),movie.popularity))", "score": -0.37172844313485537, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects),movie.runtime),movie.popularity))", "score": -0.37607986013718814, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.06048691954280954, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1701254064700296, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Sardaarji), company.name),company.name))", "score": -0.2479000847563469, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.2604621902112038, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.30729359256340116, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,=,Sardaarji), company.name),company.name))", "score": -0.32862400707763, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.3346954420489067, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,=,Sardaarji), company.name),company.name))", "score": -0.3418917499371253, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,=,Sardaarji), company.name),company.name))", "score": -0.34585760216748596, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),production_company.company_id))", "score": -0.3574914360603993, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Sardaarji), company.name),company.name))", "score": -0.36962798127017626, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Sardaarji), company.name),company.name))", "score": -0.37669777864599663, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.3875539478285647, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Sardaarji), company.name),company.name))", "score": -0.3999824680508635, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.41097075318179715, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), person.death_day),oscar.number))", "score": -0.23366992342112808, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),oscar.number))", "score": -0.27421195787537256, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), person.death_day),keyword.name))", "score": -0.30649408611002593, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>,8),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.category),oscar.number))", "score": -0.32415546015641605, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))", "score": -0.3318262700231786, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),keyword.name))", "score": -0.3470361205642704, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))", "score": -0.3723683044774231, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.year),oscar.number))", "score": -0.37696151086254287, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,oscar.id),movie.id,oscar_nominee.movie_id), person.death_day),oscar.number))", "score": -0.37799380365998797, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,company.id),movie.id,oscar_nominee.movie_id), person.death_day),oscar.number))", "score": -0.37854639406587137, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>,8),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3787704600307064, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.category),oscar.number))", "score": -0.3855849180718534, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), person.death_day),oscar.category))", "score": -0.3881503875652864, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,8),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.40076473325140444, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of oscar nominees in movies with a vote average greater than 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>,8),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.category),keyword.name))", "score": -0.40348632705674836, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,8),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.08211221228009301, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.number))", "score": -0.15747795392377595, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.24514486788958498, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.sub_category))", "score": -0.25233627044077855, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.2798167107669549, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.28974633645759257, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.year),oscar.sub_category))", "score": -0.30355115425910295, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))", "score": -0.3277020120844615, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.34620341805846516, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.36511207810127555, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3746144851282525, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.year),oscar.number))", "score": -0.37891689590278593, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3881315826681876, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.sub_category))", "score": -0.3889469383472903, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many distinct oscar subcategories are there for oscar nominated movies in the status \"Post Production\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.3910389341754344, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.017486033745626628, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.5354325028774838, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.popularity), movie.popularity))", "score": -0.5418954812157608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.6108544289772908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.status))", "score": -0.6410629570191304, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.6530415726765568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.6550682040569882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.popularity))", "score": -0.7290609114743347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.popularity))", "score": -0.7541454070187683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.original_language))", "score": -0.7553247630303304, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.7637717544739644, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.popularity))", "score": -0.8206432693577881, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.8348760458347897, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Released), movie.popularity),movie.popularity))", "score": -0.8377932759640316, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,Released), movie.popularity),movie.popularity))", "score": -0.8405440760716374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(company),production_company.movie_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2403678309358457, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.birth_day,>,2017-08-13), company.name),company.name))", "score": -0.2560193274402595, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2568656872425701, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.25963646657493744, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,company.id),person.birth_day,>,2017-08-13), company.name),company.name))", "score": -0.28641062064064104, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.28725698044295167, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,production_company.company_id),person.birth_day,>,2017-08-13), company.name),company.name))", "score": -0.2874025400521185, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,production_company.company_id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2882488998544291, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,production_company.company_id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.30009448439304387, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,production_company.movie_id),person.birth_day,>,2017-08-13), company.name),company.name))", "score": -0.3126073757883887, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,production_company.movie_id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3134537355906993, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.birth_day,>,2017-08-13), company.name),company.name))", "score": -0.3168077441392574, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.31765415828046645, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),cast.movie_id,production_company.company_id),person.birth_day,>,2017-08-13), company.name),company.name))", "score": -0.3201549568623015, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,2017-08-13),production_company.movie_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.37129932764946894, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.vote_average),movie.budget))", "score": -0.14629066338238772, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,movie.id),movie.vote_average),movie.budget))", "score": -0.36437671349503437, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.vote_count),movie.budget))", "score": -0.38583976750669535, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.revenue),movie.budget))", "score": -0.4405031276255613, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),getData(movie),movie.id,movie.id),movie.vote_average),movie.budget))", "score": -0.45571200787795624, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.4628169880393475, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.4696341978180815, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.47010690202736954, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,movie.revenue),movie.vote_average),movie.budget))", "score": -0.4756299720855104, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.budget))", "score": -0.4790759182924286, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Action),movie.vote_average),movie.vote_count))", "score": -0.5114668484166032, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id),movie.vote_average),movie.budget))", "score": -0.5213056108079583, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,movie.id),movie.vote_count),movie.budget))", "score": -0.5287618167743807, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,=,Action),getData(movie),movie.id,cast.movie_id),movie.vote_average),movie.budget))", "score": -0.5326572685361842, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What's the budget of the action movie with the highest vote average?", "inferred_code": "done(extractValues(max(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.vote_average),movie.budget))", "score": -0.5365147261796667, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.20074585159185, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,!=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.22543489864045504, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.23544430769985952, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(country),country.name,!=,South Africa),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.25985869899755937, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(country),country.name,=,South Africa),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.2647044943434646, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.30872843129869426, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa),movie.popularity),movie.popularity))", "score": -0.33556460402721516, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.3476618721130961, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),keyword.name,!=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.36055056648916545, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),keyword.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.37055997554856995, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),language.name,!=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.3712162213030785, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.3752317941443054, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),language.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.3812256597121719, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.popularity),movie.popularity))", "score": -0.3942129214580283, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),country.name,!=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.3947659061270571, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.23613983097890645, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.300526802600735, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,52),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.31670596049010774, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.runtime)", "score": -0.3206489258540111, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.33985353446110683, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), movie.id),movie.vote_average)", "score": -0.37454345293656754, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,52),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.37930500033800457, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3850358974758397, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.38655118901545094, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.39090877564073034, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.3945001281518841, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), movie.id),movie.vote_average)", "score": -0.39958138477989347, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.40089666167014815, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,52),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.runtime)", "score": -0.4020070091433372, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}, {"orig_question": "What is the average year for movies to receive a oscar if the movie vote count is lower or equal than 52?", "inferred_code": "avg(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,52),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.40276391086218216, "correct_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,52), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,special achievement award),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.20458220040824276, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,special achievement award),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.21057756437096223, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,special achievement award),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.23776304048434083, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,special achievement award),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.2437584044470603, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,special achievement award),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.2537781828004583, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,special achievement award),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.2976734441433372, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,special achievement award),getData(oscar_winner),movie.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.3036688081060566, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,special achievement award),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.30610978075726103, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar.category,=,special achievement award),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.3086316749245543, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,special achievement award),getData(oscar_winner),movie.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.31210514471998047, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,special achievement award),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.31412470511669255, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,special achievement award),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.33085428421943525, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,special achievement award),getData(oscar_winner),movie.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.33684961011062425, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,special achievement award),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.release_date))", "score": -0.3392905827618286, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}, {"orig_question": "When were the movies that won an Oscar for a special achievement award released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,special achievement award),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.release_date),movie.release_date))", "score": -0.3441036259250045, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special achievement award), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_count),movie.vote_count))", "score": -0.10602935560018523, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_average),movie.vote_count))", "score": -0.24206956259877188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))", "score": -0.303848525210924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_average),movie.vote_count))", "score": -0.43988873220951064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,238), movie.vote_count),movie.vote_count))", "score": -0.48972097940713866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,238), movie.vote_count),movie.vote_count))", "score": -0.5315112077441881, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,238), movie.vote_count),movie.vote_count))", "score": -0.5581003927436541, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,238), movie.vote_count),movie.vote_count))", "score": -0.6152828537669848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,238), movie.vote_count),movie.vote_count))", "score": -0.6200324089077185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,238), movie.vote_average),movie.vote_count))", "score": -0.6257611864057253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,238), movie.vote_count),movie.vote_count))", "score": -0.6259832584109972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.revenue),movie.vote_count))", "score": -0.6446772419658373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.runtime),movie.vote_count))", "score": -0.6574298498962889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,238), movie.vote_count),movie.vote_average))", "score": -0.658067329255573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many votes did the movies get that are longer than 238 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,238), movie.vote_average),movie.vote_count))", "score": -0.6675514301095973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,238), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.04620491414710404, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.19005153097397523, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.25368002884245966, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.sub_category),oscar.number)", "score": -0.27891473494349756, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), movie.title),oscar.number)", "score": -0.331177037746944, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.39124215664891776, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), company.name),oscar.number)", "score": -0.4010732212844113, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.40822680517575666, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.person_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4118324367876107, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.oscar_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4169158655410246, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.42329310222238914, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),production_company.company_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4244836200545782, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), keyword.id),oscar.number)", "score": -0.4274020996920279, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), company.id),oscar.number)", "score": -0.42974495283881614, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar_nominee.person_id),oscar.number)", "score": -0.44743245968475615, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))", "score": -0.0366375076409895, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.27069647822645493, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1909-11-09), person.death_place),person.death_place))", "score": -0.4720182519231457, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.name),person.death_place))", "score": -0.6484743228938896, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.birth_place))", "score": -0.6509145663876552, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_day))", "score": -0.6509242819447536, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1909-11-09), person.death_place),person.death_place))", "score": -0.6820630829606671, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1909-11-09), person.death_place),person.death_place))", "score": -0.6855299191374797, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1909-11-09), person.birth_place),person.death_place))", "score": -0.7060772225086112, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1909-11-09), person.death_place),person.death_place))", "score": -0.7256668608461041, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1909-11-09), person.death_place),person.death_place))", "score": -0.7402180235658307, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_day),person.death_place))", "score": -0.7625547519710381, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1909-11-09), person.death_place),person.death_place))", "score": -0.7825932305131573, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),genre.name))", "score": -0.7878958748478908, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.gender),person.death_place))", "score": -0.806155370810302, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.008364067576621892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),language.name))", "score": -0.6912334285916586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.title),movie.original_language))", "score": -0.7170811369323928, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.popularity),movie.original_language))", "score": -0.7349115087890823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), language.name),movie.original_language))", "score": -0.7397943212890823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.revenue))", "score": -0.7581961475552816, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.budget))", "score": -0.7756327115239401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.7931815388037649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),spoken_language.iso_639_1))", "score": -0.8099535428227682, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.budget),movie.original_language))", "score": -0.8256915881538589, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.title))", "score": -0.8317801080884237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Fast Five), movie.original_language),movie.original_language))", "score": -0.8341161014868703, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), spoken_language.iso_639_1),movie.original_language))", "score": -0.8678805305862625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Fast Five), movie.original_language),movie.original_language))", "score": -0.8772930261220608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}, {"orig_question": "Find the original language of the movie having the title Fast Five.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.vote_average),movie.original_language))", "score": -0.8799814059639175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Fast Five), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,9500000), movie.id),movie.vote_count)", "score": -0.1040360633868215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,9500000), movie.id),movie.vote_count)", "score": -0.2910702738705579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,9500000), movie.id),movie.vote_count)", "score": -0.4127345984814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_count),movie.vote_count))", "score": -0.5728204763072426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,9500000), movie.id),movie.vote_average)", "score": -0.5842144034792796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_count))", "score": -0.6393594062465127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,9500000), movie.id),movie.vote_count)", "score": -0.7014350919156535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,9500000), movie.id),movie.budget)", "score": -0.7215191706767807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,9500000),movie.budget),movie.vote_count))", "score": -0.724098343962396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.budget),movie.vote_count))", "score": -0.7286514556544716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.runtime),movie.vote_count))", "score": -0.7355813300746377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,9500000), movie.id),movie.revenue)", "score": -0.745100115335709, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,9500000), movie.id),movie.vote_count)", "score": -0.7616283139022884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,9500000), movie.id),movie.vote_count)", "score": -0.7641996215130762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the average votes of the movies with the 9500000 dollars budget?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,9500000), movie.id),movie.vote_average)", "score": -0.7712486139630159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,9500000), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.06346908871232924, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.1983521597071969, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.2129081256143899, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.2272722340174536, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.3402483593964828, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,company.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.35499039860017956, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.3669955010679181, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3728501832561456, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),language.name))", "score": -0.38648403082814553, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,oscar.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.3890378452806167, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),has_keyword.keyword_id))", "score": -0.3971982754365355, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,movie.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.4026383449456141, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),movie.vote_count))", "score": -0.40962868606823283, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,movie.vote_count),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.4100373984843197, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),production_company.company_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.41071247067987077, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.number),oscar.category))", "score": -0.12670495403023446, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.category),oscar.category))", "score": -0.1835857809024976, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.number),oscar.number))", "score": -0.20404789229307357, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.sub_category),oscar.category))", "score": -0.21730922473748784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.category),oscar.number))", "score": -0.2609287191653367, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.number),oscar.sub_category))", "score": -0.27014064512179004, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.number),oscar.year))", "score": -0.2782173605507708, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,<=,2016-03-17), oscar.number),oscar.category))", "score": -0.2848256379442181, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.year),oscar.category))", "score": -0.2914997095875445, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.sub_category),oscar.number))", "score": -0.294652163000327, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2016-03-17), oscar.number),oscar.category))", "score": -0.31895488165399266, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.category),oscar.sub_category))", "score": -0.3270214719940532, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.category),oscar.year))", "score": -0.33509818742303393, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,<=,2016-03-17), oscar.category),oscar.category))", "score": -0.34170646481648126, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>=,2016-03-17), oscar.sub_category),oscar.sub_category))", "score": -0.36074491582904344, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.11771637652654543, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,documentary (feature)), movie.title),movie.title))", "score": -0.18656332853215893, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),movie.title),movie.title))", "score": -0.20961038460257922, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,documentary (feature)),movie.title),movie.title))", "score": -0.27834158586511354, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,documentary (feature)), movie.title),movie.title))", "score": -0.33243797213029075, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3802335058050205, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.title),movie.title))", "score": -0.3831393838932037, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,documentary (feature)),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.42231103419170096, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,documentary (feature)),movie.title),movie.title))", "score": -0.44364262244928476, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.4445201718822451, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.title,=,documentary (feature)), movie.title),movie.title))", "score": -0.45301076499568416, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,documentary (feature)),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.46193092249536244, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,>=,documentary (feature)), movie.title),movie.title))", "score": -0.4725355820251772, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), oscar.number),movie.title))", "score": -0.48618433714739295, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.title),movie.title))", "score": -0.49256685693244306, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)", "score": -0.058834606434086605, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.13635647756243613, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(filter(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,!=,m), movie.id),movie.vote_average)", "score": -0.27876610368604865, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)", "score": -0.3235553508942762, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(filter(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,!=,m), movie.id),movie.vote_average)", "score": -0.36990321804599097, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,person.id), movie.id),movie.vote_average)", "score": -0.3827626684980564, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.38749693687683473, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(filter(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)", "score": -0.3883586547752358, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.38880571250574014, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.40417222615769943, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.40453692001391833, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)", "score": -0.4107974324248308, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,person.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)", "score": -0.41387772117062877, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.4251826923823357, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}, {"orig_question": "What is the average of the vote average from movies in which oscar nominated persons with gender other than m were involved?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),person.id,movie.id), movie.id),movie.vote_average)", "score": -0.44435625139194834, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.08875449742181592, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.10134778012671247, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,113020255),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2009835010818207, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,113020255), keyword.name),keyword.name))", "score": -0.3769511955435964, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),has_keyword.keyword_id))", "score": -0.4001588676115829, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.40030043125683634, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.4056011844376794, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,company.id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.41146565044898264, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,company.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.4150965703930423, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,>=,113020255), keyword.name),keyword.name))", "score": -0.42831414951176977, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(has_keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.42924009191155754, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,!=,113020255), keyword.name),has_keyword.keyword_id))", "score": -0.4306004454150151, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),language.name))", "score": -0.43190969337889323, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),movie.vote_count))", "score": -0.43461792762028745, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names of movies without the movies with a revenue of 113020255.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,spoken_language.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))", "score": -0.43517659894946076, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,!=,113020255), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.22971047820873763, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.23776437126010475, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.254438813979027, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.27049384210611904, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.28195503371440334, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.2922837894015801, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,sound mixing), country.name),country.name))", "score": -0.2948866194919853, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,sound mixing), country.name),country.name))", "score": -0.3048958502999763, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.30580811423680077, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.3060938211800236, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_nominee.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.30833881752867215, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.31024284601317387, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.31715496267321763, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.category,=,sound mixing), country.name),country.name))", "score": -0.3310474600065494, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}, {"orig_question": "From which countries are the oscar nomineed persons in the category sound mixing?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,sound mixing), country.name),country.name))", "score": -0.3368161474650938, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound mixing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.vote_count),movie.vote_count))", "score": -0.17583153212621952, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,warner bross Turkey),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.21566912854800924, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.vote_average),movie.vote_count))", "score": -0.21766617118326248, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.title),movie.vote_count))", "score": -0.22213143507526661, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,warner bross Turkey),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count))", "score": -0.2445109991000118, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,warner bross Turkey),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_count))", "score": -0.2755261600745329, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,warner bross Turkey),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_average),movie.vote_count))", "score": -0.3368125546790103, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.vote_count),movie.vote_count))", "score": -0.3756142523194088, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,warner bross Turkey),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_average),movie.vote_count))", "score": -0.38824223602162206, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,warner bross Turkey),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.vote_count))", "score": -0.39780021363890444, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.runtime),movie.vote_count))", "score": -0.4013032454110004, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.title),movie.vote_count))", "score": -0.406063790406133, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.vote_average),movie.vote_count))", "score": -0.42176818209850575, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,warner bross Turkey), movie.vote_count),movie.vote_count))", "score": -0.43630227628999113, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}, {"orig_question": "How many votes did movies produced by warner bross Turkey get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.vote_count),movie.vote_count))", "score": -0.43971506421260337, "correct_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,warner bross Turkey), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)", "score": -0.01886573887109389, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.id),movie.revenue)", "score": -0.3982509998749818, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.id),movie.revenue)", "score": -0.5026021486016761, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,nb), movie.id),movie.revenue)", "score": -0.508421284963797, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,nb), movie.id),movie.revenue)", "score": -0.6127724336904912, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,nb), movie.id),movie.revenue)", "score": -0.6266831009979538, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,nb), movie.id),movie.revenue)", "score": -0.6778358429103575, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.original_language),language.name,=,nb), movie.id),movie.revenue)", "score": -0.6859448392043537, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,nb), movie.id),movie.revenue)", "score": -0.7095212242881761, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.popularity)", "score": -0.7173013313820902, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,nb), movie.id),movie.revenue)", "score": -0.7202744868182913, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,language.iso_639_1),language.name,=,nb), movie.id),movie.revenue)", "score": -0.7203232845368216, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,nb), movie.id),movie.revenue)", "score": -0.731034249724648, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.id),movie.revenue)", "score": -0.7417065314983498, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of the revenue of all the movies that their original language is nb?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.id),movie.popularity)", "score": -0.7804083541201179, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,nb), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_day),person.death_day))", "score": -0.22223548727924936, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.death_day))", "score": -0.2581245242326986, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_day),person.death_day))", "score": -0.27855806934530847, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_day),person.death_place))", "score": -0.2840387685864698, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.death_day))", "score": -0.3144471062987577, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.death_place))", "score": -0.31992780553991906, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_day),person.death_place))", "score": -0.3403613506525289, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.death_place))", "score": -0.3762503876059782, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,m), person.death_day),person.death_day))", "score": -0.6018087207048666, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,m), person.death_place),person.death_day))", "score": -0.6376977576583158, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.birth_place),person.death_day))", "score": -0.6459145857661497, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_day),person.name))", "score": -0.656858430680586, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,m), person.death_day),person.death_place))", "score": -0.663612002012087, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_day),person.death_day))", "score": -0.6916010915010702, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.name))", "score": -0.6927474676340353, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),country.name))", "score": -0.02682658432488061, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,=,2001-11-17), country.name),country.name))", "score": -0.24905290259225613, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>=,2001-11-17), country.name),country.name))", "score": -0.27799976761570544, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,2001-11-17), country.name),country.name))", "score": -0.28536572882635153, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),production_country.iso_3166_1))", "score": -0.3493664391492807, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),movie.status))", "score": -0.35498931679547785, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,<,2001-11-17), country.name),country.name))", "score": -0.3791244686608738, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.release_date,>,2001-11-17), country.name),country.name))", "score": -0.3805357866640323, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), movie.status),country.name))", "score": -0.3885321927606448, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,>,2001-11-17), country.name),country.name))", "score": -0.39373122047335307, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,production_country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),country.name))", "score": -0.3970976893260081, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),country.name))", "score": -0.39939687847536, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,>,2001-11-17), country.name),country.name))", "score": -0.40383155376159086, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),person.birth_place))", "score": -0.412671853125901, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries when the movie release dates are after 2001-11-17?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.name),movie.id,production_country.movie_id),movie.release_date,>,2001-11-17), country.name),country.name))", "score": -0.4202974200880626, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2001-11-17),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.1428121053774721, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89),getData(movie),oscar_nominee.movie_id,movie.id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.17837975501269127, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)", "score": -0.2107433818043762, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.22664872158374946, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),person.death_day,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.27996323218592234, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,!=,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2887211566084451, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,=,89), movie.id),movie.popularity)", "score": -0.29233537329486403, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3013832127906006, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.title,<,89), movie.id),movie.popularity)", "score": -0.33183891026475737, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.number,=,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3358846778020704, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),movie.vote_count,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.34847722310470663, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.359716385078904, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),oscar.number,<,89),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.35980821653467143, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.37437110645947447, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.3894493884677604, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.167793853300775, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,moulin rouge),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.17836105250345116, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.2524809902771447, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,cast.movie_id),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.25536587640973213, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(cast),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.2641836834590857, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,cast.person_id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.2959370880467689, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.29703552696122454, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,cast.person_id),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.29792207477336713, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.3087382517812742, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(cast),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge), person.death_place),person.death_place))", "score": -0.31240524092742894, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,moulin rouge),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),getData(cast),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3468903058162077, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,moulin rouge),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(filter(getData(movie),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),keyword.id,movie.id), person.death_place),person.death_place))", "score": -0.36910640357587776, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,moulin rouge),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.36949208671886974, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,moulin rouge),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(filter(getData(movie),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),keyword.id,cast.person_id), person.death_place),person.death_place))", "score": -0.3738852303704968, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}, {"orig_question": "Are there distinct death places of cast people that have worked on movies with the keyword moulin rouge?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,moulin rouge),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.movie_id),has_keyword.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3762442594822761, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,moulin rouge),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.11033353083007925, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.13860572961730275, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), movie.vote_count),keyword.name))", "score": -0.22518101452730274, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.2857844028054826, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), oscar.number),keyword.name))", "score": -0.2896233534962445, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3083458582524818, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.35153871776872075, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), movie.vote_count),keyword.name))", "score": -0.355311898026182, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3572072361001949, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,oscar.id), keyword.name),keyword.name))", "score": -0.3611140690458039, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.id),keyword.name))", "score": -0.3725671250200403, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,oscar.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.37461518950889, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(oscar),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.38026729280006927, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3831903363549463, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.death_place))", "score": -0.3957042988582838, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), person.gender),person.gender))", "score": -0.08305642785853706, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2002-01-25), person.gender),person.gender))", "score": -0.18115858393139206, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), movie.popularity),person.gender))", "score": -0.5299828875286039, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), person.gender),movie.popularity))", "score": -0.5652602653426584, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), movie.status),person.gender))", "score": -0.5735890197975095, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2002-01-25), movie.popularity),person.gender))", "score": -0.6280850436014589, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(oscar),movie.release_date,>,2002-01-25), person.gender),person.gender))", "score": -0.6283970292133745, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,>,2002-01-25), person.gender),person.gender))", "score": -0.6459898414032068, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), person.gender),crew.person_id))", "score": -0.6529753546637949, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2002-01-25), person.gender),movie.popularity))", "score": -0.6633624214155134, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2002-01-25), movie.status),person.gender))", "score": -0.6716911758703645, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), person.gender),genre.name))", "score": -0.6819621066970285, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), person.gender),movie.status))", "score": -0.7053574066085275, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), person.gender),movie.release_date))", "score": -0.7176332216185983, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}, {"orig_question": "How many different genders do the persons have that worked on a movie that was released after 2002-01-25?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2002-01-25), movie.release_date),person.gender))", "score": -0.7184841561538633, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2002-01-25), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.01175499150849646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_count))", "score": -0.48005556410498684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.vote_average),movie.vote_average))", "score": -0.5993060015825904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.vote_average))", "score": -0.6325649562277249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8285427831797278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.revenue))", "score": -0.838412576376868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,Released), movie.vote_average),movie.vote_average))", "score": -0.8388705864126678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.title))", "score": -0.8453951413030154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.runtime))", "score": -0.871987217127753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),oscar.year))", "score": -0.8778816396588809, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.vote_average),movie.vote_average))", "score": -0.895304574885813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.vote_average),movie.vote_average))", "score": -0.8964022412474151, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), oscar.year),movie.vote_average))", "score": -0.8966161551870755, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.vote_average),movie.vote_average))", "score": -0.9078000926165259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "What is the movie vote average of the released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.title),movie.vote_average))", "score": -0.9200404825605801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.11710426987481148, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.19779345145512853, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.23365708457621012, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_place,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.23641947966852303, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.2525043152335772, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_place,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_place,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.26607757548776306, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_place,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.2821624110528172, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.28241217428619714, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,<,1975-05-30),getData(cast),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.31434626615652717, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_place,<=,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.3310692997389193, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_day,<=,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.34715413530397343, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_place,=,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.3591400711096378, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.death_place,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.death_place,<=,1975-05-30), oscar.sub_category),oscar.sub_category))", "score": -0.36072739208170235, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,<,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.36310135586651415, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Is there any oscar sub category for movies for which a cast member who died before 1975-05-30 was nominated?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<=,1975-05-30),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.38157149390019895, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.death_day,<,1975-05-30),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.name),person.name))", "score": -0.2256719479773892, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.name),person.name))", "score": -0.30816686995967757, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.name),person.death_day))", "score": -0.3717569122527493, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))", "score": -0.3944947207783116, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.birth_place),person.name))", "score": -0.3959779153083218, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.birth_day),person.name))", "score": -0.4063810566876782, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.death_day),person.name))", "score": -0.41005472936376464, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.name),person.death_day))", "score": -0.4542518342350377, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.birth_place),person.name))", "score": -0.4784728372906102, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.name),person.birth_place))", "score": -0.48829983272298705, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.birth_day),person.name))", "score": -0.48887597866996657, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,1938-12-16), person.death_day),person.name))", "score": -0.492549651346053, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1938-12-16), person.name),person.name))", "score": -0.5381745184276951, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.death_day))", "score": -0.5405796850536717, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}, {"orig_question": "Who was born on December 16th 1938?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1938-12-16), person.birth_place),person.death_day))", "score": -0.5420628795836819, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1938-12-16), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))", "score": -0.023351946314505767, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1980-03-27), person.gender),person.gender))", "score": -0.45577994960331125, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1980-03-27),person.gender), person.gender))", "score": -0.5314022117381683, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,1980-03-27), person.gender),person.gender))", "score": -0.5901626445629518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1980-03-27), person.gender),person.gender))", "score": -0.5992810695242952, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.birth_day),person.gender))", "score": -0.6322533415441285, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.birth_place),person.gender))", "score": -0.6638312862996827, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1980-03-27), person.gender),person.gender))", "score": -0.6787657110762666, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,1980-03-27), person.gender),person.gender))", "score": -0.6794173223242979, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),movie.popularity))", "score": -0.7040943309475551, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),crew.person_id))", "score": -0.7241047426869045, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), crew.person_id),person.gender))", "score": -0.7545239852552186, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), movie.popularity),person.gender))", "score": -0.7628382967595826, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1980-03-27), person.gender),person.gender))", "score": -0.7650351621487061, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}, {"orig_question": "What are the genders of people with birthday on 1980-03-27?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,1980-03-27), person.gender),person.gender))", "score": -0.7687477492072503, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1980-03-27), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.07634485260676696, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_average)", "score": -0.13613902291388896, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_place,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.2011665990604387, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,New York City, New York, USA), movie.id),movie.vote_average)", "score": -0.24859975860167816, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,New York City, New York, USA),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_average)", "score": -0.30930632551084414, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.31404031276377975, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3191378603378613, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.35149718387908385, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),production_country.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.37816270309654404, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.38201869587641135, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_place,=,New York City, New York, USA),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.4075354853799765, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,=,New York City, New York, USA),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_average)", "score": -0.42198652814003923, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,!=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.4284013979691688, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.name,=,New York City, New York, USA),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.439816004311919, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average vote average for movies from which their oscar winners have died in New York City, New York, USA?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4434009460027977, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,New York City, New York, USA),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.title))", "score": -0.019366136413736967, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), company.name),movie.title))", "score": -0.6272405294112104, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Imagine Me & You), movie.title),movie.title))", "score": -0.6632453899474058, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.title))", "score": -0.6706852821043867, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.release_date),movie.title))", "score": -0.6897089985541243, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.vote_count),movie.title))", "score": -0.6917943862608809, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.budget),movie.title))", "score": -0.7075498608282942, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.vote_count))", "score": -0.7163744453682739, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), oscar.number),movie.title))", "score": -0.7436458972624678, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,Imagine Me & You), movie.title),movie.title))", "score": -0.7519806127638731, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.budget))", "score": -0.7541181926026184, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),company.name))", "score": -0.7777320627465087, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.runtime))", "score": -0.7840577844872314, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,Imagine Me & You), movie.title),movie.title))", "score": -0.7958722278817731, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.title))", "score": -0.8101258454298659, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.07449757592580772, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.09766992926642712, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2531183663409008, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2794434867799191, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))", "score": -0.3257178155417775, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3523400593285105, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.37320837041416177, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3736226014024229, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.original_language))", "score": -0.3854821253959878, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.status))", "score": -0.3888193747189002, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.status))", "score": -0.39020199839340547, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.39287434184158715, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3945738638462157, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.39530511494590825, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}, {"orig_question": "In which movies that won an oscar was a person with the gender m involved ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,m),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.39928187290029005, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.gender,=,m), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.1406919745190447, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.17034745284724895, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.19120954244129978, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.21884399068994134, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.popularity,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.26496010693005845, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.2964153381059361, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(movie),oscar_nominee.person_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3004564661587875, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3043987525648653, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.death_place,!=,sl),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3049471196979168, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.3159551402232633, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.death_place,!=,sl),oscar_nominee.person_id,person.id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.32088594433794565, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.original_language,!=,sl), genre.name),person.death_place))", "score": -0.3337220695241409, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3531334303968388, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3636643983806225, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.3754090314268715, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.0944313100859007, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,0.041651),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11562690960954755, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.14568641992857104, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3045223091477828, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,<,0.041651),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.3052355805443701, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.041651),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.31569039615217576, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,=,0.041651), country.name),country.name))", "score": -0.39807586506740783, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.4113198345187797, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4118630556724332, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.041651),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42013472643838884, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,<,0.041651), country.name),country.name))", "score": -0.4284007536407398, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,0.041651),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4313437553020871, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.4349691796631982, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<=,0.041651), country.name),country.name))", "score": -0.4369190196344852, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,>,0.041651), country.name),country.name))", "score": -0.45032703850166794, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.08939585087933688, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.18841126455694826, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2097007114120797, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),movie.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.25368884831215943, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.26199857721423847, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2623069899122424, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2688343311115113, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.28364890962916867, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2845250732857737, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.3041224859029725, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3061467628145459, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(has_genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3149992328026105, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3191195275209951, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.32688375460598623, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,movie.id), movie.id),movie.runtime)", "score": -0.34127120721975884, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))", "score": -0.033854643486847635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2011-09-10), movie.title),movie.title))", "score": -0.28572430522035575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,2011-09-10), movie.title),movie.title))", "score": -0.5281000124741695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-09-10), movie.title),movie.title))", "score": -0.5509059658725164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,2011-09-10), movie.title),movie.title))", "score": -0.553497670822253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,cast.movie_id),movie.release_date,<=,2011-09-10), movie.title),movie.title))", "score": -0.6044441082274092, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-09-10), movie.title),movie.title))", "score": -0.619589470930805, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,2011-09-10), movie.title),movie.title))", "score": -0.6241813289452693, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.id),movie.release_date,<=,2011-09-10), movie.title),movie.title))", "score": -0.6493342240278254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,<=,2011-09-10), movie.title),movie.title))", "score": -0.6973277913857601, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,2011-09-10), movie.title),movie.title))", "score": -0.7799696742076776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2011-09-10), movie.title),movie.title))", "score": -0.8053673325557611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,2011-09-10), movie.title),movie.title))", "score": -0.8112730967914104, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-09-10),movie.title), movie.title))", "score": -0.8128546676161932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of movies that were released before September 10th 2011?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.original_language))", "score": -0.8161767219644389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-09-10), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,288), movie.runtime),movie.runtime))", "score": -0.13754654029617086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,288), movie.runtime),movie.runtime))", "score": -0.16782783070812002, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))", "score": -0.2417177418828942, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,288), movie.runtime),movie.runtime))", "score": -0.3392575095058419, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,288), movie.runtime),movie.runtime))", "score": -0.4302744875312783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,288), movie.runtime),movie.runtime))", "score": -0.6060710261226632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,null,288), movie.runtime),movie.runtime))", "score": -0.6255977461696602, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,288), movie.runtime),movie.runtime))", "score": -0.6738093111780472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,288), movie.runtime),movie.vote_average))", "score": -0.6743561365292408, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,288),movie.runtime), movie.runtime))", "score": -0.6773165840349975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,288), movie.vote_average),movie.runtime))", "score": -0.6801750069134869, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,288), movie.runtime),movie.runtime))", "score": -0.7040906015899964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,288), movie.runtime),movie.vote_average))", "score": -0.7046374269411899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,288), movie.vote_average),movie.runtime))", "score": -0.710456297325436, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}, {"orig_question": "What are the different runtimes of movies with 288 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,288),movie.runtime), movie.runtime))", "score": -0.7364201288364711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,288), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.death_day,>,1985-03-05),oscar_winner.person_id,person.id), oscar.category),oscar.category))", "score": -0.2898461043558414, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.death_day,>,1985-03-05),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.29285405018604016, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3186137602715026, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.319363238358685, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.3419610723449547, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.3427105504321371, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.death_day,>,1985-03-05),oscar_winner.person_id,person.id), oscar.category),person.name))", "score": -0.37126344039461506, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(oscar),person.death_day,>,1985-03-05),oscar_winner.person_id,oscar.id), oscar.category),person.name))", "score": -0.3742713862248138, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(person),person.death_day,>,1985-03-05),oscar_winner.person_id,person.id), oscar.category),oscar.category))", "score": -0.37590140752513584, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(person),person.death_day,>,1985-03-05),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.37890935335533454, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>,1985-03-05),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.39222913715457863, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(merge(merge(getData(person),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>,1985-03-05),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.40823086506567074, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>,1985-03-05),oscar_winner.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4431217082231099, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>,1985-03-05),oscar_winner.person_id,movie.id), oscar.category),oscar.category))", "score": -0.4522484265754577, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}, {"orig_question": "Are there any oscar winners who died after 1985-03-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-03-05),getData(oscar_winner),person.id,oscar_winner.person_id),filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,person.id),person.death_day,>,1985-03-05),oscar_winner.person_id,oscar.id), oscar.category),oscar.category))", "score": -0.4553599545866839, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>=,1985-03-05),getData(movie),oscar_winner.movie_id,movie.id), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))", "score": -0.044690312759485096, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),movie.revenue))", "score": -0.4629409927292727, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.6059506553574465, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_place))", "score": -0.6426628846093081, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),oscar.year))", "score": -0.6502157467766665, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),oscar_nominee.person_id))", "score": -0.6680322307511233, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.name))", "score": -0.6810775417252444, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), movie.revenue),person.death_day))", "score": -0.681376896740403, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.death_day), person.death_day))", "score": -0.7327430947188986, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_day))", "score": -0.7383886285824701, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),oscar.number))", "score": -0.7621952909394167, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), oscar.year),person.death_day))", "score": -0.7644061073078774, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), oscar.number),person.death_day))", "score": -0.777971409203019, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(genre),person.gender,=,f), person.death_day),person.death_day))", "score": -0.7928341349470429, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "When was the deathday of the persons with gender f?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.death_day))", "score": -0.7988082393421791, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.2121923629770831, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.runtime)", "score": -0.2506237157073535, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.29007671846002087, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.29112455771516343, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.2978311041493837, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.32850807119029124, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.runtime)", "score": -0.32955591044543386, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),person.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3334301316231688, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)", "score": -0.33626245687965406, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(movie),crew.movie_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.36900891319810125, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),person.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3718614843534392, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,movie.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.37571545963232145, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.376763298887464, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.39672200994851015, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,>,2010-10-07),merge(getData(crew),getData(oscar),crew.movie_id,oscar.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.40359000863584454, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),filter(getData(oscar),person.birth_day,<,1898-07-18),oscar_nominee.person_id,person.id), oscar.sub_category),oscar.sub_category))", "score": -0.26522661304572837, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.2712771074476742, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.27738415085322443, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3315786714998897, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1898-07-18),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,person.id), oscar.sub_category),oscar.sub_category))", "score": -0.35065535416867644, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),filter(getData(oscar),person.birth_day,<,1898-07-18),oscar_nominee.person_id,movie.id), oscar.sub_category),oscar.sub_category))", "score": -0.3522687750884122, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),filter(getData(person),person.birth_day,<,1898-07-18),oscar_nominee.person_id,person.id), oscar.sub_category),oscar.sub_category))", "score": -0.35359508118451133, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.3557674750534631, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),getData(oscar),oscar_nominee.oscar_id,person.id), oscar.sub_category),oscar.sub_category))", "score": -0.35638700341477475, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3609274967409414, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,oscar.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.361621387571955, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),getData(person),oscar_nominee.oscar_id,person.id), oscar.sub_category),oscar.sub_category))", "score": -0.362494046820325, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.37991215688082236, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.3902110514577685, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Do there exist any sub category of Oscar where the Oscar nominated personality born before 1898-07-18?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),oscar.id,oscar_nominee.oscar_id), oscar.sub_category),oscar.sub_category))", "score": -0.40891485737937844, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1898-07-18), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.10969909853967348, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.14525081313440777, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.1),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.18932830124050323, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,<=,virginity), company.name),company.name))", "score": -0.20754355873390423, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,7.1),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2955838063695305, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,=,7.1), company.name),company.name))", "score": -0.2976860813064856, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,<=,virginity), company.name),company.name))", "score": -0.30721639601128053, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,=,7.1), company.name),company.name))", "score": -0.3332377959012199, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,7.1),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3451052064901969, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,virginity), company.name),company.name))", "score": -0.3578197264523877, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),keyword.name,<=,virginity), company.name),company.name))", "score": -0.37439735113358974, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.homepage,<=,virginity), company.name),company.name))", "score": -0.3894379658305156, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.39053346003356176, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,7.1), company.name),company.name))", "score": -0.39337144104712196, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,virginity), company.name),company.name))", "score": -0.39553054150071637, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.popularity)", "score": -0.021489004874809096, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,42000000), movie.id),movie.popularity)", "score": -0.6393749288258151, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity)", "score": -0.6685162563987832, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,!=,42000000), movie.id),movie.popularity)", "score": -0.6698689567091726, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,42000000), movie.id),movie.popularity)", "score": -0.6877875317943094, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.runtime)", "score": -0.7257014701595107, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,>=,42000000), movie.id),movie.popularity)", "score": -0.731753234190204, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.vote_average)", "score": -0.7560740051502342, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>=,42000000), movie.id),movie.popularity)", "score": -0.7651033460217692, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.status)", "score": -0.805271995232079, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.release_date)", "score": -0.8236385049780086, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,>=,42000000), movie.id),movie.popularity)", "score": -0.8508095124151815, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.revenue)", "score": -0.8538447536100187, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>=,42000000), movie.id),movie.popularity)", "score": -0.8544004969863407, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.id)", "score": -0.8623479423195551, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.07538764957277078, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.runtime),movie.runtime))", "score": -0.14330564763617257, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2062856229233687, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.32553418129787387, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3635683310985207, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,visual effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.37055162951414794, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3811402813285729, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3820427384665626, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(production_company),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.3831875207792361, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),genre.name,=,visual effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.39895476316919326, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,has_genre.genre_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.4129728632221201, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,oscar.id), movie.runtime),movie.runtime))", "score": -0.4214024607598235, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.4231156549886827, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.4259939294218504, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),oscar_nominee.movie_id))", "score": -0.4767864130705665, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))", "score": -0.11500695772701874, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.popularity),movie.popularity))", "score": -0.40855094842845574, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>,59),movie.runtime),movie.popularity))", "score": -0.46875747811282054, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.vote_average),movie.popularity))", "score": -0.5072864597314037, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,!=,59),movie.runtime),movie.popularity))", "score": -0.5218705214210786, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.runtime,>=,59),getData(movie),movie.id,movie.id),movie.runtime),movie.popularity))", "score": -0.5761492555635729, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,>=,59),movie.runtime),movie.popularity))", "score": -0.6307054670178331, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.status))", "score": -0.6459304327727295, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,<=,59),movie.runtime),movie.popularity))", "score": -0.6745713926502503, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.release_date))", "score": -0.6829687590361573, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,=,59),movie.runtime),movie.popularity))", "score": -0.7013704754062928, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.runtime))", "score": -0.7163570160628296, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.vote_average))", "score": -0.7304239506484009, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>=,59),movie.runtime),movie.popularity))", "score": -0.7522953660809435, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the maxiumum runtime among all movies with runtimes of at least 59 minutes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.id))", "score": -0.7539670104742981, "correct_code": "done(extractValues(max(filter(getData(movie),movie.runtime,>=,59),movie.runtime),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.07791620740977784, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.20536100376884361, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.title))", "score": -0.23807993535449748, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.2642066496811393, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.budget))", "score": -0.3280866901423677, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.title))", "score": -0.3411778038049201, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,ghost town), movie.title),movie.title))", "score": -0.35433872250874276, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,ghost town),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.35984581078980726, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),movie.title),movie.title))", "score": -0.36565603275596104, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.title),movie.title))", "score": -0.3808417677848623, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.3873339796658733, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.40103891493820787, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.budget),movie.title))", "score": -0.41139010998572473, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town), movie.vote_count),movie.title))", "score": -0.41964329765851915, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movies that don't have the keyword \"ghost town\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,ghost town),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.title))", "score": -0.4243703538138472, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,ghost town),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ar),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.09235373549716788, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.1908483393496548, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.23398991993883875, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,ar),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.26670828059972723, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2810837997586428, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ar),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.31720237703623766, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),language.name,!=,ar),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.34575219881429137, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),language.name,!=,ar),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.35078250513304193, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ar),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),person.death_place))", "score": -0.36668154904594913, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),language.name,!=,ar),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3786455758539182, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,!=,ar), language.name),language.name))", "score": -0.3817709743608813, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,ar),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3836758821726688, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id), language.name),language.name))", "score": -0.38647166163016655, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.iso_639_1), language.name),language.name))", "score": -0.3955087254624589, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),movie.original_language))", "score": -0.40612816216086517, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.1402986956027146, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.18669890582077572, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.26438544809113895, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.27395388084290034, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.29893416309307164, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.3107856583092001, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3151785713415672, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.32035409106096147, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),person.death_place))", "score": -0.3286387706330976, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,!=,4.5), language.name),language.name))", "score": -0.34035371045107554, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.34945497771434597, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),oscar.sub_category,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3634724677921336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,!=,4.5), language.name),movie.original_language))", "score": -0.36358735394806085, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),person.death_place))", "score": -0.3750389808511587, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,4.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3958551879324071, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.release_date,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.3101781332902923, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.31811145869879237, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.release_date,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.32750193078646744, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.3354352561949675, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>=,1894-05-10),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.35379925205451657, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.35478024241405237, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>=,1894-05-10),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.36919787666969117, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),movie.release_date,>=,1894-05-10),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.370178867029227, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id),movie.release_date,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.4255049750923326, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.release_date,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.425843574990624, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.release_date,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.4269293086704539, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.4334383005008326, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.43377698660901104, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.434862720288841, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.release_date,<=,1894-05-10), movie.id),movie.runtime)", "score": -0.44163811185295265, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.09756069356375363, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2016-11-20),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.10409594629420593, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<=,2016-11-20),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.17408058749158903, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.23565400807785716, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.24563243383354874, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2787292784224767, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,<,2016-11-20),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3110108618654263, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.32503178640796726, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,=,2016-11-20),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.32889308632814784, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,<,2016-11-20),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.329346186657617, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,<=,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3837257483476523, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,<,2016-11-20),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.39580933079125125, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.41682259293658025, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,2016-11-20),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.4364607887835827, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}, {"orig_question": "What is the movie title from movies in which oscar nominated persons were involved who died before 2016-11-20?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2016-11-20),getData(movie),oscar_nominee.movie_id,person.id), movie.title),movie.title))", "score": -0.468611846284803, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,<,2016-11-20), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))", "score": -0.01135291355967638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,675), movie.original_language),movie.original_language))", "score": -0.5477165268857789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,675), movie.original_language),movie.original_language))", "score": -0.6405058192212891, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,675), movie.original_language),movie.original_language))", "score": -0.6583342741832894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),language.name))", "score": -0.6788058994461608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,675), movie.original_language),movie.original_language))", "score": -0.7028207968578499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.popularity),movie.original_language))", "score": -0.7132021634497505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.revenue))", "score": -0.7606517790009093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,675), movie.original_language),movie.original_language))", "score": -0.7643389295444649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),spoken_language.iso_639_1))", "score": -0.7723314879585814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.popularity))", "score": -0.792030823056848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,675), movie.original_language),movie.original_language))", "score": -0.7972209047184151, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), language.name),movie.original_language))", "score": -0.8174769728102547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),spoken_language.movie_id))", "score": -0.8497938035179686, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a movie count of 675?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,=,675), movie.original_language),movie.original_language))", "score": -0.8550466584165406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,675), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))", "score": -0.12083132693078369, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,>,1101),movie.revenue),movie.budget))", "score": -0.33556552545633167, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),getData(movie),movie.id,movie.id),movie.revenue),movie.budget))", "score": -0.3915589112554464, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,!=,1101),movie.revenue),movie.budget))", "score": -0.3978977868100628, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),getData(movie),movie.id,movie.revenue),movie.revenue),movie.budget))", "score": -0.4367345935334812, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>=,1101),movie.revenue),movie.budget))", "score": -0.47119034023489803, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,>,1101),getData(movie),movie.id,movie.id),movie.revenue),movie.budget))", "score": -0.48158731908980174, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.revenue),movie.budget))", "score": -0.5129352590773683, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.revenue),movie.revenue),movie.budget))", "score": -0.5155715478170935, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,>,1101),getData(movie),movie.id,movie.revenue),movie.revenue),movie.budget))", "score": -0.5267630013678366, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id),movie.revenue),movie.budget))", "score": -0.5357748370374722, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.revenue),movie.revenue),movie.budget))", "score": -0.5384111166400302, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.5558732022273882, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,>,1101),getData(movie),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.5666120199032882, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}, {"orig_question": "What is the budget of the movie with the maximum revenue among all movies that have more than 1101 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,!=,1101),movie.revenue),movie.budget))", "score": -0.6126319853356108, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,>,1101),movie.revenue),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.06384835679061239, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Post Production),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.11973784283382582, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Post Production),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2835531725299329, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3288960080174335, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,Post Production),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34045778000929977, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3539547482073401, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.370141956551184, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),company.name))", "score": -0.3857537051197328, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3913511198341364, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Post Production),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.40404341927834253, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Post Production), genre.name),genre.name))", "score": -0.41420029690982496, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.41829764531648234, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,has_genre.movie_id),movie.status,=,Post Production),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4208228803860381, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), company.name),genre.name))", "score": -0.4239318396212827, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "To which genres do movies in post production belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),movie.original_language))", "score": -0.42555112135227086, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),person.death_day))", "score": -0.22954897965973942, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.death_day))", "score": -0.2549611815411481, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Atsuko Maeda), person.birth_day),person.death_day))", "score": -0.37031601752823917, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), movie.runtime),person.death_day))", "score": -0.38433066393918125, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Atsuko Maeda), person.death_day),person.death_day))", "score": -0.39572821940964786, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_place),person.death_day))", "score": -0.43388492252415745, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),person.name))", "score": -0.48851256455964176, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.name))", "score": -0.5139247664410505, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Atsuko Maeda), movie.runtime),person.death_day))", "score": -0.525097701807681, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Atsuko Maeda), person.birth_place),person.death_day))", "score": -0.5746519603926572, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),person.birth_day))", "score": -0.5769500025708112, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),person.birth_place))", "score": -0.593357909579936, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.birth_day))", "score": -0.6023622044522199, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.birth_day),movie.vote_count))", "score": -0.6083243974644574, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}, {"orig_question": "Is Atsuko Maeda still alive?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_day),person.birth_place))", "score": -0.6187701114613446, "correct_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Atsuko Maeda), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.15107580235859916, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.18580296823489223, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.18926174810506555, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.261367548179799, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.2951156206375025, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.3077865907261484, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_average)", "score": -0.310866997998357, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.runtime)", "score": -0.32027848325199343, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.runtime)", "score": -0.3237372631221668, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.3365662272060124, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.3548057472744079, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3705018897550496, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.vote_average)", "score": -0.38656349711613586, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.vote_average)", "score": -0.3900222769863092, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1920-05-11), movie.id),movie.popularity)", "score": -0.3957858681294601, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)", "score": -0.02828156967819989, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,6.4), movie.id),movie.budget)", "score": -0.37856763667871, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.id),movie.budget)", "score": -0.6065847718699897, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,6.4), movie.id),movie.budget)", "score": -0.6326476874503743, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<,6.4),movie.budget)", "score": -0.6886186734126644, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.4), movie.id),movie.budget)", "score": -0.7216810824750153, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.release_date)", "score": -0.8028781259300234, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,6.4), movie.id),movie.budget)", "score": -0.8516219227144277, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget))", "score": -0.8648265071242349, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.title)", "score": -0.8701860642991511, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.revenue)", "score": -0.8789805356596164, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.vote_count)", "score": -0.8984311598939365, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.release_date),movie.budget)", "score": -0.9040464429745699, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget)", "score": -0.9237632630163862, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}, {"orig_question": "What is the average budget of the movies with a vote average smaller than 6.4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,6.4), movie.id),movie.budget)", "score": -0.9768113398319765, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.059897495571482356, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.293587),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18845947935980023, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.22902350659072976, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23424812664382466, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2810027969317153, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2974247597068489, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.3199024765077567, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.32137779732223287, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.32641653420069255, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.36899437370213634, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.376447866338772, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3779159550853185, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),movie.budget))", "score": -0.3993529395141884, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.42002865447989807, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,!=,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4307303746969066, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)", "score": -0.031282496493358986, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,<,2), movie.id),movie.runtime)", "score": -0.5683249294153759, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,2), movie.id),movie.runtime)", "score": -0.6050943956508875, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,2), movie.id),movie.runtime)", "score": -0.6305378976731005, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,2), movie.id),movie.runtime)", "score": -0.6879038136366624, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.id),movie.vote_average,<,2), movie.id),movie.runtime)", "score": -0.710526546304743, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,2), movie.id),movie.runtime)", "score": -0.7123588564912045, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,2), movie.id),movie.runtime)", "score": -0.7899360984716657, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.runtime),movie.runtime)", "score": -0.8073398717337438, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,2), movie.id),movie.runtime)", "score": -0.8520384229874557, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,2), movie.id),movie.runtime)", "score": -0.8748705785465196, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.vote_average)", "score": -0.8917621426502997, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),person.birth_day)", "score": -0.9160094839582172, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,2), movie.id),movie.runtime)", "score": -0.9411733278908364, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}, {"orig_question": "What is the total runtime of all movies with average vote less than 2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,<,2), movie.id),movie.runtime)", "score": -0.9766938844723417, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,company.id),movie.vote_count,<=,150), company.name),company.name))", "score": -0.26160256391625836, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150), company.name),company.name))", "score": -0.3023308838581142, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.oscar_id,company.id),movie.id,oscar_nominee.movie_id),oscar.number,<=,150), company.name),company.name))", "score": -0.30973305650474736, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,oscar_nominee.oscar_id),movie.vote_count,<=,150), company.name),company.name))", "score": -0.30982370316117147, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,company.id),oscar.number,<=,150), company.name),company.name))", "score": -0.311538311944905, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.number,<=,150), company.name),company.name))", "score": -0.31695923393795433, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,special achievement award (visual effects)), company.name),company.name))", "score": -0.32381110591451057, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,production_company.movie_id),movie.vote_count,<=,150), company.name),company.name))", "score": -0.32527976464214453, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id),oscar.number,<=,150), company.name),company.name))", "score": -0.32908995961251547, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),oscar.number,<=,150), company.name),company.name))", "score": -0.33248161720304176, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,150), company.name),company.name))", "score": -0.33982509783686593, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.oscar_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<=,150), company.name),company.name))", "score": -0.3417566283777072, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.person_id,company.id),movie.id,oscar_nominee.movie_id),oscar.number,<=,150), company.name),company.name))", "score": -0.34840497308048146, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,company.id),movie.vote_count,=,150), company.name),company.name))", "score": -0.34843933980633646, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}, {"orig_question": "Is there any company who was involved in a movie which was oscar nomineed and has a vote count less than or equal 150 in the oscar sub category special achievement award (visual effects)?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id),movie.title,<=,special achievement award (visual effects)),oscar.number,=,150), company.name),company.name))", "score": -0.3839105369793639, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special achievement award (visual effects)),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count,<=,150),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
