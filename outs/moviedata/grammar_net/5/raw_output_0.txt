{"index": 0, "beams": [{"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.08658681214657027, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.17252074419526356, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.26875982628352496, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.305123802795615, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3388807789960983, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3546937583322182, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.35487152881647066, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.35600338726754266, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36218482370607696, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36391733729412945, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3699258663840054, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.37615442812945743, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3779456224279091, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.38939596529814, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3910577256996271, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.07143808338787928, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.18412738211051413, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.2600011550625389, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.2842822851272203, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.31237598295575086, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.3794319929600864, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(production_company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.3933009023922752, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.4004693001731641, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.name,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.40495443638433437, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4098376161847345, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.4277356147377426, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.movie_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.42883709087771726, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.43349863016029766, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(getData(company),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4470380722062536, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.budget)", "score": -0.45845744047841597, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.11635463097867592, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.16099504270754686, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.2532287893172312, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.29786920104610215, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.31535504133029163, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.32558391628831385, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.33539451830751543, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.number))", "score": -0.335462848813534, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.runtime))", "score": -0.35089423745203696, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.3599954530591626, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),person.name))", "score": -0.361743512780308, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3672636022781232, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3702243280171848, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.3800349300363864, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.number))", "score": -0.38010326054240495, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),cast.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.31042037070117545, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.32665799977646026, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3350332285455958, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3561269776625226, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.363105621880538, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3781171379426923, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3789427179735156, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3791321628257679, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3798469161461334, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3812007195773223, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38210491774994015, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3862304105358387, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38713462365340706, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.388488427084596, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38939262525721385, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.budget),movie.budget))", "score": -0.15965356006563525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,The Last Legion),movie.budget),movie.budget))", "score": -0.3936501916432462, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.revenue),movie.budget))", "score": -0.46155560276747565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.vote_count),movie.budget))", "score": -0.5328247573161207, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,<=,The Last Legion),movie.budget),movie.budget))", "score": -0.5337783655086241, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.5583024900142108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,The Last Legion),movie.budget),movie.budget))", "score": -0.5643044289136014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.5848215310471055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.revenue),movie.budget))", "score": -0.600307747119639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.6029641619932362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget),movie.budget))", "score": -0.6139271324788245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),getData(movie),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.6213776311127283, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.title),movie.budget))", "score": -0.625462236621388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.629483203026131, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.6395127598163484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.26496253226320504, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.2728167288447521, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),oscar.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.29042657765620244, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.31300424364839696, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3381800615957826, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3479903374551469, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.35564082420353793, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.36302328440506804, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3640013733603586, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3708390698299997, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.37202414728198613, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),country.iso_3166_1,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3725931235469495, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.person_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.37363772921892485, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.37496115034659516, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.4006822753824978, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.030392868085797428, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.21355217323322803, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.36216362542092495, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(has_keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3670160552772136, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,497), keyword.name),keyword.name))", "score": -0.38729158328848784, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,production_company.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3905867194526727, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4049043256054755, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.movie_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.41093080882188215, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), oscar.sub_category),keyword.name))", "score": -0.4116568838547328, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42012506155856166, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(company),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4231069657285977, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42714785457687615, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.keyword_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42805905775669173, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.movie_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42994442889005674, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),person.death_place))", "score": -0.442868883389626, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.16070908680558205, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.18020404859271366, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.4536732453852892, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.49667335937556345, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.5345574570819736, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.5451466476806672, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))", "score": -0.592938629197306, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6242315201890056, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6246101974814988, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6273230257798653, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.birth_place))", "score": -0.6334298861474963, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6483400408025166, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6510528990043397, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.birth_place))", "score": -0.667539878282696, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.gender))", "score": -0.6831145719625056, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.057011377353905934, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))", "score": -0.1193249333603033, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,nl), country.name),country.name))", "score": -0.254081339973086, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.27224011354232863, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,nl), country.name),country.name))", "score": -0.3164783369591384, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,nl),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.35375576196710273, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,nl),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38629804055137296, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), movie.status),country.name))", "score": -0.39421743012445143, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4223676396508012, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),movie.status))", "score": -0.42903504614589727, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4343103818038995, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),person.birth_place))", "score": -0.4390770078867219, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.44783599158428183, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4542606552470257, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),person.gender))", "score": -0.454479051266416, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.35706330427593413, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.35764883485061677, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.3854633489587236, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.38630025251028555, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.3868857830849682, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.38938707430508707, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3899726048797697, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.395859265487576, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.39644479606225863, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.41602015926082986, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar.id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.41862396164347926, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.4602134908852368, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),filter(merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),person.death_day,>,40),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),None))", "score": -0.467728913542542, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.4695987309645062, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),filter(merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),person.death_day,>,40),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),None))", "score": -0.48223186636562465, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.11798550336970948, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.30423917024745606, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.3152575805725064, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.48244664221419953, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.48363189726660494, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.4936594642640557, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.id))", "score": -0.4996402576507535, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.popularity))", "score": -0.5760848201753106, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.vote_average))", "score": -0.6282888665737119, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.6799131311418023, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.6909315414668527, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6995320969435852, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.title))", "score": -0.7059354796947446, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.original_language))", "score": -0.7170187249721494, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.7441354277689243, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.012683476406891714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.5287645720800356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.6269192447343812, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.6673050446825073, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,48000000), movie.original_language),movie.original_language))", "score": -0.6815554165204958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.revenue))", "score": -0.73330455258656, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.original_language),movie.original_language))", "score": -0.7365112566312746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,48000000), movie.original_language),movie.original_language))", "score": -0.7658906378474057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,48000000), movie.original_language),movie.original_language))", "score": -0.7949868836130918, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.7959713735308469, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,48000000), movie.original_language),movie.original_language))", "score": -0.7971611418452085, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,48000000), movie.original_language),movie.original_language))", "score": -0.8251185812678159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.vote_average),movie.original_language))", "score": -0.8422746410051332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.8424119105020509, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,48000000), movie.original_language),movie.original_language))", "score": -0.849632123919946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.06192949040626386, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,No Language), movie.id),movie.budget)", "score": -0.21936576911079045, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.23643609928615786, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.44230849702113934, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5491627528400532, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5697732287239133, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.63255704727623, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,No Language), movie.id),movie.budget)", "score": -0.6433303420079826, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.budget),movie.budget)", "score": -0.6573440076326834, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.6584319574135024, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),oscar.number)", "score": -0.6625421278789844, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.6635909138035765, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.vote_count)", "score": -0.6774867725226636, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.6823867854836022, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),person.death_day)", "score": -0.6901386150573459, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.09121434111148119, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.12745688576251268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.5110959457233548, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6450419258525661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6462894892044122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6734122610917673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6746598244436134, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.691616528599765, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.692864091951611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6982389456291392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7023347867781189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7028891387348158, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.703582350129965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7422360380878672, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7784785827388987, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))", "score": -0.06721671945524577, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.id),movie.popularity)", "score": -0.33504830357804166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,5500000), movie.popularity),movie.popularity))", "score": -0.586971609342072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.popularity),movie.popularity))", "score": -0.6564120349485165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity)", "score": -0.6964816504161885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,5500000), movie.popularity),movie.popularity))", "score": -0.7330503747343755, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,5500000), movie.popularity),movie.popularity))", "score": -0.7665112909871823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,5500000), movie.popularity),movie.popularity))", "score": -0.7737271484929806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.release_date))", "score": -0.7788399998808018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,5500000), movie.popularity),movie.popularity))", "score": -0.7829165146231389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.status))", "score": -0.8328432385587803, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,5500000),movie.popularity)", "score": -0.8392654414649555, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.vote_average),movie.popularity))", "score": -0.8509727831242344, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,5500000), movie.popularity),movie.popularity))", "score": -0.853758476279836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.budget,=,5500000),movie.popularity)", "score": -0.8663709859415377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.023414451481355455, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.2825752345776883, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.3511884019128502, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.3678254624830157, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),production_company.company_id))", "score": -0.3741415332657361, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.39186966852263744, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),company.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.39968735068595634, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40638210632325783, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40796283976215786, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.4154953640570884, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.42656021188160753, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.id),company.name))", "score": -0.42741893103392503, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4343849054079441, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.id))", "score": -0.4373502283881424, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4433381155176017, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.10363114271803957, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.13708875146847654, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.15879265839349951, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.23483394488404366, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.25635611708169603, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2673586878287031, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.29028975199106083, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.2907144465741254, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3228145090311488, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(has_genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3450272207190457, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.37117955422589516, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3787463667308745, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3821801098857874, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3961869612187927, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.41910114424004513, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.10323169485314743, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.16966198580543423, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.18124312236575674, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.2463372806532006, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.27863713108552696, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.28175183011360544, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_keyword),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.30157601489222025, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.31809616909497207, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.32518406489660573, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.32829876392468427, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3553653134888153, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3607102348167318, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.38033219456025824, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),country.iso_3166_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.41024985370744693, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.41735986126466496, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.045826871845365776, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.2242208863651382, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.runtime),movie.runtime)", "score": -0.23844968588029106, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.runtime)", "score": -0.29621337445360124, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3594431713104704, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.36999170994674485, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.release_date),movie.runtime)", "score": -0.37939921552727685, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.name,production_company.company_id), movie.id),movie.runtime)", "score": -0.4024167728289214, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4189812528508556, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(oscar_nominee),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.42647856439642196, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4338518407470248, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,company.name), movie.id),movie.runtime)", "score": -0.43679086784514, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.runtime),movie.runtime)", "score": -0.4423309624634928, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.id),movie.runtime)", "score": -0.45363639936498873, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4561442605505648, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.10790901970729655, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.15474671085117706, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.20763278810905317, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.22386771718675352, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.2544704792529337, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.31406568275809743, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,<,260095987), genre.name),genre.name))", "score": -0.3487434198233082, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_country.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.352585076199336, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),language.iso_639_1,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.35694203198636465, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.36250924291164194, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_average,>,Italy), genre.name),genre.name))", "score": -0.3650074378172805, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), person.death_place),genre.name))", "score": -0.381565612238108, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.38173484282148057, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.39016062268454954, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.39260737611694174, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.22292328475981074, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3080887313253369, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1), country.name),country.name))", "score": -0.31018617623008304, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<,1934-03-28), country.name),country.name))", "score": -0.31795141968461654, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32492165727833444, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.34967487572959594, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.35245879808537506, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.36319457901420044, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.36541093929483104, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.36578676767037427, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3660655353899261, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_day,<,1934-03-28), country.name),country.name))", "score": -0.37561506861616056, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),movie.release_date,<,1934-03-28), country.name),country.name))", "score": -0.3778314360466462, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_place,<=,1934-03-28), country.name),country.name))", "score": -0.37879924042699165, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.38214588882337547, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.16915494048260976, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.22790088974636416, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.23733962079787038, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.25140091815990917, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.25523317985404986, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2593480720277265, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.movie_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2825090355111297, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.runtime,>,2013-05-09), movie.id),movie.popularity)", "score": -0.29574907755157254, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3101468674236636, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3139791291178043, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.31809402129148084, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3195855984751698, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.32341785052840627, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3275327427020829, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.36769367609229286, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.1951007786556147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.23232893826207146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.35471728624543175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.39341079065343365, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.42202723206719384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4306389502598904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.46221235574921593, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>,1984-05-01),movie.revenue), movie.revenue))", "score": -0.4682824196643196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,!=,1984-05-01),movie.revenue), movie.revenue))", "score": -0.47284204832976684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5187586433603428, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5530272982432507, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5559868029667996, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5767607110901736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5772242433740757, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>=,1984-05-01),movie.revenue), movie.revenue))", "score": -0.6324490159167908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.08603467305511003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime)", "score": -0.2757298445594433, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2012-04-19), movie.runtime),movie.runtime))", "score": -0.5334460593512631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2012-04-19), movie.runtime),movie.runtime))", "score": -0.538808689241705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2012-04-19), movie.id),movie.runtime)", "score": -0.6386992913525397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.release_date))", "score": -0.7211981483487762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.title))", "score": -0.7360988923101104, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.7714410075204796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8212087401407189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.id))", "score": -0.8498837419538177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,2012-04-19), movie.id),movie.runtime)", "score": -0.8585874447020945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.vote_average),movie.runtime))", "score": -0.8769771628067247, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime))", "score": -0.8778757028267137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime)", "score": -0.9035088053938239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id))", "score": -0.9143803449065641, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.11090049664926482, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.22901703502757928, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.25707022085058734, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.28171618910043894, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.29374644522719107, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.30976937492344697, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.31607949407249714, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3209181256174857, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3420110717313581, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3489713114404938, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3627684761721684, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.36434412057666415, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.37175426372920933, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3736172976185752, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,production_country.iso_3166_1),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3897839590948085, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.02622747748500842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.317334524834223, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.37516998454339046, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7281192164064123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_average))", "score": -0.7467961437196209, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.title))", "score": -0.765127373406358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_average),movie.vote_count))", "score": -0.766015195649743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7795040826440527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.title),movie.vote_count))", "score": -0.7905515072761773, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.794843925641544, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7970306412444188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8183219567999913, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8425344447732641, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8515100018248631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.903507629658634, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.09751199866856934, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.18967966452427035, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.25858583874928753, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.28087202021435453, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.2898599111211, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.29564061514171314, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2960731333262006, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.33898926910085064, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3403487640248735, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.3494802515389581, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.35109723760468337, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.35933640908470277, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.359590523754461, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.number)", "score": -0.3943851141804982, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),crew.movie_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.4088711401523311, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.03171419045975199, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.4150526465018629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.5493897889860776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.id),movie.original_language)", "score": -0.6227985223623534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6273368203183054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6425715924342512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6469587327082991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), language.name),movie.original_language))", "score": -0.6732455689561903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.7637426459332346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.revenue)", "score": -0.7754082268959553, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.vote_average),movie.original_language))", "score": -0.7766578395021497, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),company.name,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.7996267319758772, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.title))", "score": -0.8092472509815707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.8154306824870609, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.popularity),movie.original_language))", "score": -0.8215273220193922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.02697569782321807, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.name),person.birth_day))", "score": -0.47533417398517486, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.gender),person.birth_day))", "score": -0.5622248416621005, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.5828240928094601, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.name))", "score": -0.5936248390789842, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.603901427690289, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6227092561166501, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_place))", "score": -0.623504528295598, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_place),person.birth_day))", "score": -0.6237114434916293, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.death_day))", "score": -0.6335224597569322, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.gender))", "score": -0.6372783868428087, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6630587992112851, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),crew.person_id))", "score": -0.6789445369358873, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.death_day),person.birth_day))", "score": -0.7631247406679904, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.id))", "score": -0.7767587392445421, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.13778438399451137, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.15596806020375553, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.15730487319086156, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.16204315105904657, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2500425096584092, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.25324923136399136, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2648230837431193, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.28649182276461277, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2924761625837857, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.34452586990183265, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.category,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3459495847021259, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3599953266097657, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.year,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.36711000659668913, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,), movie.title),movie.title)", "score": -0.3707969198108811, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,London, England,), movie.title),movie.title))", "score": -0.3850021578643373, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))", "score": -0.039716654071526136, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,32.8412), movie.status),movie.status))", "score": -0.3841828867662116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.title),movie.status))", "score": -0.4246445806566044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.title))", "score": -0.45752262285532197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))", "score": -0.5816417343703506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), country.name),movie.status))", "score": -0.6080519469323917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.popularity))", "score": -0.6265019696074887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,32.8412), movie.status),movie.status))", "score": -0.6432740554082557, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.original_language),movie.status))", "score": -0.6486003311219974, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.vote_average),movie.status))", "score": -0.6672170074525638, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.release_date))", "score": -0.6758588474112912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,32.8412), movie.status),movie.status))", "score": -0.680143700526969, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.sub_category),movie.status))", "score": -0.6806459935251041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.category),movie.status))", "score": -0.6986133964601322, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.popularity),movie.status))", "score": -0.6999744685235783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.17523675373266434, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.1978088315595638, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2099922522449818, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.21569086827880593, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.2565182127206416, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2592578825631018, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.homepage,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.26304861307554256, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.28627713975883157, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.29899177056325493, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3155062225309457, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.3219242847211755, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),keyword.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3379035660231557, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,>,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.34965150280000923, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_place,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.35015747150187854, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),oscar.sub_category,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3567753767008371, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.1702617601593711, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.20580690485392222, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.2097663456573861, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.20976965940339895, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.2900442212780984, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.31600626502162543, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.3177941732862697, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.31779748703228256, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.32273341751560586, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.3255893659726495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),movie.revenue))", "score": -0.3350073776921654, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.35155140971617654, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.35827856221015697, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),movie.revenue))", "score": -0.3705525223867165, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), language.name),person.name))", "score": -0.3737302342525633, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.02763164155488232, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,7.2), movie.id),movie.runtime)", "score": -0.4819235581297237, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,7.2), movie.id),movie.runtime)", "score": -0.5108011424704049, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,7.2), movie.id),movie.runtime)", "score": -0.6503841829279742, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.6800510331458286, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,7.2), movie.id),movie.runtime)", "score": -0.7040854410236365, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.7127016735660628, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.7250674655841843, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.7272235860094748, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,=,7.2), movie.id),movie.runtime)", "score": -0.7278732113792937, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,7.2), movie.id),movie.runtime)", "score": -0.8013743469195348, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.8123247853582456, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,7.2), movie.id),movie.runtime)", "score": -0.8312881010312992, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,7.2),movie.runtime)", "score": -0.9169191074725523, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,7.2),movie.runtime)", "score": -0.9373067664730476, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.03990852419519797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.24118929874384776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.42292393138818296, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.42499164244806253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.4458668556945266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.44793456675440624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.5060692876510453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.5081369987109249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.529012211957389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.5310799230172686, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.556449438627231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5585171496871105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5585604415858479, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5606281526457276, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,81), movie.original_language),movie.original_language))", "score": -0.5758069134899415, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.028431216269382276, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.vote_average))", "score": -0.42264374160731677, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.vote_average))", "score": -0.47628348135913257, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.title),movie.vote_average))", "score": -0.5963791217800463, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.6563572492595995, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.vote_average))", "score": -0.665007134914049, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.runtime))", "score": -0.7245987244095886, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.vote_average))", "score": -0.751265188693651, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7629759825213114, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.status))", "score": -0.813348788782605, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_count))", "score": -0.8150536008324707, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.popularity))", "score": -0.8316781111207092, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8424350536806742, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),country.name,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8543348825915018, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.original_language),movie.vote_average))", "score": -0.8569202628132189, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.04458258500896797, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.21092795238801287, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3014720879091682, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.release_date,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3087913126720644, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,person.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3182675320960569, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3229887849705882, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3862029056463138, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.38642502370450305, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.39425468328026764, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.39697002240234686, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,person.birth_day),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.427222476859888, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.movie_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4380574558341995, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,>,1962-03-17), movie.id),movie.runtime)", "score": -0.4399661271734111, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.4488215313455696, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4549567847337952, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.13253624238133427, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.13980526387313702, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.sub_category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.2512941257944364, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.26696808013999523, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.30830559597365575, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.31187652657685666, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.32268034264823897, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3401976075003217, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),company.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.34380365426438964, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3457673932205104, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),country.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.34586191583196263, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),country.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36598177941161947, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),keyword.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3715147938284588, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3741466000945944, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),crew.movie_id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.4185807599740823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.027196746465051547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1965-03-02),movie.runtime), movie.runtime))", "score": -0.6354057341231965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7252903518092353, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.release_date))", "score": -0.7516455787990708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.780747168668313, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7910450035415124, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),person.birth_day))", "score": -0.8028538960788865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), person.birth_day),movie.runtime))", "score": -0.8338132046337705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8522181113658007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), oscar.year),movie.runtime))", "score": -0.8587806366558652, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8804058631358203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.status))", "score": -0.8841341275547165, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.popularity),movie.runtime))", "score": -0.9114474199886899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.release_date),movie.runtime))", "score": -0.9290737055416685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),oscar.year))", "score": -0.9290779966686387, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.number))", "score": -0.1188792670781442, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.number))", "score": -0.14299511570849419, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.number))", "score": -0.1838192527277185, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.number))", "score": -0.20880688901315891, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.sub_category),oscar.number))", "score": -0.2329227376435089, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.number),oscar.number))", "score": -0.27374687466273323, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.category))", "score": -0.2797921906885111, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.category))", "score": -0.303908039318861, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), movie.title),oscar.number))", "score": -0.33714257714284884, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.category))", "score": -0.3447321763380854, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.sub_category))", "score": -0.34548895972897786, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.id),oscar.number))", "score": -0.3571798955335155, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), company.name),oscar.number))", "score": -0.36759505241353896, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.sub_category))", "score": -0.36960480835932785, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.category))", "score": -0.36971981262352577, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.3316496311163064, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.36334085449925624, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.3736125229333993, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.44128707036725245, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1957-04-28),person.name), person.name))", "score": -0.45166352376691066, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.5190753334900364, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1957-04-28), person.name),person.name))", "score": -0.5322505135991378, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.5355799341341481, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.5395769471069798, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,<,1957-04-28),person.name), person.name))", "score": -0.5536803601717111, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,1957-04-28),person.name), person.name))", "score": -0.6015628872846719, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1957-04-28), person.name),person.name))", "score": -0.6126952672348125, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.6219464935129508, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,1957-04-28),person.name), person.name))", "score": -0.6332540845905896, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,>=,1957-04-28),person.name), person.name))", "score": -0.6435257530247327, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.03456015029661642, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2610634507316776, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.28651360918926777, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.3126753714746583, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3599664682425686, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.38977153312265966, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(genre),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.39477847771199426, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,has_genre.movie_id), person.death_place),person.death_place))", "score": -0.4017148408110379, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.budget),person.death_place))", "score": -0.4033010408739952, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4361306727427343, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4382788987212467, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),has_genre.genre_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.44786022304699574, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.451700369021578, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.45623032140100556, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.revenue),person.death_place))", "score": -0.4608749056893792, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.vote_count))", "score": -0.47941043633181835, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),person.name))", "score": -0.4955613877173164, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.original_language))", "score": -0.5095474387999275, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5302690023772775, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5314427772884956, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5352762320877649, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), keyword.name),movie.vote_count))", "score": -0.5355811383124092, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.536450006998983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.5734776631818032, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.5746514380930213, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),language.name))", "score": -0.5784848928922905, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),language.name))", "score": -0.5796586678035087, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5857775396874737, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5869513145986919, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5907847693979611, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.1575983692599895, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.15798589277739084, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.18287908856128832, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.20584880372643108, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.29885788119888274, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.29924540471628414, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2996887455069214, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3012892535660061, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.31748617356533154, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3193999303220165, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3210004383811013, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.32324634259509766, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.32413858121837313, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3429575515124534, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.3471082963835159, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.16838254379941253, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.22464728858207658, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.23875978194169395, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2613640555761406, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.29502452672435797, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.29860475462243297, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.31182409017192714, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,<,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3231948778345695, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3244806285763902, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32484282863603514, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3305613496573042, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.gender,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.34949313614189464, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),person.gender,<,f), person.birth_day),person.birth_day))", "score": -0.35463413784944814, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.36644706371007907, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.371727712353991, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.033452685122028925, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.death_place),person.birth_place))", "score": -0.48812090246065054, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.508925374262617, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.death_place))", "score": -0.5174683343066135, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5740466896822909, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.gender),person.birth_place))", "score": -0.6288497635541717, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.name),person.birth_place))", "score": -0.641974348705844, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.6649798463477055, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.6669879217079142, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,>,1942-11-12),person.birth_place), person.birth_place))", "score": -0.6704135828040307, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),company.name))", "score": -0.6859066795004765, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),country.name))", "score": -0.6972809742583195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.name))", "score": -0.7057999085081974, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_day))", "score": -0.7104314278258244, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1942-11-12), person.birth_place),person.birth_place))", "score": -0.7213979620864848, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.219293975139822, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.27971461872618414, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.28182693162816147, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.2852791304898965, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.29106599720735604, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.29663050897106835, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3252618210458917, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.330826332809604, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.340824933577327, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3412773960986165, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3412945850164302, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3419452223326964, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3468591001938454, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3473497314739789, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.35247956944616887, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.revenue),movie.revenue))", "score": -0.08450212531170109, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.3380790000446723, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))", "score": -0.3880937883295701, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.44553478280296954, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.revenue,<=,1910),movie.revenue),movie.revenue))", "score": -0.4850036745556281, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.5386795204994341, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,1910),movie.revenue),movie.revenue))", "score": -0.5456023431979702, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.popularity),movie.revenue))", "score": -0.5472806879915879, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_count),movie.revenue))", "score": -0.5758590289988206, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.revenue))", "score": -0.5910501282530943, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.5941598034732222, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.revenue))", "score": -0.6005053265822783, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,<=,1910),movie.revenue),movie.revenue))", "score": -0.606050068665354, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,1910),movie.revenue),movie.revenue))", "score": -0.61399891149631, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.6416706630625413, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.29193427153022644, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.30807736531284485, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3099281955864793, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3350461898202055, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.34232695192825496, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(has_genre),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3492882969297581, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),keyword.id,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3648855471154178, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),language.iso_639_1,production_company.company_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.36675459315335784, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3800085882873206, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.3854388702182341, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.38712551731193484, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),language.iso_639_1,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.39483041804667135, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),keyword.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.40548926650158645, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.40603409972930343, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.4118791932845962, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.09336633325438015, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_average))", "score": -0.3488022396049928, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_count))", "score": -0.38895741195301525, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_day))", "score": -0.3961359271488618, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.year))", "score": -0.4091422864876222, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.revenue))", "score": -0.42675492257694714, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.number))", "score": -0.4745498606644105, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),language.name))", "score": -0.5371958920441102, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1993-12-17), person.name),person.name))", "score": -0.5622289143211674, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_place))", "score": -0.5780358025513124, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), movie.vote_average),person.name))", "score": -0.6453008190437686, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),keyword.name))", "score": -0.6523053953133058, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1993-12-17), person.name),person.name))", "score": -0.656697850645287, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.runtime))", "score": -0.671913535305066, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.6759290058107581, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.05583375184950021, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.budget),movie.budget)", "score": -0.19806196936751058, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.2061026299643488, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.259228819651672, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.34352006236593785, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3595691037731341, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.38569741507789784, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist),movie.budget,=,crime novelist), movie.id),movie.budget)", "score": -0.39408735005428625, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.399046228049319, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.budget)", "score": -0.4233564081565857, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.4356894806487095, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.name,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.447754086983843, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.45334925252279373, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(has_keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.46554188858167167, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.4658381548442185, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.039033557005432824, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23230696828990113, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,187),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30249498724726015, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,187), genre.name),genre.name))", "score": -0.3249354811959825, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35821122581669385, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36322494125467164, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.364694916066135, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.37306863698635195, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37661661580615713, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<=,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37764389672888815, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), person.death_place),genre.name))", "score": -0.3835648894104585, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.39120031219198836, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.40239823081399956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(person),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4129266599112471, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41856694441494663, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)", "score": -0.022516813161521466, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1983-07-29), movie.id),movie.budget)", "score": -0.5775113561513056, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.revenue)", "score": -0.6000621050978957, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.budget),movie.budget)", "score": -0.6216847817212565, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,1983-07-29), movie.id),movie.budget)", "score": -0.6248507927551017, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(filter(getData(movie),movie.release_date,<,1983-07-29),movie.budget)", "score": -0.657824710477963, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.vote_count)", "score": -0.7937202744995175, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.release_date)", "score": -0.8007738690714523, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1983-07-29), movie.id),movie.budget)", "score": -0.8380328449787235, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1983-07-29), movie.id),movie.budget)", "score": -0.8461334167449384, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),person.death_day)", "score": -0.8612454862034125, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.runtime)", "score": -0.8809842650533206, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.release_date),movie.budget)", "score": -0.881426201095403, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,<,1983-07-29), movie.id),movie.budget)", "score": -0.8869545281843055, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),oscar_nominee.movie_id)", "score": -0.9135197739214527, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.0736521081707906, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_place),person.birth_day))", "score": -0.29384865329484455, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.name),person.birth_day))", "score": -0.3087471918843221, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.gender),person.birth_day))", "score": -0.5061145620129537, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5340992575220298, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_place))", "score": -0.5627848636067938, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), oscar.year),person.birth_day))", "score": -0.5855219857476186, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5986498957208823, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.status),person.birth_day))", "score": -0.6309755937836599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.death_day))", "score": -0.6379507910169195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.name))", "score": -0.6392479669011664, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.6413202648691367, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.runtime),person.birth_day))", "score": -0.6606790320656728, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), crew.person_id),person.birth_day))", "score": -0.6701397197030019, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), oscar.category),person.birth_day))", "score": -0.676619757869048, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.0847865658433875, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.18948038840608206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.39081232073417416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.41654918702261057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),country.name))", "score": -0.4859236719639739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.4958180252897825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5212430095853051, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.5298360480763952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),genre.name))", "score": -0.5542268397839507, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5710489881780634, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),keyword.name))", "score": -0.5991928222210845, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), keyword.name),movie.original_language))", "score": -0.6207941582979402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.6348417526320036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),genre.name))", "score": -0.6411365266159003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.656429540082172, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.17553797466589927, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2132107767282588, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2502091551491156, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.259803565253447, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.27279328880105547, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.27786330627692646, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.28275300070568327, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.29152471729235446, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.33447474573666336, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.number,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3359630155230944, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3389991415551288, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3410427363386659, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.35110721915713494, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.36106694126977895, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3621289019684823, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))", "score": -0.020742949986015446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,105000000), movie.original_language),movie.original_language))", "score": -0.4404689711082028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,105000000), movie.original_language),movie.original_language))", "score": -0.5796307366836118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), language.name),movie.original_language))", "score": -0.6629677512246417, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,105000000), movie.original_language),movie.original_language))", "score": -0.7678528000396909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),language.name))", "score": -0.7728500003722729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.vote_average),movie.original_language))", "score": -0.7767412163811969, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,105000000), movie.original_language),movie.original_language))", "score": -0.7818303276580991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,105000000), movie.original_language),movie.original_language))", "score": -0.8035631817328976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,105000000), movie.original_language),movie.original_language))", "score": -0.8147972394508542, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,105000000), movie.original_language),movie.original_language))", "score": -0.8180835884559201, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,105000000), movie.original_language),movie.original_language))", "score": -0.8234611321968259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language)", "score": -0.8235575233810424, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.title))", "score": -0.8273355598357739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.title),movie.original_language))", "score": -0.8340780236321734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.09250259775765572, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.11157406120863167, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.21413116386061956, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.2282561677079387, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.22870052056447782, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.30910163273808244, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.36066845939612796, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.39044679772869734, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.420609262207444, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.42919454189733175, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,!=,Cambodia), movie.title),movie.title))", "score": -0.4330519522315715, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.birth_place,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4349545586842362, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),person.birth_place,!=,Cambodia), movie.title),movie.title))", "score": -0.43649651146935653, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Cambodia), movie.title),movie.title))", "score": -0.4374743803909943, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.iso_3166_1,!=,Cambodia), movie.title),movie.title))", "score": -0.4435241693370565, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.197725475372863, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.21565491014916915, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.2900552196224453, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.30798465439875145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.3514821981807472, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.4438119424303295, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5539985881914617, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5719280229677679, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6302430486102821, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6371606575121405, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.death_day))", "score": -0.646328332441044, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.653788313808036, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6550900922884466, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.death_day))", "score": -0.6642577672173502, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6805668925662758, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.14781493606809196, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18830849148140275, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18873484832134219, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.22922840373465295, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2698481118638211, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.29096464645984704, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3007754256847178, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.31076802411707133, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3143492410442872, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),language.iso_639_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33256828463674704, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3440079456707945, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id), country.name),country.name))", "score": -0.35007510894050586, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.35484279631915605, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.355269154128189, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.36453899162846215, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.16976042967144167, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.3060732124358765, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.3221218226462952, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.33088502045575297, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.name))", "score": -0.4317116452366463, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.4671978032201878, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.name))", "score": -0.47763773929182207, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.4832464134306065, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_place))", "score": -0.5033940313369385, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_place))", "score": -0.5221548316985718, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.birth_place),person.name))", "score": -0.5638953162342659, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.death_day))", "score": -0.5680244280010811, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.birth_day))", "score": -0.5840730382114998, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1963-11-10), person.death_place),person.name))", "score": -0.5875662261605612, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.name),person.name))", "score": -0.5928362360209576, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.28116560009219843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3264204124955866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3282643083652067, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3320709367029815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3330030502331137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.36874332848350666, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.376618375000728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.37846227087034806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.38168105347262327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3835249593100622, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_average,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3860849790593156, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.person_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.39849153303313956, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),getData(movie),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.40253785891641947, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.4323903046869107, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.title,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.4635784862783344, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.059408021727319654, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.12477209108062762, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.31574467649766413, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.343225132558231, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.3571770012678431, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.3693961941610302, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.38590389423952776, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.389436730553492, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.40552615289353344, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4113262351426963, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41739442441630625, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.43397519671569673, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(production_company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4340723951777742, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.434911129033379, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),movie.title,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.4421116738688461, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.03470550477823846, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.23554848263186012, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3030973563006247, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.342787044670515, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,production_company.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3526172802493684, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3701986815979196, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),person.death_place))", "score": -0.3729816380707529, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.38257483074619225, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.38567535223788957, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), person.death_place),genre.name))", "score": -0.39274671982206877, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3931821493153841, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.4177570100352578, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.41961871882986324, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),has_genre.genre_id))", "score": -0.4285424909246196, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,has_genre.movie_id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.4322704841234158, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.11987739143084462, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.1693591284926168, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.22919095694284775, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.24732956532028907, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.2606854403117933, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.2831251990884463, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.2919464308458737, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.29681130238206127, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3101671773735655, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3156752977359661, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.3326069361502185, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,=,War), company.name),company.name))", "score": -0.34987756457938496, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.35664313553931776, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),movie.title,=,War), company.name),company.name))", "score": -0.36329063796139593, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.369999010530822, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.1419756312673769, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.2075118463711985, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.2134915731038837, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.24787671176770845, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.28098092132124686, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.31939265360421526, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.vote_average,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3426824580078912, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.3494561080991858, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3509046936248304, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),spoken_language.iso_639_1,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3539661353134804, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.35530336595627293, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.revenue,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3677771907545444, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3725659208910786, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),person.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.38283381653744436, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.38670192501284845, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2772019041316157, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.birth_place),person.birth_place))", "score": -0.28914028595034663, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.3060313937782514, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.309224917310315, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.31475490398748107, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3184744301840001, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32810617038082784, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.33893740617198087, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3419853140892007, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3581040792048923, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.36434525533465956, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3741540888190967, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.39236049889740093, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),has_keyword.movie_id,movie.id), person.birth_place),person.birth_place))", "score": -0.39699186107280415, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.death_place),person.birth_place))", "score": -0.40220335283752, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.17128211424525638, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19799739102004116, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.21426909592097862, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.27550365519257247, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.28098099541309857, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.3286724778523765, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.345815484197926, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.35094675338650566, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.35206023658483876, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.357326590127667, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.365519947400973, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.3668132508515333, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.category),oscar.number)", "score": -0.37253076097271076, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3776620301612904, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.3821332802507398, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.04621017904418566, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,brain scan),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.24668108206747166, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.26430606782525107, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2682683461093626, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.keyword_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.30514966488462897, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),keyword.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.31649782984797054, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3351337385355067, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.33995302942551653, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3520921917774686, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(has_keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3821292296799159, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),oscar.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.40167600761416616, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.movie_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.414658631951258, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),oscar.sub_category,=,brain scan), movie.title),movie.title))", "score": -0.417090566144243, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.41969835550534573, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,=,brain scan), movie.title),movie.title))", "score": -0.42595226724635915, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2386087488754494, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.24168182970801916, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2572986918472459, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.26225435034641836, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2625867703960592, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.27393721677600824, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2743080260871307, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2831592947115268, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2907904734132874, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.30493554954793434, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.30876077258145196, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.31609269757561925, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3219448837878191, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,??????),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3267355538656783, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.333102031815504, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_count))", "score": -0.28318178663175786, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_count))", "score": -0.40145796546858037, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.release_date),movie.vote_count))", "score": -0.4447972179405042, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.budget),movie.vote_count))", "score": -0.4491844178191968, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_average),movie.vote_count))", "score": -0.4604072571746656, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_average))", "score": -0.4640729428283521, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_count),movie.vote_count))", "score": -0.49907961497228825, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.title), movie.id))", "score": -0.5187308802414918, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.vote_average), movie.id))", "score": -0.5221579088974977, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.title))", "score": -0.527034774517233, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.id),movie.vote_count))", "score": -0.5356486142627546, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.original_language),movie.vote_count))", "score": -0.5359756351463147, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.runtime), movie.id))", "score": -0.5608317866135621, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.release_date), movie.id))", "score": -0.577183665256598, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_average))", "score": -0.5823491216651746, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)", "score": -0.0388528619239778, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,136),movie.budget)", "score": -0.3501919382274859, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.budget),movie.budget)", "score": -0.7087070695035841, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.release_date),movie.budget)", "score": -0.7458244619781121, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,136), movie.id),movie.budget)", "score": -0.7682866966887257, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,136), movie.id),movie.budget)", "score": -0.7998051561461724, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,136), movie.id),movie.budget)", "score": -0.8991723912831594, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.revenue)", "score": -0.913600840042577, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,136),movie.budget)", "score": -0.9412194669555826, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.release_date)", "score": -0.963438325669481, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,136), movie.id),movie.budget)", "score": -0.9750244433279462, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,136), movie.id),movie.budget)", "score": -0.9977141481575933, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.vote_count)", "score": -1.0113958620566057, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),oscar.number)", "score": -1.0120719556151512, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,136), movie.id),movie.budget)", "score": -1.0207149673822296, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.16716775942768436, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.26359674979175907, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), person.death_place),genre.name))", "score": -0.2846019108983455, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.34139267491433745, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), person.death_place),genre.name))", "score": -0.38103090126242023, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.38196184398666827, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.38216232562044444, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.4071627919765888, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<,1994-04-10), genre.name),genre.name))", "score": -0.41304383353667795, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,!=,1994-04-10), genre.name),genre.name))", "score": -0.4536130026090087, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1994-04-10), genre.name),genre.name))", "score": -0.4538134842427849, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,1994-04-10), genre.name),genre.name))", "score": -0.47436010972399706, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1994-04-10), genre.name),genre.name))", "score": -0.5197399490716634, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), person.death_place),genre.name))", "score": -0.5245969434472499, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.5325338404811967, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.11345229593644035, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4594548709465016, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.46977986849378794, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.name), person.death_day))", "score": -0.4732342556817457, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.48224712645242107, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.name),person.death_day))", "score": -0.49347868205586565, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.5105374801678408, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.name))", "score": -0.5106376159710635, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.5463574791101564, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5497832663131703, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.birth_day), person.death_day))", "score": -0.5794487193925306, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5955216951442708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6324908800197591, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),movie.revenue))", "score": -0.6457811642212619, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.6625685923499987, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.2553974888869561, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.28888778906548396, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.title))", "score": -0.29174261313164607, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.budget)", "score": -0.3165049970722787, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.title))", "score": -0.3474869630881585, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.title))", "score": -0.43032859783852473, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.release_date))", "score": -0.44494455453241244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.release_date))", "score": -0.47843485471094027, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.budget),movie.title))", "score": -0.47846203070366755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.release_date))", "score": -0.4812896787771024, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.vote_average),movie.title))", "score": -0.5044912598677911, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.status),movie.title))", "score": -0.5167830489226617, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.release_date))", "score": -0.5370340287336148, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.5964666507788934, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.release_date))", "score": -0.619875663483981, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.17199687491018853, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.17245313524203207, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,genre.id), genre.name),genre.name))", "score": -0.17474814567264893, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.1971262408621218, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2079876574626167, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.21314929963004176, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.22501828128092724, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.22730293724881778, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22924518745036374, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24084445170489968, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24989511478816778, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2504716729915112, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.25787365945595236, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.28492406175373663, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.29874487186662596, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.11136433071806096, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_day))", "score": -0.40232136807753704, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.name))", "score": -0.40787495821132325, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.4373283699096646, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.death_day))", "score": -0.4526692327053752, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.4654063299240079, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.49526521711959504, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.5206050694691138, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.5260898783744778, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_place))", "score": -0.5765441354305949, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_place),person.name))", "score": -0.5768951937498059, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,Christopher J. Wood), person.birth_day),person.name))", "score": -0.6023117327755425, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_day),person.name))", "score": -0.609897927934071, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),oscar.year))", "score": -0.6133404966385569, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,Christopher J. Wood), person.name),person.name))", "score": -0.6139915898384061, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.14857943055004533, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.16223599594776997, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.21095256473036272, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.22460913012808736, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.22601601005867, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.23387928579136366, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2821439116688106, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.2900071874015043, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3625348820400029, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.year)", "score": -0.37576845898799416, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.year)", "score": -0.37619144743772753, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.3808578843993371, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.39451444979706174, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.39581149054704073, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.3960271564401192, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))", "score": -0.1894807548924291, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count))", "score": -0.23441627190550207, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_average))", "score": -0.2984255956216657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.title))", "score": -0.31461648211916327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_count))", "score": -0.3433611126347387, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_average))", "score": -0.37073641584356665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.runtime))", "score": -0.3808474795623624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.4156719328566396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.title))", "score": -0.42356132284839987, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.runtime))", "score": -0.489792320291599, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.title))", "score": -0.4958721430703008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_average))", "score": -0.5291747705741727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.runtime))", "score": -0.5621031405135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_count))", "score": -0.5741102875872457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.original_language))", "score": -0.6515732960506284, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.26460239870351393, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.271947197949734, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.29711535685875584, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.2987615197033095, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3043828473954073, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.30446015610497595, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.30610631894952955, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.31172764664162733, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.33127447785855146, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3342189112941885, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3549747009769407, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.popularity)", "score": -0.3794340516819183, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.popularity),movie.popularity)", "score": -0.3808013111070834, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.4000637800966111, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.4067518217737935, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))", "score": -0.009711290193081368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget))", "score": -0.6058909447820042, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.4), movie.budget),movie.budget))", "score": -0.6446693094403599, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.release_date))", "score": -0.672373920744576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.4), movie.budget),movie.budget))", "score": -0.684724822822318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,6.4), movie.budget),movie.budget))", "score": -0.7249098645479535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.title))", "score": -0.7415880263506551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.title),movie.budget))", "score": -0.8163640772763756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.original_language))", "score": -0.8289163411318441, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.release_date),movie.budget))", "score": -0.8306040441457299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.revenue))", "score": -0.8575856984316488, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), person.death_place),movie.budget))", "score": -0.90080371255317, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,6.4), movie.budget),movie.budget))", "score": -0.9139285312921857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.id))", "score": -0.9151209295450826, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.original_language),movie.budget))", "score": -0.9339355503980187, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))", "score": -0.027354269757779548, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,6), movie.vote_count),movie.vote_count))", "score": -0.32086911099395365, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6), movie.vote_count),movie.vote_count))", "score": -0.5302766719869396, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6), movie.vote_count),movie.vote_count))", "score": -0.5424506226590893, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6), movie.vote_count),movie.vote_count))", "score": -0.6162378350309154, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,6), movie.vote_count),movie.vote_count))", "score": -0.715648137502285, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.budget))", "score": -0.7664381963004416, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.budget),movie.vote_count))", "score": -0.7695693738096452, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.title),movie.vote_count))", "score": -0.7734144694441056, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.title))", "score": -0.7799664241065329, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,6), movie.vote_count),movie.vote_count))", "score": -0.7890002359672508, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_average),movie.vote_count))", "score": -0.8058893448942399, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,6), movie.vote_count),movie.vote_count))", "score": -0.8237915132231137, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,6), movie.vote_count),movie.vote_count))", "score": -0.8359654638952634, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_average))", "score": -0.8369516235579795, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.09882235455889926, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.14686212759294962, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.15651610834346774, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), person.birth_place),company.name))", "score": -0.23813632850942143, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.26622283420061504, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.3062165480965823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), person.birth_place),company.name))", "score": -0.3139221652407999, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),person.birth_place))", "score": -0.342402511721382, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),country.name))", "score": -0.3594938154308425, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), person.birth_place),company.name))", "score": -0.3610492916302619, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3834983900109404, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.215464),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.39106486945594765, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), company.name),person.birth_place))", "score": -0.3915981914622354, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), country.name),company.name))", "score": -0.3950269317714438, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), country.name),company.name))", "score": -0.40296318930383707, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)", "score": -0.04173447448187897, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.36989874026645114, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.popularity)", "score": -0.46206492524554116, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,Post Production), movie.id),movie.popularity)", "score": -0.6092765870117318, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.id),movie.popularity)", "score": -0.6542668688302613, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity)", "score": -0.6616723149589986, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.id),movie.popularity)", "score": -0.691686742322238, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity))", "score": -0.7241240753864986, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Post Production),movie.popularity)", "score": -0.7294649586094445, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,>=,Post Production),movie.popularity)", "score": -0.7420749534174076, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Post Production), movie.id),movie.popularity)", "score": -0.8016387485666042, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.id),movie.popularity)", "score": -0.8210400749639544, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Post Production), movie.id),movie.popularity)", "score": -0.8223748545643744, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,null,Post Production), movie.id),movie.popularity)", "score": -0.86868654387662, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.revenue)", "score": -0.8786288646063377, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.name))", "score": -0.18823670341225807, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.name))", "score": -0.19142253563040867, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.id))", "score": -0.45141767828317825, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,!=,2014-01-01), person.name),person.name))", "score": -0.5634482694440521, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,2014-01-01),person.name), person.name))", "score": -0.5677564584329957, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.birth_day))", "score": -0.5829561562859453, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.gender))", "score": -0.5835193928942317, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.birth_day))", "score": -0.5851765212282771, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,2014-01-01), person.name),person.name))", "score": -0.6093722773366608, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,2014-01-01),person.name), person.name))", "score": -0.665281280191266, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.birth_day), person.name))", "score": -0.6786140871845419, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), oscar_winner.person_id))", "score": -0.6845699486002559, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.gender))", "score": -0.6875271411263384, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,>,2014-01-01),person.name), person.name))", "score": -0.7126780857943231, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.death_day))", "score": -0.7150928911432857, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.01784169276652392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.5752047529287456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.release_date,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.5880840255203625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6318753031238711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,has_genre.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.633256302344576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6398791095299675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.title))", "score": -0.6470134262781357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.06387), movie.release_date),movie.release_date))", "score": -0.6576051986630773, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.title),movie.release_date))", "score": -0.6670063473138725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.06387), movie.release_date),movie.release_date))", "score": -0.678200928014121, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.budget),movie.release_date))", "score": -0.6889862753305351, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7254552909726044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.budget))", "score": -0.7408005599718308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7744153806561371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.id),movie.release_date)", "score": -0.7885025365537909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.11267623910247408, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.1882154428287214, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.21971959821590611, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2794056221312487, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.28421893859304537, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2872798665328656, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.29704747195744446, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.32295940750527036, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3229740571368501, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.322978868182173, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.32549309416256633, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.34061591284220094, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.34531957324809587, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.35654067357742586, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.35772273449983716, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.14387043988872086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.1748689393807581, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget)", "score": -0.5277399237254402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.budget),movie.budget))", "score": -0.6114874029826751, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.6646788289690448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.6869484089846811, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.id),movie.budget)", "score": -0.6898199248512714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.budget),movie.budget))", "score": -0.7277566040229431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.id),movie.budget)", "score": -0.7406134631997164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,0.5), movie.budget),movie.budget))", "score": -0.8204192150678864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.release_date),movie.budget)", "score": -0.8486432237901859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,0.5), movie.budget),movie.budget))", "score": -0.8519070590209594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,>,0.5), movie.id),movie.budget)", "score": -0.8544776721264153, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,0.5), movie.id),movie.budget)", "score": -0.8606005196206818, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,!=,0.5), movie.id),movie.budget)", "score": -0.8720949213279348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.25148357059698073, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2652687894514848, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2821371432911473, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.runtime,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29432913698544827, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.title,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2957626599664849, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2959223621456513, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30914048298764696, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32174780219209986, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32292569270498367, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.40208361216385824, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4037027758038809, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.408740560201869, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.41035972356500783, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.45137404878370246, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.452119704212341, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.06712287330032456, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.18174474759988848, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.24650154688899423, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.26076415006340065, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.2872872745794335, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.30081764953101237, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3185099604468271, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.32226803859965886, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.32937709899988765, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.33335546782566106, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.33413095084478905, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.36655663339200895, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(has_keyword),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.36929991448461635, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3746736315459581, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.37538602436296453, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.05272332429740345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,140), movie.vote_count),movie.vote_count))", "score": -0.25379858761880314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,140), movie.vote_count),movie.vote_count))", "score": -0.5154815599307767, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.5341350421294919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.6279757007941953, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,140), movie.vote_count),movie.vote_count))", "score": -0.6384486541137449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.6455994627388205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,140), movie.vote_count),movie.vote_count))", "score": -0.671153938768839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar_winner.movie_id,=,140), movie.vote_count),movie.vote_count))", "score": -0.717041192947363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.7234858122828882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,140), movie.vote_count),movie.vote_count))", "score": -0.7381506919846288, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.739612704018525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,140), movie.id),movie.vote_count)", "score": -0.7453411737593968, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.title))", "score": -0.7645784075357369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_average))", "score": -0.7686600740053109, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.budget))", "score": -0.07010410775546916, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.2844347884238232, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5636867553084434, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5669979850007709, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),genre.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5764840614178017, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6131719966123227, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6140087440614125, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.6343089869335168, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.revenue),movie.budget))", "score": -0.6368561042763758, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.6376202166258444, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.revenue))", "score": -0.6794794223096687, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), person.death_day),movie.budget))", "score": -0.7070688261010218, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.vote_count),movie.budget))", "score": -0.7081953538872767, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.vote_count))", "score": -0.727087559440406, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.release_date))", "score": -0.7359346768644173, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.08984758079062083, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Austria),movie.budget),movie.status))", "score": -0.281200466736366, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.2927323078968374, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),person.birth_place,=,Austria),movie.budget),movie.status))", "score": -0.3151660089565288, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.3215089171387276, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.release_date),movie.status))", "score": -0.3446462270491737, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,Austria),movie.budget),movie.status))", "score": -0.3452808365452486, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.35298287898465874, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,Austria),movie.budget),movie.status))", "score": -0.3648887482116271, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.title),movie.status))", "score": -0.3882888645374116, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.4003160907392475, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),oscar.category,=,Austria),movie.budget),movie.status))", "score": -0.4088413026414553, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.title),movie.status))", "score": -0.4147215586096083, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.iso_3166_1,=,Austria),movie.budget),movie.status))", "score": -0.4173143917111578, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),genre.name,=,Austria),movie.budget),movie.status))", "score": -0.41990004060832137, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.26789765293892503, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.26862418732209614, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.2961188917582575, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.2968454261414286, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.31704840968202813, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.327354266105329, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.release_date))", "score": -0.3280808004885001, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.33479158803893583, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.33551812242210693, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.33886527170356834, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.3452696485013606, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.35557550492466145, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.release_date))", "score": -0.35630203930783255, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.36301282685826836, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.36373936124143946, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.14721585743451157, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.17332362122159392, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.3131237126521782, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.32723556464747544, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.37958956719492437, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.3937014191902216, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.40022373815289836, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4082510272165555, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4143355901481956, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4223628792118527, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.43880988977815016, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4529217417734474, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.budget),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.46052088834712895, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4616247560006764, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.revenue),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.46225013536998844, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.14456699487709557, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.24311236736321007, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.3854111328437284, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.3991447582557157, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.4839565053298429, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.4976901307418302, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.5301760982438282, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), movie.revenue),person.name))", "score": -0.565418924921687, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.5704952075793699, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1972-10-24), person.name),person.name))", "score": -0.5864236306115345, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,1972-10-24), person.name),person.name))", "score": -0.5865663539334491, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),cast.person_id))", "score": -0.6070500805690244, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), language.name),person.name))", "score": -0.6238881906210736, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.6287214707299427, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), movie.revenue),person.name))", "score": -0.6639642974078015, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.12250610756247046, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.13042575282030575, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.21108689968299899, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.24322423827668063, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.2824647971920307, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.2991722383911237, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3374701020274012, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.36004250305335567, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.3631259440547239, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3698865139492241, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.38566980038474025, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.39179201468815705, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.39834035804117496, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.40790065371400525, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.4100660575120256, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.18319975643842656, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.18810619156430985, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.2627419471417553, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.2994427588719291, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.30370658206574763, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,156), company.name),company.name))", "score": -0.3159613827430925, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,1991-09-21), company.name),company.name))", "score": -0.34369816023843797, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.34397473983333227, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3488811749592155, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),person.death_place,<,156), company.name),company.name))", "score": -0.35943793035005595, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.36316033578833173, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,<,156),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<,156), company.name),company.name))", "score": -0.37603937542435556, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.3824016780970633, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,156), company.name),company.name))", "score": -0.39790304669655024, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,156), company.name),company.name))", "score": -0.4028094818224335, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.19143666517796953, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.22842030347257647, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.24190025898114464, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.2788838972757516, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2844187037043885, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2847387460031302, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3013642173225342, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.30234370393811244, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3214023419989954, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3217223842977372, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.33018891675768164, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3348822975075636, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3352023309114114, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.33932733333782544, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),person.id,crew.movie_id),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.43550055719146696, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.037680881908847254, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.32575380859814923, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3399283859178076, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), genre.name),company.name))", "score": -0.3429844632225329, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), movie.title),company.name))", "score": -0.3623077136488521, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.36857244396685546, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.3932913997383283, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),movie.title))", "score": -0.4055613024588323, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),person.birth_place))", "score": -0.40581126877571455, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.40952532479912185, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.41421208894340195, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.42203316747408814, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4232359742115878, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4237353151445476, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),production_company.company_id))", "score": -0.42767128923797265, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))", "score": -0.14253226799337426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2013-10-04), movie.title),movie.title))", "score": -0.25718680900899926, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,!=,2013-10-04), movie.title),movie.title))", "score": -0.2823849706110195, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2013-10-04), movie.title),movie.title))", "score": -0.330900037115498, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,=,2013-10-04), movie.title),movie.title))", "score": -0.3970395116266445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2013-10-04), movie.title),movie.title))", "score": -0.4307668147739605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,2013-10-04), movie.title),movie.title))", "score": -0.445554578131123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,2013-10-04), movie.title),movie.title))", "score": -0.49672173840372125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2013-10-04), movie.title),movie.title))", "score": -0.5010966895279125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2013-10-04), movie.title),movie.title))", "score": -0.5706195173916058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2013-10-04), movie.title),movie.title))", "score": -0.6075987754520611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2013-10-04), movie.title),movie.title))", "score": -0.6113762794193462, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2013-10-04), movie.title),movie.title))", "score": -0.619134599728568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.original_language),movie.title))", "score": -0.6215331236962811, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,2013-10-04), movie.title),movie.title))", "score": -0.6409494079780416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.13274418696120424, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.17660414003718286, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.2188948714895923, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.23215056582158514, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.272145473592194, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1957), movie.id),movie.budget)", "score": -0.27601051889756373, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,=,1957), movie.id),movie.budget)", "score": -0.313819885856806, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.3160054266681726, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.31656890916397257, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>=,1957), movie.id),movie.budget)", "score": -0.3183012503499732, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.name,<=,1957), movie.id),movie.budget)", "score": -0.3249935259775063, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,1957), movie.id),movie.budget)", "score": -0.3576798389327846, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.3582961581205821, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.3604288622399512, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.3636180795926968, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.14767001703148708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,no), movie.title),movie.title))", "score": -0.15203224256401882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.301311413366554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.40428345039254054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,!=,no), movie.title),movie.title))", "score": -0.4086456759250723, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.4480805895471539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.5012702210224234, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),language.name,!=,no), movie.title),movie.title))", "score": -0.5056324465549551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.5715844787839853, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,no), movie.id),movie.title)", "score": -0.6141986492878931, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title)", "score": -0.6322494229666176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,!=,no), movie.id),movie.title)", "score": -0.647915499802894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),spoken_language.movie_id,!=,no), movie.title),movie.title))", "score": -0.6593464253819548, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,!=,no), movie.title),movie.title)", "score": -0.6659662734816185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,no), movie.title),movie.title))", "score": -0.673439109174069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.original_language,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.16704335795658004, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,=,es), language.name),language.name))", "score": -0.17825949139617026, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es), language.name),language.name))", "score": -0.23359761858045347, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,!=,es), language.name),language.name))", "score": -0.23696035117963352, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,=,es), language.name),language.name))", "score": -0.23702911583954148, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),language.name,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.25277042804321576, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.26631401809026517, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,es), language.name),language.name))", "score": -0.29572997562300474, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,es), language.name),language.name))", "score": -0.31031452465537157, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.3223855637200673, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.3382505680088809, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.354681332278274, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.36115334769688745, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.37054636562033555, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.4048971148652349, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.02827150504120777, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.4972066998015418, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.522002492751042, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Post Production), movie.id),movie.runtime)", "score": -0.8739871816090902, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.runtime)", "score": -0.8844045305510175, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.8879580013030309, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(country),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9137588973696658, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Post Production), movie.id),movie.runtime)", "score": -0.9367518363279265, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.release_date)", "score": -0.939576652813654, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9482783939330099, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.runtime)", "score": -0.9556179017182563, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.vote_average)", "score": -0.9637446045846237, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.id)", "score": -0.9707594740790403, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.9767245620221807, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.id),movie.runtime)", "score": -0.9889272781291997, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.08284673856215011, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), genre.name),company.name))", "score": -0.24016348797929069, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.birth_place),company.name))", "score": -0.2461748004522323, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), keyword.name),company.name))", "score": -0.2519307772765169, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.2805352615653268, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,10037390), company.name),company.name))", "score": -0.3201151617153754, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,10037390), company.name),company.name))", "score": -0.32489972474984635, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,10037390), company.name),company.name))", "score": -0.32549115642333326, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,10037390),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.32918986439520215, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3413046402151623, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.3419595603168165, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.3461497008519134, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.death_place),company.name))", "score": -0.36622682960368674, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), country.name),company.name))", "score": -0.3682801471330908, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),person.birth_place))", "score": -0.37342525531393905, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.01095056111444137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.4940943666406383, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.6229509063668957, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7564935261289065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.7675372988705931, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.title))", "score": -0.7784598514808749, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7817483717481082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8298739368001407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8595505529920047, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.8645107791198825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.24827), movie.original_language),movie.original_language))", "score": -0.8846779414125194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8884655044712417, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.9028439552312193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.24827), movie.original_language),movie.original_language))", "score": -0.9408471161405032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),genre.name))", "score": -0.9617265507949924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11866972842086962, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.12553159266452668, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.17162700470153341, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.24300181698394466, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2789781913109263, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3069956203525092, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3104136618694436, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.35078411587676495, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3511291452326376, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3636736095862483, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3705354738299053, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3726751751168495, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3826965262376189, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),country.name,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3903795969931826, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4023866278401819, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.title))", "score": -0.23128001467193826, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.release_date))", "score": -0.2667258389374183, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.title))", "score": -0.3281674318095611, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))", "score": -0.3586223058482574, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.release_date))", "score": -0.36361325607504114, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.original_language))", "score": -0.38662445620502695, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.release_date))", "score": -0.3940681301137374, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.status))", "score": -0.4283058054825233, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.original_language))", "score": -0.4835118733426498, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.popularity),movie.release_date))", "score": -0.5107626028681422, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.original_language))", "score": -0.5139667473813461, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.release_date),movie.title))", "score": -0.5158199600955413, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.status))", "score": -0.5251932226201461, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.release_date),movie.release_date))", "score": -0.56010368736018, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),language.name,!=,nb), movie.popularity),movie.release_date))", "score": -0.5676820229200722, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.11448026208381634, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.revenue))", "score": -0.2999279624054907, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.budget))", "score": -0.3719438849220751, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.budget))", "score": -0.3836846290359972, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.budget))", "score": -0.4066293178329943, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.budget))", "score": -0.41200605074118357, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.vote_count))", "score": -0.4560151225159643, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),person.death_day))", "score": -0.5485048419068335, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.revenue))", "score": -0.5573915852437494, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.revenue))", "score": -0.5691323293576716, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.5860298181511334, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.revenue))", "score": -0.5920770181546686, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.revenue))", "score": -0.5974537510628579, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.runtime),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.6046209560920777, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.vote_count),movie.budget))", "score": -0.6694696735794423, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.13539512305537352, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19675257776856345, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.21084302468805405, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.22552786851337991, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.24430854954875625, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.id),oscar.number)", "score": -0.33018300969490366, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.release_date),oscar.number)", "score": -0.33141354295070746, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.birth_day),oscar.number)", "score": -0.33407031301254714, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_winner.oscar_id),oscar.number)", "score": -0.3392597418064753, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>,1975-03-06),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.35222888903827176, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.35630482416445014, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.37734445554211854, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.39824909185984436, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(crew),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.39847399005293327, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>,1975-03-06),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.runtime),oscar.number)", "score": -0.4063203872528046, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.14270237412246153, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.2896713616473161, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3070878590456756, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.31312806660656467, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3149981849931126, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3265032970376275, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3305446236551435, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3305524258323323, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.33121695542362295, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3393778273579793, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.34205753093127367, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.title,=,Danielle Tabary),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.368959958282138, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.37071225163061705, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),movie.title,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3731316215986479, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3748839588748458, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.13271309618949118, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.21563999330344358, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.category))", "score": -0.22657316233378275, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.number))", "score": -0.2572885000639264, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),genre.name))", "score": -0.2730606373754518, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.category))", "score": -0.28221294259268226, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.2842418720837139, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.category))", "score": -0.29134640630898423, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.category))", "score": -0.3085293755237712, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.3106132653530851, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.number))", "score": -0.31292828032282594, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.number))", "score": -0.32206174403912785, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05),oscar_nominee.person_id,movie.id), oscar.number),oscar.number))", "score": -0.3370114850186871, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), genre.name),oscar.category))", "score": -0.33881625209665445, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.number))", "score": -0.33924471325391486, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)", "score": -0.028327381374767563, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,151),movie.revenue)", "score": -0.4803224901680868, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.budget)", "score": -0.6433757454562269, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.popularity)", "score": -0.695114888888175, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,151), movie.id),movie.revenue)", "score": -0.7103361191432355, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,151), movie.id),movie.revenue)", "score": -0.8255527339874656, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_count)", "score": -0.8444446059442815, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.revenue),movie.revenue)", "score": -0.8526853058431254, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_average)", "score": -0.9021538550668419, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,151), movie.id),movie.revenue)", "score": -0.9160394142314103, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,151), movie.id),movie.revenue)", "score": -0.9533016996856042, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,151), movie.id),movie.revenue)", "score": -0.9876728022523841, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),cast.movie_id)", "score": -1.0014874325435625, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,151), movie.id),movie.revenue)", "score": -1.0051437554802622, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.popularity),movie.revenue)", "score": -1.0483082568029671, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.15780635862661618, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.17067216358737883, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.24592438506434286, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.26558546480844325, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.27177811855055506, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.2784512697692059, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.budget))", "score": -0.2919147254874643, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.3246423462866953, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.release_date))", "score": -0.33269226627598947, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.3339693584649685, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.337508151247458, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.3537034912461699, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.3814276305701048, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar_nominee.oscar_id,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.40118194479921837, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.oscar_id),movie.budget),movie.budget))", "score": -0.4580435185001521, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.010570387519692304, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1584), movie.revenue),movie.revenue))", "score": -0.5369752488804806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.budget),movie.revenue))", "score": -0.7148044081877742, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1584), movie.revenue),movie.revenue))", "score": -0.7229453764630307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.popularity),movie.revenue))", "score": -0.7497780891608272, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.773251839360455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1584), movie.revenue),movie.revenue))", "score": -0.7888985119534482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.budget))", "score": -0.793150426052307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1584), movie.revenue),movie.revenue))", "score": -0.8210256539059628, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.popularity))", "score": -0.8462781917078246, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_count))", "score": -0.8511822234613646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.id),movie.revenue))", "score": -0.8742413493346248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_average))", "score": -0.8768869649393309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,1584), movie.revenue),movie.revenue))", "score": -0.8885202620767814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,1584), movie.revenue),movie.revenue))", "score": -0.8951062176965934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1063180756807157, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1095980462930079, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21262953349977243, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21590950411206464, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3169037286230487, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3201836992353409, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3484223718001942, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35203584348179895, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3661025612641882, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3693825318764804, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3853469020060415, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3886268726183337, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41091597061593066, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41419594122822284, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41857047581762974, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.011382986493117642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_count))", "score": -0.5751722265777062, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.6436695302691078, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7019251434176113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7084277322792332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.runtime))", "score": -0.7251086641845177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_count),movie.vote_average))", "score": -0.7374522921672906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8060499480270664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8135525634788792, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.popularity),movie.vote_average))", "score": -0.8247924682727898, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.runtime),movie.vote_average))", "score": -0.8254855510822381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.popularity))", "score": -0.8477961827811669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.original_language))", "score": -0.8698739816245507, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.871958538707986, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.status),movie.vote_average))", "score": -0.8773150083652581, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.08410598924092483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,0.553752), movie.runtime),movie.runtime))", "score": -0.30005155717663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.id),movie.runtime)", "score": -0.30354203489374687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,0.553752), movie.id),movie.runtime)", "score": -0.48108695134686974, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,0.553752), movie.runtime),movie.runtime))", "score": -0.6558811536961002, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,0.553752), movie.runtime),movie.runtime))", "score": -0.6994883886509342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,0.553752), movie.runtime),movie.runtime))", "score": -0.7183961740665836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.release_date))", "score": -0.7515357621450676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime)", "score": -0.7537436635425198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.7862046030786587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>,0.553752), movie.id),movie.runtime)", "score": -0.8026229121994549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,0.553752), movie.id),movie.runtime)", "score": -0.8178999240000513, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),person.birth_day))", "score": -0.8555354364652885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,0.553752), movie.id),movie.runtime)", "score": -0.8580682144638079, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), oscar.year),movie.runtime))", "score": -0.8649430990190012, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.12082225754443528, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.2664004093063642, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.birth_day,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.28817382952900517, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2895095881423798, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.296775693787579, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.30523562976648994, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.322145059880258, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3355023272146896, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.33561091424770473, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2016-01-13),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3588813557803106, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.3609802803403837, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<=,Released), genre.name),genre.name))", "score": -0.38159795615775177, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2016-01-13),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3874703415643886, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.status,<=,Released), genre.name),genre.name))", "score": -0.41191373947463367, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<=,2016-01-13), genre.name),genre.name))", "score": -0.4119732096971955, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.0217473887023516, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.39763020985992625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.popularity))", "score": -0.44368677848251536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.revenue))", "score": -0.6222818256937899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.vote_average),movie.popularity))", "score": -0.698852589528542, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.release_date))", "score": -0.6995396973215975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),person.gender))", "score": -0.7074649097048678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.7268237457719806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.7394135546055622, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.revenue),movie.popularity))", "score": -0.7547196058440022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,26500000), movie.popularity),movie.popularity))", "score": -0.7699283249094151, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.status),movie.popularity))", "score": -0.8015885857748799, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,26500000), movie.popularity),movie.popularity))", "score": -0.8069124109460972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,26500000), movie.popularity),movie.popularity))", "score": -0.8127525932504795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.vote_average))", "score": -0.8297726275050081, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.27355110028292984, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.35889302959529595, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.39443813884871326, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.40401983247696055, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.4098736829601574, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.417112742760994, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.41758633840094267, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.42445107907011487, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4365768406832837, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.44541879221357467, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4517403309898844, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.45265785201441133, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.person_id),movie.popularity),movie.runtime))", "score": -0.45717768210052584, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.46809340512458086, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.46810503424661787, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.017573582594195614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,515), movie.vote_average),movie.vote_average))", "score": -0.41221637942726375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_count))", "score": -0.5932934285410738, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.5988741307446617, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.popularity),movie.vote_average))", "score": -0.6647710615106917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,515), movie.vote_average),movie.vote_average))", "score": -0.706300540947268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.runtime))", "score": -0.7314463855036593, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_count),movie.vote_average))", "score": -0.8327827268549299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.status),movie.vote_average))", "score": -0.8399258070894575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.runtime),movie.vote_average))", "score": -0.865702670187602, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,515), movie.vote_average),movie.vote_average))", "score": -0.8669855437510705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,515), movie.vote_average),movie.vote_average))", "score": -0.8682486515062919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), person.name),movie.vote_average))", "score": -0.8706854992815352, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.popularity))", "score": -0.8755828739413118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.9100559197177063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.05879834049010211, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.21630621951183024, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.24473209654541556, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.301674357878124, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), genre.name),person.death_place))", "score": -0.3055496226699279, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3135348481098272, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.33980453709948494, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.3414569314507742, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.34750202624634946, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,special effects), person.death_place),person.death_place))", "score": -0.35598415199832095, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.37185008817848236, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),movie.status,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.38244999863438517, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),genre.name))", "score": -0.38274167833513023, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3908797733777577, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), movie.budget),person.death_place))", "score": -0.3925238036801857, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(getData(person),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.2545863522827858, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.30362948987788657, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.33499935446754825, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3423043081964528, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3454281916252289, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3643723681142757, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3736741727861144, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3767980562148906, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.38266779464861833, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.38410300994379515, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3957422327039374, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.40617106598524405, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.406657650325097, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.41403773039743147, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,=,1981-08-01),movie.popularity),movie.title))", "score": -0.42203611870558355, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.1793838298690389, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.19988276127696736, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.revenue))", "score": -0.32362285319686634, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_count))", "score": -0.3766785568368505, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.4327315694463323, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.4533121890199254, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.number))", "score": -0.49336698714614613, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_day))", "score": -0.5266853875291417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.5587447590005468, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.original_language))", "score": -0.5638631886613439, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),spoken_language.iso_639_1))", "score": -0.5839351719987462, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_place))", "score": -0.6025277680528234, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.tagline))", "score": -0.6069950169694494, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))", "score": -0.613638214468665, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),keyword.name))", "score": -0.6240126794946264, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.11658938019135216, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.14024912977965925, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.22155116432186536, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.2598428285426273, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2678794175172933, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.270280685468867, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2879516099836458, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.30515245748098757, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.31339162315060987, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.32392559062804327, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3489567419806107, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3508846864991016, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.tagline,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.35215675781031486, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.36218915172992033, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),oscar.number,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.36435926551585146, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))", "score": -0.012008636724203825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5037301366440164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.52848583950448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5720207337308129, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5967764365912764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6197547688053843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6445104716658479, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6751420398460495, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6807434014014073, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6880453658921807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6998977427065131, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7054991042618709, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id), movie.original_language),movie.original_language))", "score": -0.706673899213222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id), movie.original_language),movie.original_language))", "score": -0.7103909653290031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7128010687526443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.020700831057183677, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))", "score": -0.5361524797954189, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5539202933177876, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,2009-03-29), person.gender),person.gender))", "score": -0.5864087320842373, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2009-03-29), person.gender),person.gender))", "score": -0.6018044330157863, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,2009-03-29), person.gender),person.gender))", "score": -0.6342657451496052, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),movie.popularity))", "score": -0.6731362674363481, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),genre.name))", "score": -0.7009941074975359, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.name),person.gender))", "score": -0.7154211329507234, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.birth_place),person.gender))", "score": -0.757608466057718, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), movie.popularity),person.gender))", "score": -0.7765495108651521, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2009-03-29), person.gender),person.gender))", "score": -0.7873681761302578, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),oscar.category))", "score": -0.8182917568810808, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),country.name))", "score": -0.8629032704957353, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),person.name))", "score": -0.8711829517014849, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.021846929577902154, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.44814973724011103, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.5772396893061379, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count)", "score": -0.6133213250079987, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.6781182034376455, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.7235445839688693, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.7235975899711775, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.budget)", "score": -0.7551740886809121, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.769331526291242, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.7772367597650442, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.8470483028412983, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,7.4), movie.id),movie.vote_count)", "score": -0.8537534589584296, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,7.4), movie.id),movie.vote_count)", "score": -0.8545012470869847, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,7.4), movie.id),movie.vote_count)", "score": -0.8655237429966801, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.budget),movie.vote_count)", "score": -0.8811306356936656, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.03662031795213642, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.24995123683550258, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2771534029150886, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2993355937102867, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id), movie.title),movie.title))", "score": -0.3187665840650944, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3305427826105573, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3350451251711878, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3527249803513288, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.36232236587105093, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3754953670888202, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.3777220644446513, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.3786525341183228, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.3963392163162666, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.4016545171134522, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.4159666789681757, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.12154469088613797, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.26895899480083496, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.28701583494486016, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2886612194862377, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29197436742993377, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),person.death_day,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30337444017238135, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.31419407331419, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_place,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3151074799357477, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.316361164635927, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3307993077461788, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),person.birth_place))", "score": -0.333338596871458, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.34191493659374306, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3508465410709174, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,cast.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3601965977389262, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3618812316747141, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.08471092009823543, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.16804430273770476, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.2836145810776463, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.3101421449180032, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.3783379888996919, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.3960647743932698, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4008096189857506, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(movie),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.40739280171664427, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4504133768085357, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4583164694756397, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4679789449308451, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity)", "score": -0.4972566450591618, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.49812704440483263, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),movie.original_language,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.5059871493323155, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.popularity),movie.popularity)", "score": -0.5206387093580476, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.05748556764437201, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.18545885024504252, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.26006803665013195, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.27532496630737124, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.28655083912368856, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.2875725660331115, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3667833919344713, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.3728779043477722, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.38816124069543506, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3929989756753493, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,null,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.40648092474769526, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.movie_id,language.iso_639_1), language.name),language.name))", "score": -0.40679534519658367, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4094076440266401, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(spoken_language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.41342739362301006, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.41554584863378197, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))", "score": -0.014642338232079055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.popularity))", "score": -0.5257258489364176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.popularity),movie.status))", "score": -0.5815454076146125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.title))", "score": -0.618525452875474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,177), movie.status),movie.status))", "score": -0.6440813452572911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.original_language))", "score": -0.6595553829902201, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.vote_average))", "score": -0.6656393482917338, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), country.name),movie.status))", "score": -0.7008476804112433, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),country.name))", "score": -0.7101141884559183, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.original_language),movie.status))", "score": -0.7209928582524299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.iso_3166_1))", "score": -0.7580328061812907, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.vote_average),movie.status))", "score": -0.7675669144009589, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.release_date))", "score": -0.790168531202653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.movie_id))", "score": -0.7968567683928995, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,177), movie.status),movie.status))", "score": -0.8212499529690831, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.22741874655607763, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.23203971532961876, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.23539163587372158, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.2439161690589645, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.26254400553796403, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.26589592608206686, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.32525975879025326, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3256478803867255, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.32861167933435614, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.34214530288961237, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3461351514574574, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3494870720015602, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3828258413640739, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3892000356062707, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<,1940-04-05), movie.id),movie.budget)", "score": -0.4468813140462077, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.0597351065243366, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.13511824090444516, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.25933142963779754, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.217538),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.31689797357042815, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3213727115325076, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3347145640179061, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.34710907139661734, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.category),oscar.sub_category))", "score": -0.37553067998864736, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.375711057916144, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,!=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.38292573200183677, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,<=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.38454372608444315, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.category))", "score": -0.3927036467740632, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.395612625135131, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3967558367754489, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_keyword.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.40008951347675703, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)", "score": -0.10611468712220402, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_count)", "score": -0.2771934808216121, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count)", "score": -0.5197934841250827, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,72000000), movie.id),movie.vote_count)", "score": -0.5201788321750181, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count)", "score": -0.538969341735073, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count))", "score": -0.6030083383411693, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_average)", "score": -0.6030129278955871, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,>=,72000000),movie.vote_count)", "score": -0.6296764714938736, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_average)", "score": -0.6422279031777481, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count))", "score": -0.6826401474863815, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,72000000), movie.id),movie.vote_count)", "score": -0.7138350934750821, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.budget)", "score": -0.7895512983663097, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.runtime)", "score": -0.8119926371899027, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.revenue)", "score": -0.8631160581453813, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,72000000), movie.id),movie.vote_count)", "score": -0.8952991175865186, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.009869943743979093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title)", "score": -0.7920240822838635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Post Production), movie.title),movie.title))", "score": -0.8214750927509158, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.title),movie.title))", "score": -0.8397393268169253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.8641913918181672, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.vote_count))", "score": -0.8679724942412577, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Post Production), movie.title),movie.title))", "score": -0.8767043239131453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.budget))", "score": -0.882351220723649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.title)", "score": -0.8871632849922861, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.title),movie.title))", "score": -0.9073793929637759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.budget),movie.title))", "score": -0.9320531782213948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.title),movie.title))", "score": -0.9365909141124575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,=,Post Production), movie.title),movie.title))", "score": -0.9407493513645022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9490063760822522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Post Production), movie.title),movie.title))", "score": -0.9502989691318362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.15269549183621242, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.18929517711413316, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.20347878555757512, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.21268273223583137, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.21289979442071294, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2534891127078453, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.2795218091000629, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.vote_average)", "score": -0.33538682570190537, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.33850942957255736, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3482688882324706, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.iso_639_1),movie.vote_average)", "score": -0.3692512707630157, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.37380956703371426, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.popularity)", "score": -0.39379838440754633, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.3984348362208896, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.vote_average)", "score": -0.402855297987903, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.08025285651048926, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.08070298724958833, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2971952565163049, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31869961898968857, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.33970717437750025, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34607093928733257, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36815920285490933, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4062415869151371, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.41167422634322764, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.42967995598323244, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.43283423918299063, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4353949533043199, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.4378382805585477, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4456359901089219, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.47749476206858654, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.05175185417518659, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.1912567589762373, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.id),movie.popularity)", "score": -0.19887355762020353, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.29181555456502045, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.id),movie.popularity)", "score": -0.31042806558870717, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)", "score": -0.3334912417461732, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.3383784624212543, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,<,sound editing), movie.id),movie.popularity)", "score": -0.3509584096140848, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,>,sound editing), movie.id),movie.popularity)", "score": -0.37237613428705174, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,!=,sound editing), movie.id),movie.popularity)", "score": -0.3999209725895262, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),filter(getData(oscar),movie.popularity,>,sound editing),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.42063519528286114, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.popularity),movie.popularity)", "score": -0.42657092352997966, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.43549251302795394, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),country.name,!=,sound editing), movie.id),movie.popularity)", "score": -0.4392724849764042, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.4499329703897579, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.10511932557384587, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.13967927566145413, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.24100118537602616, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.name,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.2541647310649522, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.27176246948512495, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.276520203541208, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.28100274196787167, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.31994768746961216, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.33235354831781627, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3341326682936647, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3456315281371091, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.354772578992319, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar.category,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3635661316715567, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),country.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3991617473994736, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.4088632634127439, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)", "score": -0.036932235845507984, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.runtime),movie.runtime)", "score": -0.4366014393846589, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.id),movie.runtime)", "score": -0.540709286371363, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,!=,Released),movie.runtime)", "score": -0.5847605443483889, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.id),movie.runtime)", "score": -0.6850639883394504, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime)", "score": -0.7735559615631692, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,>=,Released),movie.runtime)", "score": -0.7968778438934078, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,Released), movie.id),movie.runtime)", "score": -0.8759822490254191, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),country.name,!=,Released), movie.id),movie.runtime)", "score": -0.8849846721753362, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.release_date,!=,Released),movie.runtime)", "score": -0.9155183798763423, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,Released), movie.id),movie.runtime)", "score": -0.9223325327341753, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.runtime),movie.runtime)", "score": -0.9403785057950683, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,Released), movie.id),movie.runtime)", "score": -0.94503782055613, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_average)", "score": -0.9695135149810259, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,=,Released),movie.runtime)", "score": -0.9815823088030349, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.1060732970035554, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.15209393112950972, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.18902263278536208, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.2784086561623733, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.2960904010776818, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.32779321363519176, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),genre.name), genre.name))", "score": -0.3401782310835741, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<=,1999-12-16), genre.name),genre.name))", "score": -0.3406089340699278, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3483629924214957, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.34910690578704, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,>,1999-12-16), genre.name),genre.name))", "score": -0.36744201566705775, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,1999-12-16), genre.name),genre.name))", "score": -0.3790397368594885, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),person.birth_day,>,1999-12-16), genre.name),genre.name))", "score": -0.4002353964907272, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.40789443815755616, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16),genre.name), genre.name))", "score": -0.42951905970349147, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.06067338533466682, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.4084827196202241, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.title))", "score": -0.5291812437353656, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.vote_count),movie.title))", "score": -0.6356296403682791, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.vote_count))", "score": -0.6481881003710441, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.budget))", "score": -0.6607150297495537, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.id))", "score": -0.6626688855467364, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.budget),movie.title))", "score": -0.6652957065380178, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.original_language),movie.title))", "score": -0.7309089167392813, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), oscar.number),movie.title))", "score": -0.7341699464595877, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,42), movie.title),movie.title))", "score": -0.743402378691826, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), company.name),movie.title))", "score": -0.7642725570476614, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,42), movie.title),movie.title))", "score": -0.778975265158806, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.budget))", "score": -0.7913179266033694, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.7930458874907345, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.14920985690344896, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.18039397037108837, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),has_keyword.keyword_id,oscar.id), oscar.number),oscar.number))", "score": -0.2225229693745283, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), movie.title),oscar.number))", "score": -0.25930360962559273, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.27492085068807487, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), movie.title),oscar.number))", "score": -0.27929173113155104, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.sub_category),oscar.number))", "score": -0.2994954336467548, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.30869582890629604, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.3108692206359682, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.number))", "score": -0.31089436851473345, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.3217342846277996, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,has_keyword.keyword_id), oscar.number),oscar.number))", "score": -0.32866657744227984, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.name,movie.id), oscar.number),oscar.number))", "score": -0.3293206481138785, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.3332928155056267, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),keyword.id,movie.id), oscar.number),oscar.number))", "score": -0.4046697895571867, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))", "score": -0.08021168037157622, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),movie.original_language))", "score": -0.174775991577917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),language.name))", "score": -0.4789619333932933, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Sky High), movie.original_language),movie.original_language))", "score": -0.5221911407898006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),movie.original_language))", "score": -0.5485795638527043, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),language.name))", "score": -0.5735262445996341, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.5802609338579972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), language.name),movie.original_language))", "score": -0.5813505295554933, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),language.name))", "score": -0.6089833413206363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), language.name),movie.original_language))", "score": -0.609152710069054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,Sky High), language.name),movie.original_language))", "score": -0.6291829490932387, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.title),movie.original_language))", "score": -0.6336083058158692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),language.name))", "score": -0.640664711325929, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6408340800743467, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6430311836193141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.1333208609454107, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.20383672557710064, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2100334786431357, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.22900904268632805, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1981-01-18),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.25048407689298813, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.2760266248747461, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<=,http://www.hailcaesar-film.com/ww/),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.29471489240980264, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,http://www.hailcaesar-film.com/ww/),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.2976347784893206, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.32875159267394216, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.3301678591454113, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3523522003157853, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.35363198911674376, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,http://www.hailcaesar-film.com/ww/),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.3698246478835094, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,http://www.hailcaesar-film.com/ww/),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3714275245054882, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.38016281776057703, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.04120317391542481, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.23287517248678502, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.26568840057360527, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.26741647877860664, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.runtime),movie.runtime)", "score": -0.33378556813285304, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.345425456559219, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,<=,1985-05-13), movie.id),movie.runtime)", "score": -0.3489680935813715, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.id,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.38653242108083846, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.39348080520218837, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4066718480558455, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.movie_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4243970039087494, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,!=,1985-05-13), movie.id),movie.runtime)", "score": -0.4328118571800948, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(getData(person),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4466423330000901, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.45112980657139606, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.4590884726712927, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.02075904788927594, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,495303), company.name),company.name))", "score": -0.27974030669104644, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),person.birth_place))", "score": -0.3505808462864434, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,495303), company.name),company.name))", "score": -0.3678899377598634, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.37043959203236776, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,495303), company.name),company.name))", "score": -0.37136951283786956, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),production_company.company_id))", "score": -0.38308777320282006, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), person.birth_place),company.name))", "score": -0.39766075432178777, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),movie.title))", "score": -0.4024009937882662, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,!=,495303), company.name),company.name))", "score": -0.40773745903379144, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), movie.title),company.name))", "score": -0.41509477966832214, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4242056246730411, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.43001826446367203, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.430618953748952, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.43148159094630245, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.22844465581456283, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2348537595735793, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.2408654406005675, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.27157504129717286, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.286203428394666, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3001912642112593, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.36052967810484804, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3639533842120831, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.title,!=,writing), movie.vote_count),movie.vote_count))", "score": -0.3655808790464554, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.36693877729528085, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3693748259234374, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.37245009809692425, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.37787157540899324, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.39035134221594603, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.39577278392730036, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.16157105601437163, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.17784824266518712, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.3213391985959774, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Italy), movie.id),movie.revenue)", "score": -0.3368588369062414, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.34063271209779045, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(country),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.37353285383148593, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.381847745605833, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4237041316388501, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.42882151190606344, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.44994462110239425, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),genre.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.47424478331773495, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4764288451009725, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Italy), movie.id),movie.revenue)", "score": -0.48292368181551465, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.movie_id),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.5019320744689526, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.popularity)", "score": -0.5419463271569263, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,87), movie.revenue),movie.revenue))", "score": -0.5748250727933193, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6214028642540189, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6230662009882723, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6294538774857326, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6308029656748506, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6311172354816568, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.632466302409104, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6328537624991821, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.633440532816687, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6345170992334356, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6351038695509404, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,oscar_nominee.oscar_id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6354188936658307, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,oscar_nominee.oscar_id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6370821100047792, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6388538585112593, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6405171409101317, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.10522936587631647, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.19848267970133116, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.2217054051140268, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.24271111704538384, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.number))", "score": -0.24438192236731385, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.number))", "score": -0.2548709740113667, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.2637644950866674, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.year),oscar.number))", "score": -0.28913972399170346, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.revenue,<=,13391174),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.29560953997908995, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.3008627854492048, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3149587189390415, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.sub_category))", "score": -0.3359644308703985, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.34571471824481864, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.sub_category))", "score": -0.35620376988887154, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.3716173055364295, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.13927038140566747, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.14400744335299126, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.gender))", "score": -0.23041687266455352, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.name),person.gender))", "score": -0.2351539346118773, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.name))", "score": -0.3016688057424346, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.name))", "score": -0.30640586768975836, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,>=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.3329300978484626, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.3331264020900465, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.33786346403737033, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.gender),person.gender))", "score": -0.34086699546711463, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.name),person.gender))", "score": -0.34560405741443845, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.36930368979926526, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.374040751746589, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,<=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.38545242835191107, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.name))", "score": -0.3928152970013207, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.2078471401344272, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.2525665879269251, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.28525494699761655, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.29845321656420315, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.29872009007344014, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.3024407471105054, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3113539534429966, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.31226242216731925, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3169983749648259, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.33111311716257325, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3331657288198243, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.3445782602383968, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.35812057578546846, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.36285321750657845, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.39676615807919025, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.027294062892906368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.runtime), movie.runtime))", "score": -0.62672848119837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.release_date))", "score": -0.7656912130769342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.runtime))", "score": -0.8393575212103315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.runtime),movie.runtime))", "score": -0.8426441716146655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),person.birth_day))", "score": -0.8511464518960565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.status))", "score": -0.8527741951402277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), person.birth_day),movie.runtime))", "score": -0.8602496644598432, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.title))", "score": -0.900749079650268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.runtime))", "score": -0.9150343796354719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.runtime),movie.runtime))", "score": -0.9352921413374133, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime))", "score": -0.9439574143034406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.runtime))", "score": -0.9573049804312177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.popularity))", "score": -0.9634780210908502, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.runtime),movie.runtime))", "score": -0.9684715626644902, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))", "score": -0.19321529669105075, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.gender))", "score": -0.2633390287810471, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))", "score": -0.34326099333702587, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.gender))", "score": -0.4133847254270222, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.name))", "score": -0.45022909631370567, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.name))", "score": -0.5128107099735644, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.gender))", "score": -0.520352828403702, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.id))", "score": -0.5501208166533615, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.gender))", "score": -0.5829344420635607, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.name))", "score": -0.6002747929596808, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), language.name))", "score": -0.658063219016185, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.popularity))", "score": -0.6600860218459275, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.name))", "score": -0.6628564066195395, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.revenue))", "score": -0.6671291450911667, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.gender))", "score": -0.6703985250496771, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.1711257847308816, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.17527269915852306, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.17971001719626575, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.2521776109640399, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.25744947086436193, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2633057022502224, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3086553526346943, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),filter(getData(person),person.birth_day,>,31.8267),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3153378021557895, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.32896040937602533, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.34071387389574936, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.34119463730625504, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.3492981063611335, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.349778860357588, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.person_id), person.death_place),person.death_place))", "score": -0.35443846570693277, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.3554937229815761, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.21463924773993023, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.23145837543678915, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.2416642818404738, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.2454550364099606, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects),movie.runtime),movie.popularity))", "score": -0.2524324029945048, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.2911969665791579, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3281525337262445, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.34768945089156283, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.38322439268876796, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id),movie.runtime),movie.popularity))", "score": -0.3860336607424196, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects),movie.runtime),movie.popularity))", "score": -0.39282335070912006, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.3934313810607601, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.3938264497724477, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.39974484050718323, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.40181867935185533, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.14574676507618278, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.17449015558695494, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3065400916306455, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.3097621930147587, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.3177636314754908, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), oscar.id),oscar.number)", "score": -0.3271010180136346, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.34746432327208093, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3642831736784086, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), oscar.category),oscar.number)", "score": -0.43517165934497193, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,1947-09-04), movie.title),movie.title))", "score": -0.4446070728804635, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4657415726180676, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4712273343013692, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.id),oscar.number)", "score": -0.4816620798276421, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4866611993126737, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1947-09-04), movie.title),oscar.number))", "score": -0.4991553950821981, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.10181793644812079, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.153532925675737, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.2019848275611879, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.22612799909064768, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2449370135481845, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.2517619000212827, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.27784298831826393, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.3262948902037148, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,>=,160), genre.name),genre.name))", "score": -0.33468061466346277, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3548709939204855, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>=,160), genre.name),genre.name))", "score": -0.3744813978037144, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.37607196266380954, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<=,160), genre.name),genre.name))", "score": -0.3866101376575337, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,>=,160), genre.name),genre.name))", "score": -0.4046895155938343, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.4063336425287287, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.0201575440569286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.42702683445349976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.4851190709723596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.6379199678758596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.7228846993511979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),person.gender))", "score": -0.7382293398241018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.7629251443995599, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.popularity))", "score": -0.7650232869182219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.popularity))", "score": -0.7721332269702543, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.popularity),movie.popularity))", "score": -0.7732019388331537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.release_date))", "score": -0.8019217307428335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,Released), movie.popularity),movie.popularity))", "score": -0.8137265291279618, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.popularity),movie.popularity))", "score": -0.8148364388598566, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.popularity),movie.popularity))", "score": -0.8186202492779557, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.8345902020791982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.22731550001889772, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2411261656074896, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2605043497912407, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2946020729264015, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3047914155303495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3077374975365052, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.31908840256846793, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3215322677765756, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.32154816312509704, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,production_company.company_id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33390623264645325, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3353429333651675, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3368589455851866, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3409263451629983, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>=,2017-08-13), company.name),company.name))", "score": -0.34473881216582936, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.350669580785775, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.15452465149487393, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.21070580038610917, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2255188537894376, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.24126275434551686, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2640165949203605, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>,63), movie.id),movie.vote_count)", "score": -0.29841493153166593, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3189398164802837, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.32464602042464735, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.33050845495156017, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.34625234770984925, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3491317704847637, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.34924742573578016, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>=,63), movie.id),movie.vote_count)", "score": -0.3516037730094166, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_average)", "score": -0.35931115989106965, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3690061984927091, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3290423410066098, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3375405174594971, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.37329863235735666, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.378529786305999, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3817272521738127, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.38506717981483374, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.39080935878424505, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.4007756560978801, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.40136861778722177, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.4051262216823494, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.40763428439988836, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.42582818339371, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.vote_count),movie.budget))", "score": -0.4296050519926826, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.42997162919667525, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.43121471685507196, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.15010550538863754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.popularity)", "score": -0.20916787385728744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity)", "score": -0.47767893190133803, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.release_date))", "score": -0.5923908633631072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.6013711773848627, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>,13100000), movie.id),movie.popularity)", "score": -0.6480554959409851, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,13100000), movie.popularity),movie.popularity))", "score": -0.6647301848497591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.6925222636637045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.vote_average),movie.popularity))", "score": -0.7156059957560501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,13100000), movie.popularity),movie.popularity))", "score": -0.7199532921877108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.status))", "score": -0.743409274284204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.revenue))", "score": -0.8144714815061889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.revenue),movie.popularity))", "score": -0.8589507556971512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),person.gender))", "score": -0.866852341358026, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,13100000), movie.popularity),movie.popularity))", "score": -0.8800221934434376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.07109829188258127, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.19952825091412407, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.24008254912605415, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.25853818339001033, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(country),country.name,=,South Africa),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.3393653448580538, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "count(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.3486431727424636, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,country.name),movie.vote_average),movie.popularity))", "score": -0.3817193080757882, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.vote_average))", "score": -0.3898197233785965, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.name,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.40988599966755457, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4187281790732607, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(language),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.42120707373766003, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4277836014128755, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.status))", "score": -0.4362909886398391, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.runtime))", "score": -0.4446178475913712, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4507522914235115, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.21981435577629077, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.2369666334520392, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.24760499022199306, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.number))", "score": -0.24776341111797323, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.2610297607219773, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.31394082573685855, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.genre_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.31735852767374667, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.3231724440304003, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.3245791825068124, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.32880505698927115, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.33381080080035413, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.33800395300679664, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.3402995418527078, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.34484117636031464, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.3472355655804543, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.07074493012623861, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))", "score": -0.4074215826112777, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.birth_day))", "score": -0.4907664491911419, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.gender))", "score": -0.5629342629690655, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.death_day))", "score": -0.5720010831137188, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.birth_day),person.name))", "score": -0.6391446090419777, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),movie.revenue))", "score": -0.6770666076918133, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.6781214703223668, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar.year))", "score": -0.6829610302229412, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.id))", "score": -0.6881087322253734, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), oscar.year),person.name))", "score": -0.7126010156353004, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,>,Topanga, Kalifornien), person.name),person.name))", "score": -0.7147268357803114, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.id))", "score": -0.7295345499296673, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar_winner.person_id))", "score": -0.7333854272146709, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,=,Topanga, Kalifornien), person.name),person.name))", "score": -0.7757972779800184, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.19982267996991102, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.2224460772973462, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.264319589424663, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.26619945804511747, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.27554141309144053, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.33069636749986947, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3313887454903147, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3352623905353439, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.3389000995935512, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.339421849450562, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3400383225461925, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.341918191166647, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.35486146130878826, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3829495832294663, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,!=,Jack Lotz), movie.id),movie.runtime)", "score": -0.4061432041177134, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.05069081326316384, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Post Production), country.name),country.name))", "score": -0.14977945262657014, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Post Production),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30507781052734734, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.3618147031504751, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), person.birth_place),country.name))", "score": -0.39016422503006865, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3902381392192312, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.39588596627284406, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4182280022144138, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.42452229608170067, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.42583259024042064, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1), country.name),country.name))", "score": -0.42702809942695824, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4281681921090574, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.42897509355488117, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.43066081412136986, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(language),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.431536325172141, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.037263093694156944, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,136),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.20398323369748028, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.23934983427065273, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35112737815985573, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35403231069399005, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.3852795670965028, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39915504081311337, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3997713975714996, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.41513981423728835, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.4174176170158884, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4235032321027823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42370880756889456, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.42488470950191004, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.4342667218897411, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.status))", "score": -0.4387758264642893, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.11801585956311815, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.12969579460425965, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.21971522370307658, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.23022486002212084, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.28252444715445685, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.3316092031132877, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.3422913151236564, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.3485660338826441, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.3501672451362565, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), movie.title),oscar.number)", "score": -0.3791822246633767, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4196022936161105, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.42289039474605733, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.431282228657252, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.sub_category),oscar.number)", "score": -0.4318991788989416, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.4345703297871988, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.24562446494522558, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.32459169985221953, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.32774439534543476, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.34642625570621816, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3465188459206269, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3495789511994334, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3496715414138421, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.35069898293948903, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.35621935089159795, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3576617781759432, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.35937204965331837, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,cast.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.37253355350176093, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2014),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(filter(getData(person),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.4007761390967306, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2014),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(filter(getData(person),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.4131606011840042, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2014),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(filter(getData(person),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.41455560405705294, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.31042602787676876, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.32177870263711406, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3301809867542353, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.351647649358665, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3662226199014087, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3691396888570383, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.3758266862441106, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.38194060522962325, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.38371465939978205, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.391464255459674, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3916763107381398, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.39558164512157706, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,has_genre.genre_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3972960789594686, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,production_country.iso_3166_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.4044487323761069, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.4045144161985157, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.06825249922855692, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1649900685763138, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,>=,200000), country.name),country.name))", "score": -0.2166105777493105, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.25409953415200187, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,200000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.28264894161446197, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2976036322481099, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,>=,200000), country.name),country.name))", "score": -0.3297569202488984, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,200000), country.name),country.name))", "score": -0.3520862699258613, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3523399648440571, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35696492648508593, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3581835344305953, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3599010826581219, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar_nominee.movie_id,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37326251457021475, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>=,200000), country.name),country.name))", "score": -0.3863973011788537, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4015387451541474, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.17173776734729979, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.18422318261869666, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.22304362855615825, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.23552904382755513, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2506409395048907, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.26087934300123466, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.30194680071374913, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),person.birth_day,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3120131813957806, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3287301931447176, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.year),oscar.number))", "score": -0.3357972301312417, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.33632146250338574, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.category),oscar.number))", "score": -0.34293344419185395, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.year),oscar.number))", "score": -0.34828265038654804, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>=,2016-03-17), oscar.number),oscar.number))", "score": -0.353955081383048, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.category),oscar.number))", "score": -0.3554188644471603, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.1392291980856666, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.19914521520147435, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2178564991398601, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.23828649375073466, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.24832065622704647, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2536464534663216, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.25727320892789884, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2723577374047073, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2759844928662846, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3020596870803381, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3117744471927461, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33048573113113183, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.3473779246190545, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3530458186485726, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.37464189675887294, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,documentary (feature)), movie.title),movie.title))", "score": -0.12080297334299137, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.12859519836060063, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.20131140527923236, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.23047754902781134, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,documentary (feature)), movie.title),movie.title))", "score": -0.26241358337684734, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,documentary (feature)), movie.title),movie.title))", "score": -0.27401499044719607, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,documentary (feature)), movie.title),movie.title))", "score": -0.28080125875240003, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.30989854273146583, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3113087897478615, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,documentary (feature)), movie.title),movie.title))", "score": -0.3142379483735956, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,documentary (feature)), movie.title),movie.title))", "score": -0.3189751133217146, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,<=,documentary (feature)), movie.title),movie.title))", "score": -0.3267673383393238, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.34047493349644053, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.3995793512877396, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,documentary (feature)), oscar.number),movie.title))", "score": -0.47609489323837606, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.18482246941152533, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.20193103908177887, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.22413072711498247, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2618595321416213, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),language.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2894805433421366, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),keyword.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3066273034270225, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),genre.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.31585730872451184, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.3283551329829089, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),movie.original_language,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3389006166802468, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3458793737009808, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), oscar.year),movie.runtime))", "score": -0.36210794976509375, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.367663390686366, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.39014429164698033, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3921073559276297, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.39745291430290974, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.07016463912441395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.22870059273554944, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.3790324959845748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.4270321363892819, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.47852957583381794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.47942545450308205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.5375684495957103, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6370655294449534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(country),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.6701498661132064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6746311183960643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6882114406616893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(genre),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.7179788980574813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.revenue))", "score": -0.7258521208165992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),cast.movie_id))", "score": -0.7392605627828743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,nb), movie.revenue),movie.revenue))", "score": -0.7527976628334727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.09575884813974891, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.16754815243510743, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1959607159886001, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.20467701726903945, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.25082986125165485, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.30884481939596725, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3438325946411244, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.3474558292378289, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.3526557169518002, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), movie.title),company.name))", "score": -0.3615540270935907, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3810762363638511, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40451477771102967, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40968144600725065, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.4117133841703735, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.41189571190625307, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.06371192713883336, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.16031640796636812, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,=,35841901),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.236665689090388, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.3233462363323007, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3384387330958656, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3443587137669349, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3569160709318579, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.35742088614422735, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3585579382262396, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.39214681207608854, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.4095523840067208, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,=,35841901),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41013231569853265, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,35841901), company.name),company.name))", "score": -0.41084698037138884, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,35841901), company.name),company.name))", "score": -0.42054257591132166, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4266557188108487, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.04556524563062261, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.15958884489693295, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.2749636654292166, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.338626678231081, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,=,2100), country.name),country.name))", "score": -0.34188730019937447, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.3557789616170869, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), person.birth_place),country.name))", "score": -0.3640854373848584, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), movie.status),country.name))", "score": -0.3737316634253701, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,<=,2100), country.name),country.name))", "score": -0.38624335345203226, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,2100), country.name),country.name))", "score": -0.3941701671444433, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), oscar.sub_category),country.name))", "score": -0.3950578695299252, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<=,2100), country.name),country.name))", "score": -0.40160676599585493, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),movie.status))", "score": -0.40316100798547716, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.42397051420047743, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.42670164379287606, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.10131219161712567, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.21438302235095336, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.24902659081026435, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.25784062167948024, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.death_place),person.birth_place))", "score": -0.3140720911138547, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),person.name,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.33970347572398796, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3494836539914696, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3667179714050463, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.36849052097989904, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.37178007532152296, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3735526550279077, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3751204234388737, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.37599586284552333, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3777684189573864, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.38148980657743764, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.046924342452257406, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.30512571410195577, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.311188345336679, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.37203464080157544, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3780972720362986, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.39559293837484166, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3984119527402958, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.4016555696095649, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.40447458397501895, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.41801919297197115, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.42344281945625717, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.42950545069098034, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.46532087943991546, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.46691671810685437, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id), movie.vote_count),movie.vote_count))", "score": -0.4795973958270141, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))", "score": -0.1890083528996911, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.death_place))", "score": -0.21502499058260582, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.death_place))", "score": -0.3114976860524621, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,m),person.death_place), person.death_place))", "score": -0.3688346438430017, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,m),person.death_place), person.death_place))", "score": -0.4318628527544206, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,m),person.death_place), person.death_place))", "score": -0.47026983577234205, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,m), person.death_place),person.death_place))", "score": -0.6232584482931998, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,m), person.death_place),person.death_place))", "score": -0.6492750859761145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.revenue,=,m), person.death_place),person.death_place))", "score": -0.6556662447692361, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,m), person.death_place),person.death_place))", "score": -0.6737870104552712, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.name))", "score": -0.7068673619942274, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.712628460576525, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_day))", "score": -0.7214202532486524, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.name))", "score": -0.7328839996771421, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,m), person.death_place),person.death_place))", "score": -0.7352051861525979, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.0972705318563385, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1927-07-04), person.name),person.name))", "score": -0.43104181000671815, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_place))", "score": -0.4405255730234785, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),movie.revenue))", "score": -0.45757649494044017, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1927-07-04), person.name),person.name))", "score": -0.47239530393562745, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.name))", "score": -0.49814711356157204, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.death_place))", "score": -0.5933969452380552, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),language.name))", "score": -0.6271686966501875, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),cast.person_id))", "score": -0.6333854611002607, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), movie.id))", "score": -0.6456980847142404, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_day))", "score": -0.6478323156916304, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.6855518341035349, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.gender))", "score": -0.6883379633509321, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1927-07-04), person.name),person.name))", "score": -0.6961532256536884, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.death_day))", "score": -0.7029413118361845, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.1302157386414899, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.20240581497505622, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.2354540433741017, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.24104754514818524, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.2463994594733147, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_day,<,89), movie.id),movie.popularity)", "score": -0.28504814086908475, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.2934757266447065, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.person_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.31446637784491804, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_place,<,89), movie.id),movie.popularity)", "score": -0.3163508910630574, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.32436055611739806, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.3256549938232388, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.popularity),movie.popularity)", "score": -0.3462858498807971, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.popularity),movie.popularity)", "score": -0.35723125662266186, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.37489677313319814, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar_nominee),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.38115872741532647, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.vote_count))", "score": -0.2534441978314135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.original_language))", "score": -0.273808765468857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.34361380642440054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.39293336426999304, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.original_language))", "score": -0.4132979319074366, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.vote_count))", "score": -0.4541660056092951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.budget))", "score": -0.4726406962254259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.original_language))", "score": -0.47453057324673864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.4831029728629801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.vote_count))", "score": -0.4976884231546137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.original_language))", "score": -0.5180529907920572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5209215738930122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5240452041115001, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5386612902672117, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))", "score": -0.5443356142022822, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.3470088995381957, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.35326195833840757, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.4069870817438641, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.id))", "score": -0.4220675907417899, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.vote_count))", "score": -0.4544193975016242, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.id))", "score": -0.5294780887052184, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.5328142761572963, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_average))", "score": -0.5515896759316092, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.revenue))", "score": -0.5690769038483268, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5932692992464581, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_average), movie.id))", "score": -0.6078729673608905, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.631467770315794, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_count), movie.vote_count))", "score": -0.6402247741207248, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.title,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.6450153856858378, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.6469944226519146, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.03339675909388178, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.30895540588201303, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.4309925746106337, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5032399954788848, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5073191006161131, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5318219327856497, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_count)", "score": -0.5705950554187279, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.runtime)", "score": -0.576765355371147, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5795665214843642, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.6040693536539007, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.608148458791129, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6162973843077141, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>=,pl), movie.id),movie.vote_average)", "score": -0.6448803136617843, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.6728560778133755, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.674743429280182, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.10850634246125196, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.1308046575677251, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.22594987227812857, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.25331120651016853, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.2758315748488997, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), movie.title),company.name))", "score": -0.2837399650171158, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.29446172314587704, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.31769914193696125, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.3356898145657089, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), genre.name),company.name))", "score": -0.3421613072232977, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),movie.title))", "score": -0.3447935268778454, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,>,2012-08-06), company.name),company.name))", "score": -0.38715337031214236, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),movie.title))", "score": -0.3874750868843104, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>,2012-08-06), company.name),company.name))", "score": -0.3899088633240448, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), movie.title),company.name))", "score": -0.39360819225988103, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.1285855565053968, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.14663459968434306, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.21865722436675736, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2950439409206101, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2970653264124144, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.3077689783723899, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.32662948261021296, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3441140668562068, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.361087066308797, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.37216485009308414, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.39263863967470836, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.39286532116666617, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),person.name))", "score": -0.39693600741860413, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4174130447007884, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.4209201146076381, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.15280362505416303, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.15961350844731315, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.1712434218640609, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.1824053137687337, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.22689142202325768, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.27746267846901884, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.31133707513530057, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.322210499843603, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),country.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.32685192829967735, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),country.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.3332274173489476, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.33786930718719643, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3450023051650235, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),country.name,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.3470825136703957, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),oscar.category,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.34873836878267717, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar.category,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.3630868797001072, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.23404486486099685, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.24159483162271664, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.2614037638643176, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.2983351461531113, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3058851129148311, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3181696982469971, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.325694045156432, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3257196650087169, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.330808655648952, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.336573235835453, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3455285972503178, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3824599795391116, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.39000992078079083, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(has_genre),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.39132849641098416, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.popularity),movie.popularity)", "score": -0.39455401636924076, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.24776206933529465, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.46752402996935416, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.title))", "score": -0.5396469088700542, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.title),movie.vote_count))", "score": -0.553925575917674, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.6), movie.vote_count),movie.vote_count))", "score": -0.5625081399884948, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.6), movie.vote_count),movie.vote_count))", "score": -0.6040295700040588, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), oscar.number),movie.vote_count))", "score": -0.6155183336195478, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.budget),movie.vote_count))", "score": -0.6304084977564344, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count)", "score": -0.7123619467090866, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.budget))", "score": -0.717220530143095, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),oscar.number))", "score": -0.7282370480206737, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), person.death_day),movie.vote_count))", "score": -0.7296450755056867, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.id),movie.vote_count)", "score": -0.7341185507765052, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count),movie.vote_count))", "score": -0.7558077925374729, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.runtime),movie.vote_count))", "score": -0.7564269325193891, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.028816477006330388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,tr), movie.id),movie.popularity)", "score": -0.4171609071118193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.4290420416901175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5299555623092357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.537485339650775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5711206969871286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5792671251263471, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5986265513004687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.6271261852099221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.651999741151499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.660146160291992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.id),movie.popularity)", "score": -0.6636219006555255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6640199426714148, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6721663708106334, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.release_date))", "score": -0.6763643618505739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.029428863976255687, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.24749935667351092, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,>,0.041651), country.name),country.name))", "score": -0.28430450471362856, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), movie.status),country.name))", "score": -0.3308941956929027, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.3572138134805685, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), person.birth_place),country.name))", "score": -0.3726991395099403, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.396411686450115, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.gender,<,0.041651), country.name),country.name))", "score": -0.39897315646437664, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,0.041651), country.name),country.name))", "score": -0.39929294181489816, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.sub_category),country.name))", "score": -0.4018096008071353, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),movie.status))", "score": -0.40375459278788084, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.category),country.name))", "score": -0.4042875740020551, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), genre.name),country.name))", "score": -0.4120935900508648, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), production_country.movie_id),country.name))", "score": -0.4136331883454458, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.movie_id,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.41368023492774, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.11036727784812683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.title)", "score": -0.21056547777175819, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.4224862180804401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.budget)", "score": -0.45561005770013047, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5100785596626306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),oscar.number)", "score": -0.5254586802140602, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5393464859174192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5718356483807908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title)", "score": -0.57261208962361, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.id),movie.title)", "score": -0.6044619066041865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,oscar_nominee.movie_id), movie.title),movie.title))", "score": -0.6242806262210714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,10.4764), movie.title),movie.title))", "score": -0.645385261370393, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,oscar_nominee.movie_id), movie.status),movie.title))", "score": -0.6738394105430492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.runtime)", "score": -0.6833198008584764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.vote_count)", "score": -0.6891005978502679, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.021700217359466478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.4159361058555078, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.5781273180327844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6236805554653984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.6489660674415063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.vote_count),movie.revenue))", "score": -0.7162881728436332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), person.death_day),movie.revenue))", "score": -0.7179339762951713, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7664640063594561, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), cast.movie_id),movie.revenue))", "score": -0.7664693828846794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7687509769748431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.name))", "score": -0.7806478852580767, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.8043440219189506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,69), movie.revenue),movie.revenue))", "score": -0.8051718736824114, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_average))", "score": -0.8147423977206927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_count))", "score": -0.8200925106357317, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.18845070759697813, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.19032379193559607, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.22282785255027449, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name)", "score": -0.26129545658174647, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.38272329284677375, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,5.2),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.38690602702420496, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.39714197026474307, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name)", "score": -0.3977829491433465, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),person.name))", "score": -0.41916341975720195, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.4206712143786717, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),person.name))", "score": -0.4255320003825139, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.4396785867791186, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),person.name)", "score": -0.4397652213363253, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name)", "score": -0.4457962398201761, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), person.name),language.name))", "score": -0.45312612633622745, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.09529978948126487, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.21888868657262786, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.264065590439748, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2694871766789016, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.27415433934426886, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2743382577622713, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2810896098178385, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2846521594364804, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.2853731420105769, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3169864419872828, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),person.death_place,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.33069667262765545, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.3505636863258995, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.36161114469008204, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(cast),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.37451253515487415, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Action), movie.runtime),movie.runtime)", "score": -0.3751341752855299, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.17835819304013056, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.19878394806499616, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.20550313967378092, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.21403014062163606, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.2270280149013585, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.id),oscar.number)", "score": -0.25701348513000316, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),oscar.number)", "score": -0.28664161143582884, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.3538326662178765, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.runtime),oscar.number)", "score": -0.3637783465152461, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.3674315630074152, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id), movie.title),oscar.number)", "score": -0.3860406573809332, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.38785731236116067, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.sub_category),oscar.number)", "score": -0.3978806281464587, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.40201298525963186, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.4409441782706135, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))", "score": -0.013750781530688982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.release_date),movie.budget))", "score": -0.5481262158064055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.budget))", "score": -0.6527054260877776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.release_date))", "score": -0.6622190992275137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.revenue),movie.budget))", "score": -0.6715943168310332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.revenue))", "score": -0.696783475104894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.budget),movie.budget))", "score": -0.7176743894742685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.title),movie.budget))", "score": -0.7517378877309966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.title))", "score": -0.7711779992023367, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Rumored), movie.budget),movie.budget))", "score": -0.7911521941350657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,!=,Rumored), movie.budget),movie.budget))", "score": -0.812103882424708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.vote_count))", "score": -0.8124093930164236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.budget),movie.budget))", "score": -0.8179028779195505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.budget),movie.budget))", "score": -0.8251942038114066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.vote_count),movie.budget))", "score": -0.84396641956846, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.14503566088557837, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.17893882835491462, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.19090471091596942, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.21479836497217225, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Labenne), movie.id),movie.vote_average)", "score": -0.2961930666863724, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(getData(person),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3325751281673148, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.3439752963084892, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.35496717929757327, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3652846305660237, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.gender,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3759471451061588, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3760453025524344, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.37787846377782547, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3856404879011024, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.3888703467669095, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3891782846222266, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)", "score": -0.034011628760696654, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<=,177), movie.id),movie.vote_count)", "score": -0.43527849883287995, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,177), movie.id),movie.vote_count)", "score": -0.49599091212536944, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.vote_count),movie.vote_count)", "score": -0.5607405836141693, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<=,177),movie.vote_count)", "score": -0.6683926709156645, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<,177),movie.vote_count)", "score": -0.7161305731160539, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_average)", "score": -0.7444845224710944, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.budget),movie.vote_count)", "score": -0.7758929852989177, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.budget)", "score": -0.7855159630067724, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.runtime)", "score": -0.7945799458921952, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,177), movie.id),movie.vote_count)", "score": -0.9316375240069392, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.revenue),movie.vote_count)", "score": -0.9349316861277056, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,177), movie.id),movie.vote_count)", "score": -0.9390392540663485, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.revenue)", "score": -0.9397844099409455, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),person.death_day)", "score": -0.9525704420783041, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.12304352973313108, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.18807524368226242, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.2538871608864966, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.25602639887968853, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2585504781603104, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.29336837132302973, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3003161532010677, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.30165746278202804, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.32105811282881985, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.34098815857473624, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.3434231378227853, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects), movie.title),movie.title))", "score": -0.3552527487531116, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.title))", "score": -0.3748345754767621, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,visual effects), movie.title),movie.title))", "score": -0.3761823331290081, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.title,=,visual effects), movie.title),movie.title))", "score": -0.3782224133949278, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.02740168022929631, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.33040663875956167, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.36576265369510547, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.36638321723647294, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3758909434792464, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),company.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.39831259349781695, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4008512776664768, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.40382408159858263, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(language),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.41790597818435293, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.41932185563400154, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4268017780873524, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),person.death_place,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4274472029438056, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.42762938137781, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4288299791358903, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(has_keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4315302410603604, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.24345874958992705, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.26201849739585115, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.29527460366940655, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3137888101122642, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.3138343514753306, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.32786570985999597, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3315177252089222, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.3323485579181883, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.34642545766592003, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.35007747301484626, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3656046641917437, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.37601726721280254, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3796815639394754, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.movie_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3830978489723145, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3833335792884016, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.09976782020499769, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.15209541386095626, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.16780106219720808, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.18548820812153524, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.30331636578732407, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,7.1), company.name),company.name))", "score": -0.3059238962620196, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.31317234293463864, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.35564395944328264, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,7.1), company.name),company.name))", "score": -0.3582514899179781, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<=,7.1), company.name),company.name))", "score": -0.36382782671024777, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,<=,7.1), company.name),company.name))", "score": -0.36878210736679756, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>=,virginity), company.name),company.name))", "score": -0.3815358802796257, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,7.1), company.name),company.name))", "score": -0.3846675941158592, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,7.1), company.name),company.name))", "score": -0.38845538205158825, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), movie.title),company.name))", "score": -0.3905100106887916, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)", "score": -0.0374862750306033, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,127), movie.id),movie.popularity)", "score": -0.4167844768569541, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,=,127),movie.popularity)", "score": -0.5084400039668991, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,127), movie.id),movie.popularity)", "score": -0.5543979811425855, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,127),movie.popularity)", "score": -0.7207269581502065, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity)", "score": -0.7230637128676776, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,127),movie.popularity)", "score": -0.7387946340001262, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,127), movie.id),movie.popularity)", "score": -0.8647260506077411, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.runtime)", "score": -0.8806970392259603, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.revenue)", "score": -0.8863646013384173, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,127), movie.id),movie.popularity)", "score": -0.9074135866273665, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,127), movie.id),movie.popularity)", "score": -0.9204387998937266, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,127), movie.id),movie.popularity)", "score": -0.9283378908714118, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,127),movie.popularity)", "score": -0.9364856500061273, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.release_date)", "score": -0.9409332404181769, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2431785180452276, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2462748614081725, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2613805128905186, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.26511397666095565, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.30470290872363703, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.31552220988729457, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3229049035689281, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3687621281922779, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.37130130906894754, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.37240489705931995, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.37810185239833577, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3805875737597177, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.38638686976877873, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), oscar.year),movie.runtime))", "score": -0.3920091148211792, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.39862490229371067, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3211695782425915, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.32226481815450825, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3278798873377206, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.36901032435604525, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.37572063345117435, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.37790161880490697, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.38424969991319813, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.38461192790003607, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.38511424395005034, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.38968420316645047, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3907307798483633, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.39182455304517944, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.39239540477865376, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.39639451226157957, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3974410889434924, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.05553424096762802, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), company.name),company.name))", "score": -0.10991489741984128, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Original Sin), company.name),company.name))", "score": -0.257139502665729, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Original Sin), company.name),company.name))", "score": -0.3553938971645121, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Original Sin), company.name),company.name))", "score": -0.3656550268769232, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Original Sin), company.name),company.name))", "score": -0.37573689533443705, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), movie.title),company.name))", "score": -0.3797401641113678, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,=,Original Sin),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38980390013614774, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,Original Sin), company.name),company.name))", "score": -0.4101185164657295, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),movie.title))", "score": -0.4127937372909638, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4136995708307549, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4142553232502969, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.4288069843435625, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), movie.title),company.name))", "score": -0.43412082056358103, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.4364030074519681, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.10153629101568656, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2590337574979112, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.28661648750660856, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.28700761558696636, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2936251409012717, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3122379878153615, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.3123846017959757, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,>,ar), language.name),language.name))", "score": -0.328547878371371, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(spoken_language),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.32956579473454123, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.33127365486647414, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.3381283340861611, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), person.name),language.name))", "score": -0.3400387085504116, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.34293643220085707, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),person.name))", "score": -0.3544611966473307, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3569973672253907, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.04779272308076584, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.28167999228134233, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.29505083561961926, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,5.2), company.name),company.name))", "score": -0.3723036440388216, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2),company.name), company.name))", "score": -0.37485182288701746, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),person.birth_place))", "score": -0.3910604086428425, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.3956176806255422, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), movie.title),company.name))", "score": -0.39604959978530546, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),movie.title))", "score": -0.400652799601071, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,5.2), company.name),company.name))", "score": -0.4008211037310546, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), person.birth_place),company.name))", "score": -0.4219223363017301, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4243761063323315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.4245178342346074, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),production_company.company_id))", "score": -0.43141481773460655, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.43189531907454065, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_day))", "score": -0.21481679585849633, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_place))", "score": -0.3209267651764094, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.3597864812472835, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.gender))", "score": -0.4484788125482737, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_day))", "score": -0.4758264182237326, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_day))", "score": -0.4861094413427054, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_place), person.birth_day))", "score": -0.498693263354653, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.birth_day), person.birth_day))", "score": -0.540894274796301, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.name))", "score": -0.5540290420976817, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_place),person.birth_day))", "score": -0.5637455886462703, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_place))", "score": -0.5819363875416457, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), crew.person_id))", "score": -0.5840098505941569, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_place))", "score": -0.5922194106606185, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.id))", "score": -0.5928489511934458, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_place), person.birth_place))", "score": -0.6048032326725661, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.03017965103572351, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.32803185801094514, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.title))", "score": -0.46371294795608264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.title),movie.release_date))", "score": -0.5381671982358966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.budget),movie.release_date))", "score": -0.5745527344297443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,424), movie.release_date),movie.release_date))", "score": -0.5962384245831345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.6105103991467331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.6458916673010395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.budget))", "score": -0.6631737822208379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.title))", "score": -0.7615651549313043, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,424), movie.release_date),movie.release_date))", "score": -0.7648453665788111, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.7826588945936237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.runtime),movie.release_date))", "score": -0.8028568821500812, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.title),movie.release_date))", "score": -0.8360194052111183, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.runtime))", "score": -0.8531650775585149, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.013400926443864591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,160583018), movie.vote_average),movie.vote_average))", "score": -0.5361330827727215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,160583018), movie.vote_average),movie.vote_average))", "score": -0.5675292333617108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_count))", "score": -0.5698719718056964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_count),movie.vote_average))", "score": -0.5753252782888012, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.runtime),movie.vote_average))", "score": -0.6897424140042858, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.runtime))", "score": -0.7591918208199786, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.7936855696170824, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8219506882160204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.original_language))", "score": -0.8361341454583453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.popularity))", "score": -0.8574119307595538, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.popularity),movie.vote_average))", "score": -0.8611865916318493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), person.name),movie.vote_average))", "score": -0.8771796503133373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.status))", "score": -0.8871766426163958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8910806320636766, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)", "score": -0.03057873234640816, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,3.7), movie.id),movie.popularity)", "score": -0.4152280583650813, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,3.7), movie.id),movie.popularity)", "score": -0.5252279235501607, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,3.7),movie.popularity)", "score": -0.6146636194404792, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,3.7), movie.id),movie.popularity)", "score": -0.6175941933098205, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,3.7), movie.id),movie.popularity)", "score": -0.6993912070173911, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,3.7), movie.id),movie.popularity)", "score": -0.7535941162051125, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.runtime)", "score": -0.7920849963733244, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,3.7), movie.id),movie.popularity)", "score": -0.8229702489808247, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,3.7), movie.id),movie.popularity)", "score": -0.8562481031960191, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.release_date)", "score": -0.8617059291948023, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.popularity,=,3.7),movie.popularity)", "score": -0.8684102742662604, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.revenue)", "score": -0.8735531128049938, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.popularity),movie.popularity)", "score": -0.9120226323713255, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,3.7), movie.id),movie.popularity)", "score": -0.9242907310457127, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.1524936221490631, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.15434536536666166, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.19348287442796883, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.21116072675900494, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.2619117349707082, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.29712461613756963, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.30648441627664, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.313823843837876, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.31417901841436086, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3160307616319594, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3161798519774212, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3341750692645459, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3406043685300106, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.3470069109622475, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.3550568527481392, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
