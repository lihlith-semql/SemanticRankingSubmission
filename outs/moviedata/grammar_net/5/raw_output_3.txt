{"index": 0, "beams": [{"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.09140508521783139, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.16387187862327576, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.26932348325764915, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.2978631469007648, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.34179027666309353, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3418306919006773, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.35930007895985994, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36147507262201467, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36317550697300305, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3644124043387679, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3703299403062092, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.37071998747206697, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3732383039413547, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3814636330567362, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3891518821642253, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.07440741948401869, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.1829071480873614, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.2357823674752029, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.27044999891820487, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.318758431863202, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.3766011382051125, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(production_company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.3964438484888567, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3977621262922016, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.name,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.408896910607082, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.41457640556054043, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.42119682509214534, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.movie_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.42998615904007387, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.4411552776187874, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_average)", "score": -0.44143802743331156, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.44391892186671156, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.12204658503004727, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.1706375579246355, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.2573588094069625, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.30594978230155073, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.3148970427308671, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.3180579687897051, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3302661851092477, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.number))", "score": -0.3364966063006302, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.runtime))", "score": -0.34754752395981026, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.3557265111422882, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),person.name))", "score": -0.35949067216308633, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.36348801562545535, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.3651397515991627, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.36664894168429335, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.37369234538323143, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),cast.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.31227197896202935, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3274401988169012, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.33097509039604084, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3592196173752511, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.36319723127687265, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3819342325455353, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3820498713654231, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3823728315203339, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3826750588529706, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3827098141789055, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3830327743338163, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38807046359332015, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38839342374823094, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38873040640680245, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38905336656171324, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.budget),movie.budget))", "score": -0.16437474582562572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,The Last Legion),movie.budget),movie.budget))", "score": -0.39679393489132053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.revenue),movie.budget))", "score": -0.4730518901742471, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,<=,The Last Legion),movie.budget),movie.budget))", "score": -0.5337938553675485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.vote_count),movie.budget))", "score": -0.541789844075538, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.5610574312787842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,The Last Legion),movie.budget),movie.budget))", "score": -0.5701756807065976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.5858079597337089, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.revenue),movie.budget))", "score": -0.6019743709069346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.602246155671829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget),movie.budget))", "score": -0.6103374728479466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),getData(movie),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.6218075297393518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.title),movie.budget))", "score": -0.6268343174851907, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.6269966841267539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget),movie.budget))", "score": -0.6350880013028714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.2754660370445296, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.29481320474143535, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),oscar.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.30941565627071566, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3237988611110449, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.33965673278205427, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.34899266982455834, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3492284327256798, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.3551728194282375, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.3601147203911473, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.36239953624402355, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3640588313240002, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3743014394344322, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,genre.id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.3885159175266394, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.39396258967559145, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(person),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,movie.id),person.id,has_genre.genre_id),person.gender,=,f),genre.name), genre.name))", "score": -0.3993051679019132, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.031465867175619125, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.21867568686560002, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.35393072091079325, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(has_keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3678497761823986, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,497), keyword.name),keyword.name))", "score": -0.38566213500954805, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,production_company.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3918120268151162, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4056471534312613, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), oscar.sub_category),keyword.name))", "score": -0.41037640919197577, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.movie_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.412437634662807, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4196338484863595, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(company),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4242035180822441, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4279054876594343, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.keyword_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42893240309547276, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.movie_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4313653306092984, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),oscar.sub_category))", "score": -0.440396566728589, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.041113947227131575, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.3933664371143095, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.42964145744917914, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.birth_place))", "score": -0.5148089217836969, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.gender))", "score": -0.5903604018385522, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.5976321375278364, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6046518565815592, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6231050004134886, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6476921572320862, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6539375377211418, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6541866768966429, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6609572567748646, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6985838522086851, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),company.name,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.7303404320846312, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),country.name))", "score": -0.7371242034132592, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.05985768546779115, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))", "score": -0.11138205465013425, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,nl), country.name),country.name))", "score": -0.24584202497437493, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2788959086857072, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,nl), country.name),country.name))", "score": -0.32037613090573924, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,nl),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3673806527919055, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,nl),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3751133109112234, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), movie.status),country.name))", "score": -0.4024819153714129, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.42394832784736514, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),movie.status))", "score": -0.43655143578677946, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.43725534765121454, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),person.birth_place))", "score": -0.442914005337081, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4511181141984869, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.45672779708287187, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),person.gender))", "score": -0.46046048540124856, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3620504592372454, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.36700074610141364, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.3693399475369813, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3852444972010019, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.39019478406517016, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.3938803161939547, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.39883060305812296, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.40139195513937564, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.4014539672549857, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.40370747798546375, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.4064042278870485, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar.id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.4170743532208503, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.43575964206754303, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.4463519797146977, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),filter(merge(merge(getData(oscar_nominee),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.death_day,>,40),oscar.id,oscar.id),person.id,None),None,None), None),None))", "score": -0.5416522019203367, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.12490101996081648, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.26438822689669905, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.30720510426181136, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.4763169521393138, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.id))", "score": -0.4899217123092967, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.5090228412227589, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.5408028134843335, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.popularity))", "score": -0.5810065362529713, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.vote_average))", "score": -0.6224476331772166, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.6485100481586414, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.title))", "score": -0.6700736517013866, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.6913269255237537, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.original_language))", "score": -0.6989323729576427, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.706840209888469, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.status))", "score": -0.7204937431888538, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.011655531099677319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.5284425175959768, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.628795148779318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,48000000), movie.original_language),movie.original_language))", "score": -0.6840484894091787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.6852089022031578, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.original_language),movie.original_language))", "score": -0.7349472797686758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.revenue))", "score": -0.7570392940870079, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,48000000), movie.original_language),movie.original_language))", "score": -0.7612199636387231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.794052943794668, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,48000000), movie.original_language),movie.original_language))", "score": -0.794092461674154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,48000000), movie.original_language),movie.original_language))", "score": -0.7961255761074426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,48000000), movie.original_language),movie.original_language))", "score": -0.8239118309902551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.vote_average),movie.original_language))", "score": -0.838809670854971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.8426140565170499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,48000000), movie.original_language),movie.original_language))", "score": -0.8524179907726648, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.05555627846695783, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,No Language), movie.id),movie.budget)", "score": -0.23970395944351058, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.2579681146721803, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.4704710987241794, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5715404066704348, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5924438833858727, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,No Language), movie.id),movie.budget)", "score": -0.6525979773449079, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.654627706502565, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.6855773496625234, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),oscar.number)", "score": -0.6869629461435, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.vote_count)", "score": -0.6955408374549251, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.budget),movie.budget)", "score": -0.6966123662548394, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.7041707673190788, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,No Language), movie.budget),movie.budget)", "score": -0.7117119005513105, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),person.death_day)", "score": -0.7199080345786127, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.0952909051120514, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.13106036024692003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.5176262913882965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>=,2004-03-05),movie.revenue), movie.revenue))", "score": -0.7081107465273817, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.711273641004853, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2004-03-05),movie.revenue), movie.revenue))", "score": -0.7154821796066244, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7164941200175778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7304725284925732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7356930075052979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7566796094665419, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7588326332770521, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7619000530381328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7946020884119207, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.popularity),movie.revenue))", "score": -0.8055237722728634, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2004-03-05), movie.revenue),movie.revenue))", "score": -0.8293865083396668, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))", "score": -0.1422711631130369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.id),movie.popularity)", "score": -0.21067350709549285, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.budget,=,5500000),movie.popularity)", "score": -0.43303136427198125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity)", "score": -0.5494237375284291, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,5500000),movie.popularity)", "score": -0.5755841097517653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.original_language,=,5500000),movie.popularity)", "score": -0.6127770029437106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,5500000), movie.popularity),movie.popularity))", "score": -0.6629411167778017, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.popularity),movie.popularity))", "score": -0.7296784379832388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.title,=,5500000),movie.popularity)", "score": -0.7686179642612789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))", "score": -0.8121318786797929, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.id),movie.popularity)", "score": -0.8196033927506408, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.release_date))", "score": -0.8620687213806377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.revenue,=,5500000),movie.popularity)", "score": -0.8638055365114127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.status))", "score": -0.9038676706222759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.budget,>=,5500000),movie.popularity)", "score": -0.9193277013294264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.02290264077235521, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.2788306530939055, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.3518330716724121, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.37216632353053464, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),production_company.company_id))", "score": -0.3777871810321036, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.3910715597659986, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),company.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.39394295443277877, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4062327186940074, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40714514673335717, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.41466115532148234, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4257393114301955, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.id),company.name))", "score": -0.4271229667977504, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4338610370991366, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.id))", "score": -0.43981802551290167, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.44243587766405656, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.10681128718595786, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.13908188819183404, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.15061812181403442, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2315005995682119, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2634817982746393, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.2795774210591908, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.2803167077772979, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2831950158302613, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.31517621453668876, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(has_genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3378661068360204, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3656876007665193, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.38154655751065086, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.38880318583463597, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.40214674132764866, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.41141594541192344, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.11007823171927575, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.1501238020530295, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.1874375396534931, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.2520397147100769, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.28829653963844104, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.29942393273014056, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3069894780705669, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.31811687116226645, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_keyword),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.31814332456698446, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.31988679555170446, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3691951741330645, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3731321083940312, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3830522071634248, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.38737975796759533, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),country.iso_3166_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.41538222835874844, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.04550076500381031, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.runtime),movie.runtime)", "score": -0.22718824165421195, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.24384636528075274, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.runtime)", "score": -0.2929031128590775, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3566192354881973, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.36905140293142735, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.release_date),movie.runtime)", "score": -0.3791137207111735, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.name,production_company.company_id), movie.id),movie.runtime)", "score": -0.40228189020336586, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4183191477373669, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(oscar_nominee),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4253118475509457, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.43335748297176907, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,company.name), movie.id),movie.runtime)", "score": -0.4362436151071275, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.runtime),movie.runtime)", "score": -0.4520899757329406, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.id),movie.runtime)", "score": -0.4540810395731778, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4549191855086327, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.11168493179583956, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.15310357168430405, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.2025245557465581, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.20797594285737558, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.24939458274584006, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.31601549485634334, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.349655057029387, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_country.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.35115493381662183, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,<,260095987), genre.name),genre.name))", "score": -0.35459068177939296, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),language.iso_639_1,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3558356798022944, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_average,>,260095987), genre.name),genre.name))", "score": -0.36600895758916085, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3839174212113482, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.389729218652062, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3905347479999273, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), person.death_place),genre.name))", "score": -0.390689447441547, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.24416545471420534, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1), country.name),country.name))", "score": -0.30658015673399136, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3115975700246768, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.32193443396363675, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32721865598650657, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.33356676833602417, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<,1934-03-28), country.name),country.name))", "score": -0.3419336876747867, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.35268787438908406, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.36540847702455725, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.3687526588831847, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3888969500784228, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<,1934-03-28), country.name),country.name))", "score": -0.3909762943616815, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3914985754510782, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3917156699512969, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.3932285694755767, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.15724426781007175, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.22044032235285438, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2364154685032245, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.24850647808943, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2509500866248392, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.25385500221894763, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.movie_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.28363925328776535, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.runtime,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2885212846863398, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3117025326322126, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3141461411676218, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.31705105676173023, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.32767767878258275, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.33012128745976993, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.33302620305387837, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3451172126400838, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.17753099351830315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.197300416228245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3231600791186793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3862103193969233, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4051808387011988, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.40597974210686516, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.45392289459414314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4875915002048714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5073609229148133, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5318394049972994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5594561070174677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5675350975216134, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.587304535365547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.6138601797138108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>,1984-05-01),movie.revenue), movie.revenue))", "score": -0.6918414001411293, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.027164808139787056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2012-04-19), movie.runtime),movie.runtime))", "score": -0.46540137160627637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2012-04-19), movie.runtime),movie.runtime))", "score": -0.4673861466726521, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime)", "score": -0.6875493648635632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.title))", "score": -0.6950106922449777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.release_date))", "score": -0.7007479373278329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.7099434954725439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.749692998608225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.839015565594309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8619307233457221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.title),movie.runtime))", "score": -0.8722270376892993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.vote_average),movie.runtime))", "score": -0.8807382233353565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.id))", "score": -0.8962479535402963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime))", "score": -0.8991701848717639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2012-04-19), movie.runtime),movie.runtime))", "score": -0.9116796158632496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.10383754641225096, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.2491171046517938, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.2760977265815103, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.30015651055625703, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3222731273496619, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3271371324859736, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3416501793250334, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.34340426545363284, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.36863080125474995, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3706568715046216, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.38087381246119495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3917880096085926, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3926895760923293, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.4027226980693868, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,production_country.iso_3166_1),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.4059775508553304, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.02932311328368087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.3303206517757644, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.40520050669329066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_average))", "score": -0.7260363452533056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7271506741108169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_average),movie.vote_count))", "score": -0.7292458553729375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.id),movie.vote_count)", "score": -0.7427474817184624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.title))", "score": -0.7457704894641211, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7855726927682554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.785770948177742, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.title),movie.vote_count))", "score": -0.7996161122737249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.801527366058508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8161586374208127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8525705888332595, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.852820902962776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.09276107483911844, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.1918896051084544, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.2699728172844148, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.28855914001020455, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.290030323794966, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2985336670981002, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3078351061929706, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.32655807998787034, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3461264745048526, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.34867215809853636, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.35880970957594827, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.36365320542970503, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.38915884924384986, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.number)", "score": -0.3932792951964181, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),crew.movie_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.3989399925497027, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.03197902834290289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.40711755885058665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.5444746959970932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6269586158196034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6378554238217475, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.id),movie.original_language)", "score": -0.6438599564377311, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6513235701459053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), language.name),movie.original_language))", "score": -0.6665438499512675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.7579801750580373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.vote_average),movie.original_language))", "score": -0.777890929228306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.revenue)", "score": -0.786838815521463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),company.name,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.798441721333802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.810790637645587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.title))", "score": -0.8215616503475758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.popularity),movie.original_language))", "score": -0.824652084356785, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.029472956543031614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.name),person.birth_day))", "score": -0.46940668590104906, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.gender),person.birth_day))", "score": -0.5592153585675987, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.5875799968998763, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.name))", "score": -0.5903886478554341, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6003471926014754, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6183435037892195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.death_day))", "score": -0.6228614371430012, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_place),person.birth_day))", "score": -0.6240274823430809, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_place))", "score": -0.6260844987045857, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.gender))", "score": -0.6357515376221272, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6681114152233931, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),crew.person_id))", "score": -0.6689709346901509, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.id))", "score": -0.7541548531662556, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.death_day),person.birth_day))", "score": -0.761842182946566, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.14602669382689526, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.153851971553296, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.1632881208516919, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.16338544220518098, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.25389079227778133, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2546395880936967, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2567025339869443, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.28831538374482063, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2934037632764864, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3342828215230232, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.category,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.34745754749036245, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3508237386036316, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.year,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3729366448018262, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,), movie.title),movie.title)", "score": -0.37402332894539153, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,London, England,), movie.title),movie.title))", "score": -0.381321480054472, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))", "score": -0.03697850085518439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,32.8412), movie.status),movie.status))", "score": -0.3840994964884885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.title),movie.status))", "score": -0.43136879425219377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.title))", "score": -0.4704656963767775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), country.name),movie.status))", "score": -0.6168213449018367, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.popularity))", "score": -0.6320574348392256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,32.8412), movie.status),movie.status))", "score": -0.6489061545180448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.original_language),movie.status))", "score": -0.6511403284566768, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.vote_average),movie.status))", "score": -0.6587708554761775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.release_date))", "score": -0.6759125655116804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,32.8412), movie.status),movie.status))", "score": -0.6778384279059537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.sub_category),movie.status))", "score": -0.6880502067106136, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.popularity),movie.status))", "score": -0.694395359565533, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.category),movie.status))", "score": -0.7080135903852351, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,32.8412), movie.status),movie.status))", "score": -0.7444656323241361, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.16655751951804593, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.17955948045468864, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.200105454729943, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.22086793828822657, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2337732914259586, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2808165234254691, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.2825965141988971, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.homepage,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.28696892705217625, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.30831235754777125, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_average,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.31912053414946795, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3223735210702527, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.33558691495102416, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),keyword.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3616828165344097, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,>,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3728023271855057, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_place,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3770755211753404, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.1758762630011829, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.21105063584406056, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.2323803201685072, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.23628970759700094, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.2951711870227018, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.3026420563278467, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.3224314826921956, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.3287877082795421, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.32912294498017663, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.33034555986557945, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.3365907943482333, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.34050018177672703, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),movie.revenue))", "score": -0.3414250286806635, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.3576057813301993, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.3639620069175458, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.028747863714679623, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,7.2), movie.id),movie.runtime)", "score": -0.49278073453840676, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,7.2), movie.id),movie.runtime)", "score": -0.5105557953621109, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,7.2), movie.id),movie.runtime)", "score": -0.6524381607575913, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.6917999811498007, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,7.2), movie.id),movie.runtime)", "score": -0.71137428716836, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.7220361752106843, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.7240111731755003, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,=,7.2), movie.id),movie.runtime)", "score": -0.7333559299182792, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.7367887617557444, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,7.2), movie.id),movie.runtime)", "score": -0.8038860574918939, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.810790069413835, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,7.2), movie.id),movie.runtime)", "score": -0.8385070440171902, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,7.2),movie.runtime)", "score": -0.9409641357064131, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.release_date)", "score": -0.9703126504282803, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.04048200296165305, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.24223813200296718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.4124657547851729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.41401977319107974, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.43426215841221144, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.4358161768181183, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.4922003692971338, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.49375438770304064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.5139967729241723, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.5155507913300792, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5458451913911526, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5473992097970595, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5479916083489786, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5495456267548855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,81), movie.original_language),movie.original_language))", "score": -0.5756515541106637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.033147668800666, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.vote_average))", "score": -0.4428135607013246, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.vote_average))", "score": -0.47199280593486037, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.title),movie.vote_average))", "score": -0.6183317754039308, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.649368629194214, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.vote_average))", "score": -0.6903893205890199, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.runtime))", "score": -0.7333974070934346, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7459027604054427, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.vote_average))", "score": -0.753284439779236, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7620476182637503, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.status))", "score": -0.7980021663097432, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.popularity))", "score": -0.8221812673000386, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_count))", "score": -0.8314613528636983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8433915075002005, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),country.name,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8533639606175711, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.04239462906691469, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.239943052459665, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.2959845149188606, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.release_date,<,1962-03-17), movie.id),movie.runtime)", "score": -0.31196364503111984, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,person.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.31539651412054576, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3284696715419049, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.runtime),movie.runtime)", "score": -0.37998214082707643, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3954547847366608, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.39738342183446085, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.42321688094655957, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,person.birth_day),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4274308846274695, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,>,1962-03-17), movie.id),movie.runtime)", "score": -0.4356341886718365, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.movie_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.43703476777086064, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.44205772597291887, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.birth_day,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4557396560934117, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.1346633535970175, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.13741112862063526, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.sub_category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.25416194075383586, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.2595760225440843, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.301993532427181, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3128680950044377, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3136022155575455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3448128121219301, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),company.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.34868993039807433, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),country.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.34935014555957156, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3513589816971841, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),country.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36130352562294243, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36702544784737645, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),keyword.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.37608685378432133, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),crew.movie_id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.4276498283485572, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.02386984822805971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7029807594954036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7096096362220123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.release_date))", "score": -0.7486378658795729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.id),movie.runtime)", "score": -0.7801128816128642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7820271262899041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7894947538152337, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),person.birth_day))", "score": -0.8086156357312575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.id),movie.runtime)", "score": -0.8216456128444983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), person.birth_day),movie.runtime))", "score": -0.8247073406237178, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), oscar.year),movie.runtime))", "score": -0.8465073818224482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8641595173976384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.status))", "score": -0.8722181428456679, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.popularity),movie.runtime))", "score": -0.8976404780405574, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8996392418048345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.number))", "score": -0.11974719165775931, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.number))", "score": -0.1394021356555659, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.number))", "score": -0.190365848158458, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.number))", "score": -0.2153459000412594, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.sub_category),oscar.number))", "score": -0.235000844039066, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.number),oscar.number))", "score": -0.28596455654195807, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.category))", "score": -0.2981113627906296, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.category))", "score": -0.3177663067884362, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,237202299),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3350741271871288, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), movie.title),oscar.number))", "score": -0.3383129474982605, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.sub_category))", "score": -0.35532540277299296, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,237202299),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299),oscar_nominee.person_id,oscar.id), oscar.category),oscar.number))", "score": -0.3608601193908532, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.id),oscar.number))", "score": -0.3640316568470728, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), company.name),oscar.number))", "score": -0.36729599791934725, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.category))", "score": -0.36873001929132826, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1957-04-28), person.name),person.name))", "score": -0.317033067381999, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1957-04-28), person.name),person.name))", "score": -0.39052147421898553, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.4111199917679187, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.43659737132838927, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.44039324842742644, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.name),person.name))", "score": -0.47235629711212823, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1957-04-28), person.name),person.name))", "score": -0.47464919838967035, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.4894763540796703, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))", "score": -0.4970007315641851, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.5212129595165607, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>=,1957-04-28), person.name),person.name))", "score": -0.5239074379569502, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.5315303664974635, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1957-04-28),person.name), person.name))", "score": -0.548725393920904, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.5562499484367436, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.6095894595928257, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.03825015268739474, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.247374036720467, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.2761545165942843, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.32184765902569656, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3645506449021263, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.budget),person.death_place))", "score": -0.39203391098922885, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(genre),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.39752993215002247, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.3991938578728478, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,has_genre.movie_id), person.death_place),person.death_place))", "score": -0.4063666117424357, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.43975466055330353, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4417947378427218, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.revenue),person.death_place))", "score": -0.45140011382323997, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),has_genre.genre_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4520903872194804, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.4573224463215521, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.4573706916967568, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),person.name))", "score": -0.4983366733722505, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.vote_count))", "score": -0.5072491770915803, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.original_language))", "score": -0.5229512906007585, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5287785427691378, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5317259293514551, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5352655815814399, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5382129681637573, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.5692083262922685, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.5721557128745859, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),language.name))", "score": -0.5756953651045706, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),language.name))", "score": -0.5786427516868881, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5826186576934335, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5855660442757509, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5891056965057355, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr),language.name), language.name))", "score": -0.5911725974769939, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.15970705059868212, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.16162252813271386, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.18238169511517885, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.21459844839774941, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.28608454475576317, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.28608784761612505, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.30265332107652737, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.30265662393688925, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.30322302184035177, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.30513849937438353, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.30541063329287127, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.32123198478843984, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3219794002562873, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3258976572830563, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.33937975333727827, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.1659910521409715, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.22366054834921717, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.24118523211608114, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.25288127334601296, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2988547283243268, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3012196697756533, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3046011342470131, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,<,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3155950839018256, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.31749613576629687, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32031783486605925, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3259112064378426, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.33962137007372606, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.gender,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.34238896179824585, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),person.gender,<,f), person.birth_day),person.birth_day))", "score": -0.34446617695285753, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.gender),person.birth_day))", "score": -0.3879159563018054, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.03216723680816358, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.death_place),person.birth_place))", "score": -0.4989838316323585, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.death_place))", "score": -0.5041012601213879, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5167025106711662, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5759249944458134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.gender),person.birth_place))", "score": -0.6373519017579383, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.name),person.birth_place))", "score": -0.6534804417970008, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.667533435182122, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.6767759458380169, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),company.name))", "score": -0.6832853690939373, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.name))", "score": -0.7111595408277935, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),country.name))", "score": -0.7126483456449932, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_day))", "score": -0.7137031094389386, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,>,1942-11-12),person.birth_place), person.birth_place))", "score": -0.7282936855117441, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1942-11-12), person.birth_place),person.birth_place))", "score": -0.7291841285987175, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.20127750127046945, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.25191438802576605, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.2647992382738476, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.27500793963020154, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.279886138384316, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.28789278987828315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3046139443018884, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3150430403879097, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.31749879454996993, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.32792791054925835, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3280149227386694, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.33165849640950934, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.title,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3335959119412062, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3397301513265731, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3429772152055077, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.revenue),movie.revenue))", "score": -0.09666358825052157, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.32024508115136996, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))", "score": -0.375315792451147, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.4459284751609785, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.revenue,<=,1910),movie.revenue),movie.revenue))", "score": -0.4851074158796109, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.5434785570059419, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,1910),movie.revenue),movie.revenue))", "score": -0.5488275257521309, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.popularity),movie.revenue))", "score": -0.5571225653984584, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_count),movie.revenue))", "score": -0.572846926341299, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,1910), movie.id),movie.revenue)", "score": -0.5787696741276427, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.5834062624607345, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.revenue))", "score": -0.5894049780895764, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.5988972853519954, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,<=,1910),movie.revenue),movie.revenue))", "score": -0.6136560976156034, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,1910),movie.revenue),movie.revenue))", "score": -0.6149367357720621, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.29306413468029824, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3084960661138868, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3114436621928032, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3349204982090426, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.3446463173978703, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(has_genre),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3532586998782657, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),language.iso_639_1,production_company.company_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3660953678224838, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),keyword.id,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3667401321394877, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3793260940044595, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.3865026809266147, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.38713553913816934, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),language.iso_639_1,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.39442450590521677, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.4034704975806273, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),keyword.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.4044793842780182, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.41232136144854037, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.10574696341063827, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_day))", "score": -0.35372612008359283, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_count))", "score": -0.3589512122562155, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_average))", "score": -0.35983374842908233, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.year))", "score": -0.40277996787335724, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.revenue))", "score": -0.4176346076419577, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.number))", "score": -0.4372537148883566, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_place))", "score": -0.5492464316776022, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),language.name))", "score": -0.5620660794666037, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1993-12-17), person.name),person.name))", "score": -0.5732492072274908, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.runtime))", "score": -0.6366211784770712, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),keyword.name))", "score": -0.6436040414264426, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), movie.vote_average),person.name))", "score": -0.6564793748548254, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.tagline))", "score": -0.6614295257022604, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.homepage))", "score": -0.6689197433879599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.05075195984116752, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.budget),movie.budget)", "score": -0.1897592612804834, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.2376980400952132, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.29901940589169546, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.budget)", "score": -0.35407253820726664, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.3769887432864022, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.3779689915283641, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.38896585234867764, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist),movie.budget,=,crime novelist), movie.id),movie.budget)", "score": -0.3954324809865342, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.budget)", "score": -0.4023740191403979, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.name,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.43898071945213746, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.44698548225953894, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.4587992336891937, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(has_keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.46075373703637806, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,keyword.name), movie.id),movie.budget)", "score": -0.46717007949368905, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.03782455983491425, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.244397906850806, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,187),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3109387860477207, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,187), genre.name),genre.name))", "score": -0.3335391447540235, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.356087060212629, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3622911015713221, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.37244140519695285, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3752664250348456, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<=,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.376370881033893, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), person.death_place),genre.name))", "score": -0.38352805499489473, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.3877430855155356, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4021821161769943, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(person),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4117561556884387, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41675768193755564, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.42645420891478686, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)", "score": -0.027701818821557884, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1983-07-29), movie.id),movie.budget)", "score": -0.5738453079572292, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.revenue)", "score": -0.5759936802634185, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(filter(getData(movie),movie.release_date,<,1983-07-29),movie.budget)", "score": -0.6095361152644606, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.budget),movie.budget)", "score": -0.6182321100141706, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,1983-07-29), movie.id),movie.budget)", "score": -0.624496520697671, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.vote_count)", "score": -0.7744732782178295, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.release_date)", "score": -0.8096000515622231, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1983-07-29), movie.id),movie.budget)", "score": -0.8396514873713987, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1983-07-29), movie.id),movie.budget)", "score": -0.8423856957924933, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),person.death_day)", "score": -0.8502781492258122, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.runtime)", "score": -0.8636021408810697, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.release_date),movie.budget)", "score": -0.8689189931696234, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,<,1983-07-29), movie.id),movie.budget)", "score": -0.8881520434234359, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),oscar_nominee.movie_id)", "score": -0.9028079348704834, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.06520224374980899, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_place),person.birth_day))", "score": -0.31244214264006587, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.name),person.birth_day))", "score": -0.32205517974944087, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.gender),person.birth_day))", "score": -0.5055862256631372, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5289094579711673, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_place))", "score": -0.5524147061005351, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), oscar.year),person.birth_day))", "score": -0.5898600408181665, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5991017950073001, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.name))", "score": -0.6164117661610362, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.status),person.birth_day))", "score": -0.6281762310609338, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.6340167058006045, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.death_day))", "score": -0.6496419516697642, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.runtime),person.birth_day))", "score": -0.6508686730012414, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), crew.person_id),person.birth_day))", "score": -0.6567923018083093, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.gender))", "score": -0.6704335418835399, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.08726334360835608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.17761963394877966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.40404393435153946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.42250819293258246, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),country.name))", "score": -0.5008273252606159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.512864483273006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.516369083629646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.5411382231099717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),genre.name))", "score": -0.5581465491413837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.5875616211123997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5955678754054363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.600358149749809, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),keyword.name))", "score": -0.6009009012341266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), keyword.name),movie.original_language))", "score": -0.6333400436997181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.6534633723880782, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.16959012779086133, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.22206123337977418, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.24664411786483142, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2625809272431443, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.274364044912321, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2820284334099088, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2934585805623928, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3093876250430281, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3235540739747204, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.number,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.32966132251041613, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.33597527317739356, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.33831426578024587, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.33963491731711437, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_count)", "score": -0.3656603709490261, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3673548535092852, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))", "score": -0.037157523143832805, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,105000000), movie.original_language),movie.original_language))", "score": -0.4706342003082682, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language)", "score": -0.5672307950416707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,105000000), movie.original_language),movie.original_language))", "score": -0.5974893352722574, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), language.name),movie.original_language))", "score": -0.6244657770039339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.revenue)", "score": -0.7331262118980479, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.vote_average),movie.original_language))", "score": -0.7354340687634249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),language.name))", "score": -0.7568958773517807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(filter(getData(movie),movie.budget,>,105000000),movie.original_language)", "score": -0.7652386642876259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,105000000), movie.original_language),movie.original_language))", "score": -0.7968146221719508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,105000000), movie.original_language),movie.original_language))", "score": -0.7983930723748927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),language.name)", "score": -0.8057510126974066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.id),movie.original_language)", "score": -0.8061431177924334, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,105000000), movie.original_language),movie.original_language))", "score": -0.8169992348884989, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), spoken_language.movie_id),movie.original_language))", "score": -0.8210789695622225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.08420979964579743, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.16183255041481612, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.16734328440508928, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.20755546916561468, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.21598073326544026, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.30770918344726256, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.movie_id),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3735550963834213, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3840851312372619, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.39017089428829377, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.birth_place,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.40537188842230276, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4160825266270946, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.4251278440383951, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.gender,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.43623069629232003, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4439992925606428, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.45285744415014095, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.19971290637477068, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.23180142451747088, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.288339052691299, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.3204275708339992, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.378014300360519, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.4666404466770473, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5274444561146083, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5595329742573085, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6014153700016323, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.death_day))", "score": -0.6160706024311366, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6229909103058162, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6335038881443324, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6399283747814479, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.death_day))", "score": -0.6481591205738368, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6574621241234127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.14623034446240277, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18795792028429595, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18873879035576566, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.23046636617765884, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2655188481010218, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2930211069498393, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3053297418457069, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.30802729399438467, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.31711633335696987, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),language.iso_639_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3362747779943253, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3482955667329884, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id), country.name),country.name))", "score": -0.3526496495731062, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3588439002839691, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3596247609413876, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3610363172896322, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.17491357742255786, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.2525792714804993, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.3041180816144333, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.3398846943528042, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.41755038841074565, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.4690891985446797, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_place))", "score": -0.47749808399385074, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.name))", "score": -0.48453414595132926, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_place))", "score": -0.5275012847632752, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.name))", "score": -0.5306398288012133, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.death_day))", "score": -0.5621998400092707, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.id))", "score": -0.6014951166362152, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.gender))", "score": -0.603797524854599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.birth_place),person.name))", "score": -0.6082512155771838, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.death_day))", "score": -0.6083055228591547, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.26737619087087877, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3115730546348717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3256061735280201, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.33029181039016087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.33065586811658393, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3660016234527559, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_average,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3742770044700823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.38029416181947795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3844415789308452, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.38498010695934726, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3891271623544013, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.38966574077576555, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.39201353858014404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.4295929042389896, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),getData(movie),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.4369470644074276, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.08463857877373729, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.08632031953993796, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.32582376702501237, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.3291231248321879, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3451841907918163, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.37611896516583837, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.39438424362700664, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),movie.title,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.40645159740385167, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41272503515595466, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.43277978918835236, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.4371089951105377, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4399044477441579, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4448392840764571, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(has_keyword),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.4478510258437508, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.name,production_company.company_id), movie.id),movie.vote_count)", "score": -0.45856598817882066, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.034771089941867915, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24881562536722465, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.2526267241571239, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.29243432306010103, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,production_company.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.35143039595607145, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.36967019458515005, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),person.death_place))", "score": -0.38341611725187175, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.38380308646313477, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3892327244420833, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.39316078768680074, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), person.death_place),genre.name))", "score": -0.40425105787962823, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.4198204236975874, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.42813603415586104, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,has_genre.movie_id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.4337217524827554, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2005-01-13), genre.name),genre.name))", "score": -0.43428440893207626, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.1165911666762883, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.17197158428769974, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.2279955730181349, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.2514871681624678, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.26043967166451965, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.2791730730854844, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.2911230902235103, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.30686758577387924, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3122006590537017, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3158200892759311, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.3345534906968958, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,=,War), company.name),company.name))", "score": -0.3525058116146587, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.36289157450431436, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),movie.title,=,War), company.name),company.name))", "score": -0.36548453258156205, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.37184407800636626, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.1415272344312388, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.212540310880157, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.21970112703632189, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.24841074537632712, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.28798678590491833, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3194238218252453, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.vote_average,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.343457553348518, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.35094435553508924, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),spoken_language.iso_639_1,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3551321818013535, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.35696211792858773, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.3614368143691307, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.revenue,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3697398830485819, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3728397164925446, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),person.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.38439845659102345, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3890687604557584, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.22829197175716218, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2582672365456967, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2684846098499684, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.28761349831787664, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29409590190403784, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2992007761215571, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_country),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.30023458796377717, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.30271392307972234, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30908984062771344, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3190067136308209, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),has_keyword.keyword_id,person.id), person.birth_place),person.birth_place))", "score": -0.3375241648340394, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.341826140098691, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3451642667934314, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3616926878841503, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.36335373134984505, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.17298202502669366, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19668804213393276, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2164118531308783, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.27313919667531894, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.2816180021758884, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.32866185998362735, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.35104184023118806, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.3523004842901789, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.3534223928713849, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.35381486500820886, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.35813170200190186, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.3639566542251772, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.3673416400252513, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.3762744158646875, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.category),oscar.number)", "score": -0.37712840997862396, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.0407091107816965, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,brain scan),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.25770318555704047, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2624491836908099, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.27324644366506384, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.keyword_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.29961418256664674, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),keyword.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3115506228957016, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3281454489799957, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.330592979641266, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.36061586120638084, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(has_keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.37874161341376805, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),oscar.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.39740445126039925, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.movie_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.4107420318431942, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),oscar.sub_category,=,brain scan), movie.title),movie.title))", "score": -0.41186067488657996, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.4149536627838262, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,=,brain scan), movie.title),movie.title))", "score": -0.42193797143783013, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2373483436145414, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.24447192173923513, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2468277273816398, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.26453314357714064, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.26457233295410904, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.267671867614021, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.27721949338949353, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2846335480507226, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.29722041676645217, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3101811197931785, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.31582363434110206, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3180645569988334, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,??????),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31958108634055726, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3310252691973375, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(has_genre),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33387952108315155, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_count))", "score": -0.2680012177079334, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_count))", "score": -0.3991722653954639, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.release_date),movie.vote_count))", "score": -0.42730327354365727, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.budget),movie.vote_count))", "score": -0.4290751110165729, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_average))", "score": -0.4479146193116321, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_average),movie.vote_count))", "score": -0.4648701141923084, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_count),movie.vote_count))", "score": -0.49404909120494267, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.original_language),movie.vote_count))", "score": -0.5221604000180378, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.title))", "score": -0.5310861061661853, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.id),movie.vote_count))", "score": -0.5342883061020984, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.title), movie.id))", "score": -0.5406271476858819, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.vote_average), movie.id))", "score": -0.5658805478924478, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_average))", "score": -0.5790856669991626, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.release_date), movie.id))", "score": -0.5910757739657129, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.runtime), movie.id))", "score": -0.5939777080529893, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)", "score": -0.033221948376838326, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,136),movie.budget)", "score": -0.3827978289227049, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.budget),movie.budget)", "score": -0.7243639751746914, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.release_date),movie.budget)", "score": -0.7453817451147178, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,136), movie.id),movie.budget)", "score": -0.763105466080881, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,136), movie.id),movie.budget)", "score": -0.7984423808394651, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,136), movie.id),movie.budget)", "score": -0.8910630693535632, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.revenue)", "score": -0.9098878375598931, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.release_date)", "score": -0.951377597833695, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,136), movie.id),movie.budget)", "score": -0.9753080159483389, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,136),movie.budget)", "score": -0.981326205777012, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,136), movie.id),movie.budget)", "score": -0.9950446051735087, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),oscar.number)", "score": -1.0028095681951832, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.vote_count)", "score": -1.0091628582150352, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,136), movie.id),movie.budget)", "score": -1.0102701920731034, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.16507047989580315, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.25685939767572563, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), person.death_place),genre.name))", "score": -0.28036541694018524, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.35045773339626335, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), person.death_place),genre.name))", "score": -0.3721543347201077, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.3935203279978626, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.395122648239034, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.40569386460992973, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<,1994-04-10), genre.name),genre.name))", "score": -0.42196057530367936, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,!=,1994-04-10), genre.name),genre.name))", "score": -0.4650231699052786, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1994-04-10), genre.name),genre.name))", "score": -0.46662549014645, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,1994-04-10), genre.name),genre.name))", "score": -0.4832669927643497, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1994-04-10), genre.name),genre.name))", "score": -0.5197476215398638, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), person.death_place),genre.name))", "score": -0.5209888016543118, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.5341978529297366, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.12233442095748615, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.name),person.death_day))", "score": -0.47118497667543124, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.47594147389463615, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.47755124447576236, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4933553415321512, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.name), person.death_day))", "score": -0.5110444231104339, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.name))", "score": -0.5130848235421581, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.5453392344497843, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5636465030693216, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.5645247055363143, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6225508528732462, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6471496897720499, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_place))", "score": -0.6488865262799663, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.birth_day), person.death_day))", "score": -0.6554808421205962, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),movie.revenue))", "score": -0.6731175429158611, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.22623122972981946, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.2507221822215797, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.title))", "score": -0.2598513041211845, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.title))", "score": -0.3536420736982109, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.release_date))", "score": -0.4211040821446659, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.title))", "score": -0.4372096334172966, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.release_date))", "score": -0.44559503463642613, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.release_date))", "score": -0.45472415653603093, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.budget),movie.title))", "score": -0.45934989792840497, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.budget)", "score": -0.49425236393615546, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.status),movie.title))", "score": -0.5044110987855674, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.vote_average),movie.title))", "score": -0.5260949705316307, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.release_date))", "score": -0.5485149261130573, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.5853282420484902, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.6098191945402505, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.17131269345551245, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.1730522248082038, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,genre.id), genre.name),genre.name))", "score": -0.174594959030611, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.19713993101995864, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.21546622726305334, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.21857246001166333, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2284410905325439, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.2285684420619948, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2297912778780611, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.23439746199715758, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24772474977109632, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2575793883038148, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2645682503439321, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.2848332062409918, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3119315360437276, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.14041152597928885, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_day))", "score": -0.37776730583573226, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.name))", "score": -0.41248746776545886, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.death_day))", "score": -0.4341273419704521, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.47887184844876174, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.5305712483968819, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.5421678088750923, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_place))", "score": -0.5457475595321739, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.5638980530347908, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_place),person.name))", "score": -0.597739478587755, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),oscar.year))", "score": -0.6297881715145195, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_day),person.name))", "score": -0.6455644574161852, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.birth_day))", "score": -0.6498432476219023, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,Christopher J. Wood), person.name),person.name))", "score": -0.6804360710229957, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), oscar.year),person.name))", "score": -0.6866142358776415, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.14519131622603246, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.16036531004143212, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2107815861163678, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.22595557993176746, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.23069074037774176, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.24040986521900584, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.28980431433259657, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.29952343917386065, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.year)", "score": -0.35652254756870927, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3610239583838216, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.3761093074876311, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.year)", "score": -0.3761979521992213, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.number)", "score": -0.37816601458099597, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3898740806929354, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.3910654514615915, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))", "score": -0.18602899927282124, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count))", "score": -0.23472897428655415, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_average))", "score": -0.27842389512443333, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_count))", "score": -0.32712387013816624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.title))", "score": -0.3529084594883898, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.runtime))", "score": -0.36736926156663685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_average))", "score": -0.37219737935447483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.42089735436820774, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.title))", "score": -0.44530335534000187, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.runtime))", "score": -0.45976415741824894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_average))", "score": -0.5170214073696116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.title))", "score": -0.5390768395700434, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.runtime))", "score": -0.5535376416482904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_count))", "score": -0.5657213823833445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.title))", "score": -0.6839008675851801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.28543535047171104, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.29135160816867567, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3062144919960227, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3154941381974196, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3173417437657737, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.32141039589438425, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.32325801067830856, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3254161940061834, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3279050368613622, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.popularity)", "score": -0.35599664610285886, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.popularity),movie.popularity)", "score": -0.3563729544130974, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.37424920067375383, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3782756515949366, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3836841891033804, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,oscar_winner.person_id), movie.id),movie.popularity)", "score": -0.38964988801693845, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))", "score": -0.008982900661067106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget))", "score": -0.6052694748068461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.4), movie.budget),movie.budget))", "score": -0.6424228976393351, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.release_date))", "score": -0.6716939534671837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.4), movie.budget),movie.budget))", "score": -0.6816727350378642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,6.4), movie.budget),movie.budget))", "score": -0.7216795949643711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.title))", "score": -0.7453165974147851, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.title),movie.budget))", "score": -0.8156286345474655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.release_date),movie.budget))", "score": -0.8287864790909225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.original_language))", "score": -0.8318531240947777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.revenue))", "score": -0.8546928491123253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), person.death_place),movie.budget))", "score": -0.8993555770866806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,6.4), movie.budget),movie.budget))", "score": -0.9119709996884922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.original_language),movie.budget))", "score": -0.9342592226021225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.id))", "score": -0.9398484553821618, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))", "score": -0.031135975950746797, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,6), movie.vote_count),movie.vote_count))", "score": -0.3226707629946759, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6), movie.vote_count),movie.vote_count))", "score": -0.5329706250777235, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6), movie.vote_count),movie.vote_count))", "score": -0.5378437220206251, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6), movie.vote_count),movie.vote_count))", "score": -0.6209101258864393, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,6), movie.vote_count),movie.vote_count))", "score": -0.7194538168696454, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.budget),movie.vote_count))", "score": -0.7742764019494643, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.title),movie.vote_count))", "score": -0.7795060538774123, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.title))", "score": -0.7827989017678192, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.budget))", "score": -0.7893953478051117, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,6), movie.vote_count),movie.vote_count))", "score": -0.7899544291285565, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_average),movie.vote_count))", "score": -0.8063527011399856, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,6), movie.vote_count),movie.vote_count))", "score": -0.8245054121216526, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,6), movie.vote_count),movie.vote_count))", "score": -0.8293785090645542, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_average))", "score": -0.8303878462029388, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.0921927040851253, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.15153971275902522, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.16533440984335193, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), person.birth_place),company.name))", "score": -0.24740700064147414, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.25486459885571455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.31788225185152713, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), person.birth_place),company.name))", "score": -0.32006599109211165, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),country.name))", "score": -0.34669640424406, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),person.birth_place))", "score": -0.3479382288253542, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), person.birth_place),company.name))", "score": -0.35619828629924216, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3866956782058434, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.38766188558347764, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), company.name),person.birth_place))", "score": -0.3949967432109297, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), country.name),company.name))", "score": -0.3998774397671388, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), country.name),company.name))", "score": -0.4108770685095887, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)", "score": -0.03798890078517815, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.37925298757231435, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.popularity)", "score": -0.4610945288629602, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,Post Production), movie.id),movie.popularity)", "score": -0.6024579531954133, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.id),movie.popularity)", "score": -0.6446185924950968, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity)", "score": -0.6771137161053913, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.id),movie.popularity)", "score": -0.6794719755507105, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Post Production),movie.popularity)", "score": -0.7049020621168134, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,>=,Post Production),movie.popularity)", "score": -0.7400534880989902, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity))", "score": -0.7820226983239991, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Post Production), movie.id),movie.popularity)", "score": -0.7967179346025933, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.id),movie.popularity)", "score": -0.8151765337089539, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Post Production), movie.id),movie.popularity)", "score": -0.8240441762309552, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,null,Post Production), movie.id),movie.popularity)", "score": -0.8678062664976778, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.revenue)", "score": -0.8733601858032227, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.name))", "score": -0.1593871913937619, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.name))", "score": -0.23824444307683734, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.id))", "score": -0.42335249260941055, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,2014-01-01),person.name), person.name))", "score": -0.5395886065525701, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.gender))", "score": -0.5466185934928944, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.birth_day))", "score": -0.5567265279678395, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,!=,2014-01-01), person.name),person.name))", "score": -0.6118891601145151, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.birth_day))", "score": -0.6304880072057131, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,2014-01-01),person.name), person.name))", "score": -0.6364764334721258, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.birth_day), person.name))", "score": -0.6506205011246493, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,2014-01-01), person.name),person.name))", "score": -0.6570733551561716, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), oscar_winner.person_id))", "score": -0.6615340836433461, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.death_day))", "score": -0.6795460708526662, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,>,2014-01-01),person.name), person.name))", "score": -0.6811632617464056, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.gender), person.name))", "score": -0.6928189803002169, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.01850336719144252, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.5806538356952862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.release_date,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.593381703763194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6364656826589161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,has_genre.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6386879034949726, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.title))", "score": -0.6475558831480157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.release_date,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6491935415896565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.06387), movie.release_date),movie.release_date))", "score": -0.6575063526288432, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.title),movie.release_date))", "score": -0.6668860646786925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.06387), movie.release_date),movie.release_date))", "score": -0.6771808325902384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.budget),movie.release_date))", "score": -0.6934826108517882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7260144856882107, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.id),movie.release_date)", "score": -0.7285096290399107, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.budget))", "score": -0.7400173499372613, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7761885431718838, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.11133699904448427, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.1830338110690505, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2317358802522909, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2759941164996943, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.283187029444159, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2865276443689186, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2943602387793559, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3193181743746766, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.32079209750775606, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3262885500149247, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.32647261354345547, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.33768435440281264, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),production_company.movie_id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.33915826482933126, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3471090820220354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.35669706799602974, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.12993212090623274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.23236968631009117, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.budget),movie.budget))", "score": -0.5646146195922483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget)", "score": -0.599370307515138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.6072597991915245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.budget),movie.budget))", "score": -0.6839528041873564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,0.5), movie.budget),movie.budget))", "score": -0.772052469661503, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.id),movie.budget)", "score": -0.7776977049412778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,0.5), movie.budget),movie.budget))", "score": -0.8061600285564055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.id),movie.budget)", "score": -0.8293353749067726, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.8438001793333059, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.release_date))", "score": -0.8993468133248825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.release_date),movie.budget)", "score": -0.922914920621597, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.title))", "score": -0.9319971648492356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.release_date),movie.budget))", "score": -0.9335122545580816, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2506541739216629, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.26523469181924597, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2776302948273834, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29221081272496646, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.runtime,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29497345353692694, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.title,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.297454864521828, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30669794766505704, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32127845199533106, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.runtime,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3219495608753384, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32229289021407537, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3993429748318745, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.40926323614927873, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4100845517534254, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.42000481307082965, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4456269890776128, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.07203808067573983, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.1787900053361409, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2480722830036229, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2598232848847848, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2706858694663433, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.28638092352748806, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.29223833176925024, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.30915396773986686, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3193105789977286, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3267401794711868, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3369681803068692, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(has_keyword),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3466336320549467, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.36657520954518585, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.36896855488481434, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3747999161082845, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.07188545299868565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,140), movie.vote_count),movie.vote_count))", "score": -0.27897786667745095, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,140), movie.id),movie.vote_count)", "score": -0.45766764073557714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,140), movie.vote_count),movie.vote_count))", "score": -0.5287141608278034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.5537542509118794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.5902287779972539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.6540115880052326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,140), movie.vote_count),movie.vote_count))", "score": -0.6598135041276691, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,140), movie.vote_count),movie.vote_count))", "score": -0.6860895571735455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar_winner.movie_id,=,140), movie.vote_count),movie.vote_count))", "score": -0.7332920836488483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,140), movie.vote_count),movie.vote_count))", "score": -0.7573258696720586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,140), movie.vote_count),movie.vote_count))", "score": -0.7629146244580625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,140), movie.id),movie.vote_count)", "score": -0.7737140813822335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.title))", "score": -0.7792076139448909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_average))", "score": -0.7982024817465572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.budget))", "score": -0.09244009807298426, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.2528841938037658, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5855719966486794, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6017147597253589, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),genre.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6118774694091323, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.revenue),movie.budget))", "score": -0.6191715258319164, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6374531250513934, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6451071385073607, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6535959234307649, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.revenue))", "score": -0.6799851779505843, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), person.death_day),movie.budget))", "score": -0.7253322857577587, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.vote_count),movie.budget))", "score": -0.731066848631599, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.vote_count))", "score": -0.7410537128016585, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.release_date))", "score": -0.7507438783213729, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,is), movie.budget),movie.budget))", "score": -0.7524858559627319, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.08556501375870847, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.26908463487730516, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.2816029792296723, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Austria),movie.budget),movie.status))", "score": -0.3030066831576171, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),person.birth_place,=,Austria),movie.budget),movie.status))", "score": -0.3283653814690141, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.33305343419897426, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,Austria),movie.budget),movie.status))", "score": -0.3542102612542507, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,Austria),movie.budget),movie.status))", "score": -0.36276663334136716, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.release_date),movie.status))", "score": -0.39135464917965895, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.3966480170373569, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.title),movie.status))", "score": -0.41513914876844454, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.iso_3166_1,=,Austria),movie.budget),movie.status))", "score": -0.41605780419089516, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),oscar.category,=,Austria),movie.budget),movie.status))", "score": -0.4204553756557316, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.42471839238915593, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.release_date),movie.status))", "score": -0.44438795559826394, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.2524590597629679, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.2591257851237732, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.28953146923752815, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.29117796685201497, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.30494042806846033, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.3116071534292656, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.33417121423006896, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3371295986392271, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.3408379395908743, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.34201283754302053, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.34365933515750735, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.release_date))", "score": -0.3437963240000324, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.3712436237046292, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.37289012131911603, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),company.name))", "score": -0.37420200811378734, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.13985649332232958, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.20022056859927528, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.31517218926884055, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.31556149124951366, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.37805316545116974, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.37844246743184284, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.39718886314338053, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.39757816512405364, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.407729039145916, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4081183411265891, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.440209440534734, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4405987425154071, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4585603275081757, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4589496294888489, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4600698299683615, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.1403724020892696, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.24870730103793903, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.3834129116112308, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.39018334360662266, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.49174781055990024, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.4985182425552921, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.5219331412190513, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.548720493035944, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), movie.revenue),person.name))", "score": -0.5601990353861765, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1972-10-24), person.name),person.name))", "score": -0.5722014932507591, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,1972-10-24), person.name),person.name))", "score": -0.5767394928807335, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),cast.person_id))", "score": -0.6080929777199344, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), language.name),person.name))", "score": -0.6134781968394236, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.6302680401677208, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.6570553919846134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.10637635350759614, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.13438813981676537, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.22403190088140565, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.23625186873537335, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.2983980522290333, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3416837824896861, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3723257564509632, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.38613821261816206, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.3880418132936736, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3969021680014731, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.40145366361969426, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.4275441175769337, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.43244971869260523, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.43395207159690913, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.44719232195132896, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.17703780962018473, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.18193914565293864, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.27300165261587955, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.2861924949875305, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.31646152047831017, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,1991-09-21), company.name),company.name))", "score": -0.3371493169420468, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3389840095194604, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.34388534555221434, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.35812973641397533, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,1991-09-21), company.name),company.name))", "score": -0.36580428552686833, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),person.death_place,<,156), company.name),company.name))", "score": -0.3673548097234288, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,<,156),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3822493733123883, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,1991-09-21), company.name),company.name))", "score": -0.3879861229963431, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,156), company.name),company.name))", "score": -0.39020717631839763, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,156), company.name),company.name))", "score": -0.3951085123511515, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.1911734192278832, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.22361269344992574, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2456691286758534, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.27810840289789596, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2818190098670372, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2819968889177152, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3002958241243066, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.30456928060003874, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.31425828408907974, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.31443616313975775, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3282365153584059, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3363147104374187, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3364925894880967, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.33700854594449264, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),person.id,crew.movie_id),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.43790249792572966, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.031098839494568434, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), genre.name),company.name))", "score": -0.34109629468828717, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), movie.title),company.name))", "score": -0.3572624843544264, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3586534113939867, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3613994731609279, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3683659704863549, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.38099149120930903, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),movie.title))", "score": -0.39187617486066995, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.40005270308508656, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),person.birth_place))", "score": -0.4001359083047336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.40762905639244684, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),production_company.company_id))", "score": -0.4153491213233972, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.41583399784361386, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4164948209036214, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.41777658162700426, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))", "score": -0.15896271793462802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,!=,2013-10-04), movie.title),movie.title))", "score": -0.23532170681573916, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2013-10-04), movie.title),movie.title))", "score": -0.2881768631777959, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2013-10-04), movie.title),movie.title))", "score": -0.29988019792654086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,=,2013-10-04), movie.title),movie.title))", "score": -0.36453585205890704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2013-10-04), movie.title),movie.title))", "score": -0.4134931403241353, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,2013-10-04), movie.title),movie.title))", "score": -0.42909434316970874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,2013-10-04), movie.title),movie.title))", "score": -0.45641846088983584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2013-10-04), movie.title),movie.title))", "score": -0.48985212920524646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2013-10-04), movie.title),movie.title))", "score": -0.5370726126275258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2013-10-04), movie.title),movie.title))", "score": -0.5544106203160482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2013-10-04), movie.title),movie.title))", "score": -0.5856326061330037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,2013-10-04), movie.title),movie.title))", "score": -0.5979960027179914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,2013-10-04), movie.title),movie.title))", "score": -0.613431601508637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2013-10-04), movie.title),movie.title))", "score": -0.6611806887231069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.12983053926264965, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.2029663932730708, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.2190984320959732, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.24075100692718357, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.2454776950032444, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.2744843583754426, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1957), movie.id),movie.budget)", "score": -0.29223428610639435, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.31861354901366556, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>=,1957), movie.id),movie.budget)", "score": -0.33001889976050713, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,=,1957), movie.id),movie.budget)", "score": -0.33227528874139395, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.33474558783656794, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.3422889959478611, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.3476202123858637, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.name,<=,1957), movie.id),movie.budget)", "score": -0.3522642472887484, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.35639816266777835, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,no), movie.title),movie.title))", "score": -0.1321034834254533, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.1570722192991525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3277971063410254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,!=,no), movie.title),movie.title))", "score": -0.3593648646492511, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.3843336005229503, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),language.name,!=,no), movie.title),movie.title))", "score": -0.4454808805603534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.4704496164340526, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.4833720838509176, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.5967340415669445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.6488977837314612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,no), movie.title),movie.title))", "score": -0.6492668346036226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.655362758638211, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),spoken_language.movie_id,!=,no), movie.title),movie.title))", "score": -0.6704069331753999, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,!=,no), movie.title),movie.title))", "score": -0.6770467713940889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),language.name,!=,no), movie.title),movie.title))", "score": -0.6960695062298328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.original_language,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.16623398551268107, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,=,es), language.name),language.name))", "score": -0.18083527066438312, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,!=,es), language.name),language.name))", "score": -0.2319619725116041, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,=,es), language.name),language.name))", "score": -0.23664853305829522, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es), language.name),language.name))", "score": -0.24474774779269512, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),language.name,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2508290347738886, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.26556601070630514, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,es), language.name),language.name))", "score": -0.2877752349055162, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.3111931410894492, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,es), language.name),language.name))", "score": -0.3183358751322272, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.33186800840913677, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.3515958769183101, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.372270740264904, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.37716781957119005, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.40326208440219263, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.04017212222304422, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.42671298604410357, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.5093735523889651, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.7787102422589669, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Post Production), movie.id),movie.runtime)", "score": -0.8769714875825012, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.runtime)", "score": -0.8938692791647647, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.9191983610755025, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(country),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9228178935817761, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Post Production), movie.id),movie.runtime)", "score": -0.9464454653036715, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9562567790563112, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.release_date)", "score": -0.962847091341477, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.vote_average)", "score": -0.9758264986235995, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.runtime)", "score": -0.9778146571751528, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.989932163338996, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.id)", "score": -1.0003122587851874, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.08045690176714436, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), genre.name),company.name))", "score": -0.23144428776130846, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.birth_place),company.name))", "score": -0.2425128728257013, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), keyword.name),company.name))", "score": -0.2496937958766364, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.28503120070395704, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,10037390), company.name),company.name))", "score": -0.3178438971099621, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,10037390), company.name),company.name))", "score": -0.32154790704430203, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,10037390), company.name),company.name))", "score": -0.3247319739484582, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.34138111883772326, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3430891897828891, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,10037390),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.35037153956158146, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.35579266439372076, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), country.name),company.name))", "score": -0.3571617261346233, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.death_place),company.name))", "score": -0.367289951595183, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),person.birth_place))", "score": -0.3811489929470295, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.011823602580989245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.4954755595899769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.6261271527982899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7589149084888049, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.7697871487835073, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.title))", "score": -0.7760098539074534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7760657873950549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8202875174065412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8306122032008716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8610835281215259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.8697046600063914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.24827), movie.original_language),movie.original_language))", "score": -0.8869869402624317, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.9005475800731801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.24827), movie.original_language),movie.original_language))", "score": -0.9482856598697254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.9505285297636874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11220961974792466, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1261868941066375, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.16891146446421948, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.22464373941556348, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.30125735011250326, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.3151367563067179, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3274649293303219, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.36057866536610317, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.374555939724816, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3790818802223513, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37959418997124256, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),country.name,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38323703419336874, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.39245479078308326, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.39646530948695247, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3992569754670029, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.title))", "score": -0.24143211160117062, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.release_date))", "score": -0.26354197774344357, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.title))", "score": -0.3321248701613513, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.release_date))", "score": -0.35423473630362423, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))", "score": -0.374906804303464, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.original_language))", "score": -0.38656514499598416, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.release_date))", "score": -0.39701667044573696, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.status))", "score": -0.40625217173510464, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.original_language))", "score": -0.4772579035561648, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.status))", "score": -0.4969449302952853, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.popularity),movie.release_date))", "score": -0.5126042348379971, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.original_language))", "score": -0.5200398376982776, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.status))", "score": -0.539726864437398, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.release_date),movie.title))", "score": -0.5416535696786013, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),language.name,!=,nb), movie.popularity),movie.release_date))", "score": -0.5692779082830411, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.13881910558848176, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.revenue))", "score": -0.28356231715588365, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.budget))", "score": -0.38255530562310014, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.budget))", "score": -0.4117866155138472, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.budget))", "score": -0.4153358336916426, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.budget))", "score": -0.44136893063841853, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.vote_count))", "score": -0.4507706310978392, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.5267152004962554, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.revenue))", "score": -0.527298517190502, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.revenue))", "score": -0.5565298270812491, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.revenue))", "score": -0.5600790452590445, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),person.death_day))", "score": -0.5638931539288023, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.revenue))", "score": -0.5861121422058204, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),person.death_place))", "score": -0.6801061775913695, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.vote_count),movie.budget))", "score": -0.6851051306730369, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.13247687694623253, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19377306541446848, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.21543275183031788, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.224149145505928, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.24172090705852783, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.id),oscar.number)", "score": -0.3184272620056205, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.release_date),oscar.number)", "score": -0.3230167135115086, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.birth_day),oscar.number)", "score": -0.33105248203397936, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_winner.oscar_id),oscar.number)", "score": -0.3376769310647958, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.36179178602732087, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>,1975-03-06),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.36994392076321964, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3713516391611595, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(crew),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.39601602793242063, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.40507227822654224, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.41387818713068203, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.14135553715879604, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.29009644083564917, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.30736901961871793, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.31404340073342835, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.31573429165569034, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3273721573061225, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3313160693493188, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.33210092599151125, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3326529111443405, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3398788314652062, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3437388053288088, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.title,=,Danielle Tabary),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3664461530320863, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.36816771488742683, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),movie.title,=,Danielle Tabary),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3707488718057511, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.37247039422571093, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.11794782163222814, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.2150148495449704, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.category))", "score": -0.2504681193213091, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),genre.name))", "score": -0.2595112728073855, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.2638749801304082, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.number))", "score": -0.26801679673577394, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.2907963101507675, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.category))", "score": -0.30950914975245697, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.3128812433708984, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.category))", "score": -0.31998235920968915, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05),oscar_nominee.person_id,movie.id), oscar.number),oscar.number))", "score": -0.32700543194323495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.number))", "score": -0.32705782716692183, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.category))", "score": -0.3316907276219279, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.number))", "score": -0.337531036624154, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.sub_category))", "score": -0.3473598465258593, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)", "score": -0.0266271011697435, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,151),movie.revenue)", "score": -0.4742514801060103, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.budget)", "score": -0.6279643899751515, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.popularity)", "score": -0.6917851945464322, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,151), movie.id),movie.revenue)", "score": -0.7153352778376243, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,151), movie.id),movie.revenue)", "score": -0.8245968015608774, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_count)", "score": -0.8317378123795088, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.revenue),movie.revenue)", "score": -0.860493932694679, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_average)", "score": -0.9020719998193801, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,151), movie.id),movie.revenue)", "score": -0.9122252707925825, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,151), movie.id),movie.revenue)", "score": -0.9530242739257626, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,151), movie.id),movie.revenue)", "score": -0.982578765114178, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),cast.movie_id)", "score": -0.9915313081360151, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,151), movie.id),movie.revenue)", "score": -1.0077613264282672, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),language.iso_639_1)", "score": -1.0511691787282567, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.16176180218058087, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.17084026125718324, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.24605446325783428, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.2591982042352813, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.2657068326856975, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.26827666331188366, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.budget))", "score": -0.2878477521983098, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.33153795307688927, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.33542098337716997, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.34061641215349164, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.release_date))", "score": -0.3410109769076426, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.3434908653125347, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.36482916504640905, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar_nominee.oscar_id,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.40241232843350444, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),movie.budget),movie.budget))", "score": -0.4548890353380605, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.010283144722052384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1584), movie.revenue),movie.revenue))", "score": -0.5454441528490861, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.budget),movie.revenue))", "score": -0.6981946009400417, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1584), movie.revenue),movie.revenue))", "score": -0.7289448599985917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.popularity),movie.revenue))", "score": -0.7559425014260341, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.budget))", "score": -0.7922647116429289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1584), movie.revenue),movie.revenue))", "score": -0.8020568709544023, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1584), movie.revenue),movie.revenue))", "score": -0.8280490856341203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.popularity))", "score": -0.8450472471959074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_count))", "score": -0.8697124240643461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.id),movie.revenue))", "score": -0.8736266869309475, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_average))", "score": -0.8914145348317106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,1584), movie.revenue),movie.revenue))", "score": -0.8954528946851497, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,1584), movie.revenue),movie.revenue))", "score": -0.8954921741460566, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.original_language))", "score": -0.909409177089401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11172096402695093, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11202103967692285, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21958576465530094, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21988584030527286, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3251237551697161, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.325423830819688, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3728732633146412, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37409812138976195, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37439819703973387, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37530782555076464, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3931101632199458, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3934102388699177, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4187128745856989, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42202382140222877, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4240420832201362, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.02441462205752032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.4597824664815562, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.5765367345738923, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_count))", "score": -0.5859681661895593, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7152925355549087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7223036356226658, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_count),movie.vote_average))", "score": -0.7275711683978443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.runtime))", "score": -0.7370825703910668, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8145976729647373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8233994908587192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.runtime),movie.vote_average))", "score": -0.829462268804491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.popularity),movie.vote_average))", "score": -0.838251867746294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.popularity))", "score": -0.8580259378722985, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.original_language))", "score": -0.8844357426933129, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8854374511356582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.03346708473691251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,0.553752), movie.runtime),movie.runtime))", "score": -0.28521510456630494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,0.553752), movie.runtime),movie.runtime))", "score": -0.6143389294011286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,0.553752), movie.runtime),movie.runtime))", "score": -0.6432987997395685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,0.553752), movie.runtime),movie.runtime))", "score": -0.6678774306637933, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.7513117163762217, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.release_date))", "score": -0.7546764466533205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,<=,0.553752),movie.runtime), movie.runtime))", "score": -0.8090677489890368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.817635890780366, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8242509334668284, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),person.birth_day))", "score": -0.8292921039828798, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), oscar.year),movie.runtime))", "score": -0.8348175391874975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.846283134756959, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,0.553752), movie.runtime),movie.runtime))", "score": -0.8671048829419306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.vote_average),movie.runtime))", "score": -0.8755660161696142, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.14665756037344851, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.birth_day,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3029636615580934, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.31129147058034223, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.31728331360572315, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.3410522722531219, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.355740061602516, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.38267710422805046, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,Released),getData(has_genre),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.41266450794840787, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,Released), genre.name),genre.name))", "score": -0.4147735909646144, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<=,Released), genre.name),genre.name))", "score": -0.41776330109419796, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.42753327649867945, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.4381917790597072, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.runtime,<=,2016-01-13), genre.name),genre.name))", "score": -0.4521935061638942, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.4948778774718166, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),company.name))", "score": -0.5109415713789279, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.020841566318267724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.3966763219177665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.popularity))", "score": -0.43851186841129675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.revenue))", "score": -0.6303184688404144, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.vote_average),movie.popularity))", "score": -0.6989533068226592, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.release_date))", "score": -0.7147409975841583, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),person.gender))", "score": -0.7153302491024078, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.7432361146748008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.revenue),movie.popularity))", "score": -0.7602792145298736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,26500000), movie.popularity),movie.popularity))", "score": -0.7684691662980185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.status),movie.popularity))", "score": -0.8038655282543914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,26500000), movie.popularity),movie.popularity))", "score": -0.8052182908249961, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,26500000), movie.popularity),movie.popularity))", "score": -0.8120778913689719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.vote_average))", "score": -0.8262733280971588, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.status))", "score": -0.8397495210483612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.2751310223393375, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.344838745961782, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.38413906485126187, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.39351391813005987, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.3953876465740788, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.39659105380344556, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.4145725826456237, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.415995503397543, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4236612984001998, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.43281423701953975, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.4346879654635587, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.4440627806708262, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.person_id),movie.popularity),movie.runtime))", "score": -0.44950708830267766, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4564569476222451, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.45712220836765505, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.03758706379085197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,515), movie.vote_average),movie.vote_average))", "score": -0.44006072909905924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.5326771453255787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.53558921855074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_count))", "score": -0.6472116046898009, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.popularity),movie.vote_average))", "score": -0.6583791621342243, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,515), movie.id),movie.vote_average)", "score": -0.7021842575252792, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,515), movie.vote_average),movie.vote_average))", "score": -0.7356267216928245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.runtime))", "score": -0.7795982295028807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.status),movie.vote_average))", "score": -0.861050988019997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_count),movie.vote_average))", "score": -0.8759186514034809, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,515), movie.vote_average),movie.vote_average))", "score": -0.8816423194330127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,515), movie.vote_average),movie.vote_average))", "score": -0.887071276021743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.popularity))", "score": -0.8926633530609251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.runtime),movie.vote_average))", "score": -0.8971148975506367, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.11934658022576823, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.14093002978555408, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,special effects), person.death_place),person.death_place))", "score": -0.2615153862668211, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.26841715722716736, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.27183000403843355, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.28570578052754286, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,>,special effects), person.death_place),person.death_place))", "score": -0.3114432145009299, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.31531317782778834, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.31676282219523144, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects), person.death_place),person.death_place))", "score": -0.3209273859570174, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.33340668431022286, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.3378071805371287, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,<,special effects), person.death_place),person.death_place))", "score": -0.33848776116071605, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), genre.name),person.death_place))", "score": -0.36706072041497384, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,<=,special effects), person.death_place),person.death_place))", "score": -0.3835068406382397, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(getData(person),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.24473836495599244, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3060587151040993, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.33706733264680355, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3453566594376128, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.34731850340060927, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.36682232640377727, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.376365276980317, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.37832712094331344, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3837020524172565, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3866164477341227, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3978309439464815, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4080821390660667, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4086916637152562, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.41471070235537216, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4235923831197994, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.17348466419207398, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.20919780038821045, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.revenue))", "score": -0.3276353886030847, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_count))", "score": -0.3905416240595514, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.4148164203070337, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.43108723663317505, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.number))", "score": -0.4756614675425226, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_day))", "score": -0.5283464004896814, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.5808188130758936, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),spoken_language.iso_639_1))", "score": -0.5948710849188501, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.original_language))", "score": -0.5989796330832178, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))", "score": -0.6035946204938227, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_place))", "score": -0.6119133045576746, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.tagline))", "score": -0.6125834395788843, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),spoken_language.movie_id))", "score": -0.6247896363638574, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.10235636212639657, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.17500133666638834, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.20003652165434685, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.23649187440812774, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.25404843747486916, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.28925565981866275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3073737167686261, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3076051230153899, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3171191487336698, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.32684768061654484, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3269142147087452, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3287912192339197, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.tagline,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3357941393632608, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3642058432659216, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3723885276850452, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))", "score": -0.009968005178961903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5624924721133358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5953366612893524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5978089284617261, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6306531176377427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6421791281260161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6750233173020327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6774955844744064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.7017365081886383, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.710339773650423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.7252683301274003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7345806973646549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.7370529645370286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id), movie.original_language),movie.original_language))", "score": -0.7578677096715066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7581125193034169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.020864287096628686, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))", "score": -0.5347103995118232, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5516256372757198, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,2009-03-29), person.gender),person.gender))", "score": -0.59054779231883, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2009-03-29), person.gender),person.gender))", "score": -0.5996090096268745, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,2009-03-29), person.gender),person.gender))", "score": -0.636813132030511, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),movie.popularity))", "score": -0.667445937575394, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),genre.name))", "score": -0.6970518626585545, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.name),person.gender))", "score": -0.7152203227706195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.birth_place),person.gender))", "score": -0.7616463805861713, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), movie.popularity),person.gender))", "score": -0.778978040380025, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2009-03-29), person.gender),person.gender))", "score": -0.7903847020897956, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),oscar.category))", "score": -0.8210053243055881, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),country.name))", "score": -0.8571359314337315, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,2009-03-29),person.gender), person.gender))", "score": -0.8606403384401347, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.023151653117404244, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.4592127448330421, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count)", "score": -0.5788298433823262, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.5853136714488799, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.6764272717773565, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.6897383141247607, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.744307373900836, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.budget)", "score": -0.7478667653150538, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.7846424684375926, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.785299043055612, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.8456110505958558, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,7.4), movie.id),movie.vote_count)", "score": -0.8527812891779855, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,7.4), movie.id),movie.vote_count)", "score": -0.853514125297612, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.budget),movie.vote_count)", "score": -0.8540192529687934, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,7.4), movie.id),movie.vote_count)", "score": -0.8755430503178228, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.033840205675719, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.26363094781531876, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2871724672506287, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3075823960994289, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id), movie.title),movie.title))", "score": -0.31434380513924975, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.33007018694762674, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.33844882699337425, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.35885876544340833, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.36205460165229575, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.37091123824797007, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.3840257207696977, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.3923757722053875, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.3971410155064282, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3986179966787537, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.4124577453171408, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.12042362091031034, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2743655968972422, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2849618878745786, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.28864918565301595, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30319341016825696, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),person.death_day,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3081564574458091, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.31721105142463113, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3200546940554887, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_place,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32453335469607947, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),person.birth_place))", "score": -0.32834452809752585, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.33504838469122755, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.34192318376548564, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.35355688276837066, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,cast.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.35386407814064685, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.35574741722770414, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.08771291482607883, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.15931220217198658, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.2710033335050924, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.3342301548137539, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.35552408734356034, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.3924743687243574, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.40572540848450617, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(movie),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.4293519184857511, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4525220856167165, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4599972111732348, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.46854669513505465, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.49735392282513674, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity)", "score": -0.5073255858875619, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.name,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.5077195781548443, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.popularity),movie.popularity)", "score": -0.5136434586170384, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.0571190845625043, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.18645431234430596, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2610923123911968, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2757349585963787, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2871725744667457, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.2973953978511669, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.36674741071704764, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.37442914766249885, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3873921635000912, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3931565384886736, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.406437002292479, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,null,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4070031768280999, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.movie_id,language.iso_639_1), language.name),language.name))", "score": -0.4077272862624424, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(spoken_language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4130827469866054, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(cast),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.420215567004886, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))", "score": -0.015380047683720477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.popularity))", "score": -0.5224965274828719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.popularity),movie.status))", "score": -0.5848325362458127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.title))", "score": -0.6161497295397567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,177), movie.status),movie.status))", "score": -0.6459475865849527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.original_language))", "score": -0.6626869500178145, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.vote_average))", "score": -0.6671359599131392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), country.name),movie.status))", "score": -0.7020885815873044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),country.name))", "score": -0.7137602627772139, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.original_language),movie.status))", "score": -0.7212809791817563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.iso_3166_1))", "score": -0.7630585492152022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.vote_average),movie.status))", "score": -0.774307059313287, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))", "score": -0.7859382881179044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.release_date))", "score": -0.7859704554575728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.movie_id))", "score": -0.8034737170237349, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.18218658670683577, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.20275590752723857, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2584143601391504, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2588344483285442, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2840451097183185, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2863255643499056, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2867456525392994, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3046144305387213, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.34095417874410006, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3414561315224926, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.35302805156949724, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3545543543143785, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.35497445247159115, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3609771282447914, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.36152349956450286, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.05905752832437065, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.1354913882141207, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.262268694802069, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.217538),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.28908559066224193, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.32623940974289073, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.33870255469181904, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3453405215107107, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3743671227169421, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,!=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3778242785089641, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.category),oscar.sub_category))", "score": -0.37879955676678423, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.39259423951155553, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,<=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3946766794082627, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_keyword.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.399657657483287, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.category))", "score": -0.4001498238017177, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.40260714865980923, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)", "score": -0.11889426313513651, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_count)", "score": -0.2755764307137586, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count)", "score": -0.5156389452228685, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count))", "score": -0.5171793354675174, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,72000000), movie.id),movie.vote_count)", "score": -0.5352958541015549, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count)", "score": -0.5357498977176169, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_average)", "score": -0.5979642368145681, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count))", "score": -0.6109691439196467, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,>=,72000000),movie.vote_count)", "score": -0.6332170855594528, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_average)", "score": -0.6543711698428694, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,72000000), movie.id),movie.vote_count)", "score": -0.7262407343682732, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.budget)", "score": -0.8011443436149964, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.runtime)", "score": -0.8272407291735268, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.revenue)", "score": -0.8628186903354675, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,72000000), movie.id),movie.vote_count)", "score": -0.9085246326714475, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.00746652339148568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Post Production), movie.title),movie.title))", "score": -0.8241500714284484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.title),movie.title))", "score": -0.836147830770642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.vote_count))", "score": -0.8658697619175655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Post Production), movie.title),movie.title))", "score": -0.8695725928191678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.budget))", "score": -0.8816288127636653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.title),movie.title))", "score": -0.8976793745023315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9266295459965477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.budget),movie.title))", "score": -0.9277349247495295, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.title),movie.title))", "score": -0.9323857882482116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,=,Post Production), movie.title),movie.title))", "score": -0.9337366083127563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Post Production), movie.title),movie.title))", "score": -0.9386410572988098, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.runtime))", "score": -0.9399849786495906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9427943481641705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9450370153499534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.15609695362326742, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.18724475381016772, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.203260311248275, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.20718625555037254, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.21136589806485095, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2422603990458693, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.2848326190745166, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.3148378791055007, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.vote_average)", "score": -0.32758081459426935, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.35568975170657247, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.iso_639_1),movie.vote_average)", "score": -0.37397348084508963, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.39196794470820795, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.vote_average)", "score": -0.4025526960141937, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.popularity)", "score": -0.41244418089782586, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.popularity)", "score": -0.41413234013145256, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.0740651668957681, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.09167220152025386, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.28823134230599057, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3230322812944041, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33712183933251605, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35477055288668025, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.3617201773094323, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.39970739487266604, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.42234540532107107, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4240223398868505, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4263649398565569, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4301785236704293, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.43886795005881674, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,genre.id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4458010155403323, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),person.gender))", "score": -0.48035017196435564, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.05217369604627078, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.19834052123726384, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.id),movie.popularity)", "score": -0.19865413531450052, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.26931709767496637, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.id),movie.popularity)", "score": -0.30530197200170267, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)", "score": -0.333640258663921, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.34482096050549355, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,<,sound editing), movie.id),movie.popularity)", "score": -0.3456858003701561, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,>,sound editing), movie.id),movie.popularity)", "score": -0.3649444161884435, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,!=,sound editing), movie.id),movie.popularity)", "score": -0.4010984605934593, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),filter(getData(oscar),movie.popularity,>,sound editing),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.4022139741516907, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),filter(getData(movie),movie.popularity,>,sound editing),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.41755768706666807, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.4203004913906861, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.popularity),movie.popularity)", "score": -0.42261851605012807, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),country.name,!=,sound editing), movie.id),movie.popularity)", "score": -0.4377277442979899, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.1081429892374362, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.145614573110262, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.name,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.23427236239981183, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.23820635918519004, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.2712563567078813, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.2725421856533696, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.2909475279694723, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3041331944428567, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3240467926105766, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.32718000962034743, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3370606229135298, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar.category,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3595213095077536, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.36387231837137457, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.40101526146752975, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),country.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.40298962041533876, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)", "score": -0.025657994338060097, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.runtime),movie.runtime)", "score": -0.48345885151587303, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.id),movie.runtime)", "score": -0.5558042017023568, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.id),movie.runtime)", "score": -0.7160881734002897, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,!=,Released),movie.runtime)", "score": -0.7403013319259434, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime)", "score": -0.7571544130847556, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,>=,Released),movie.runtime)", "score": -0.8270867215825999, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,Released), movie.id),movie.runtime)", "score": -0.8649917894822818, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),country.name,!=,Released), movie.id),movie.runtime)", "score": -0.8804587981494741, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,Released), movie.id),movie.runtime)", "score": -0.9284191651642044, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,Released), movie.id),movie.runtime)", "score": -0.9473066498070771, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_average)", "score": -0.9510249427895432, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Released), movie.id),movie.runtime)", "score": -0.9556218281968366, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),oscar.year)", "score": -0.9794320080542716, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_count)", "score": -0.998418807208268, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.08264223211000321, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.17740698403370242, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.19741284896321265, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.2795904612635682, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<=,1999-12-16), genre.name),genre.name))", "score": -0.3179995253476677, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.3367218796478123, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3405764834005133, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,>,1999-12-16), genre.name),genre.name))", "score": -0.35805101796107647, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,1999-12-16), genre.name),genre.name))", "score": -0.3743552131872674, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.37699449503284527, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),genre.name), genre.name))", "score": -0.37992407365678144, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3847239493723051, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.4108828585166332, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.41243992970551674, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.41578683397288474, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.055095456962590106, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.4659560107975267, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.title))", "score": -0.5122039577108808, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.vote_count),movie.title))", "score": -0.6292583755712258, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.vote_count))", "score": -0.6507939651637571, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.id))", "score": -0.6642095221322961, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.budget))", "score": -0.6678876832156675, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.budget),movie.title))", "score": -0.6757920793752419, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.original_language),movie.title))", "score": -0.7284180931310402, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,42), movie.title),movie.title))", "score": -0.7377145434293197, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), oscar.number),movie.title))", "score": -0.7505389861325966, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), company.name),movie.title))", "score": -0.7670875004987465, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,42), movie.title),movie.title))", "score": -0.7735594654950546, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.budget))", "score": -0.78957303595962, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.original_language))", "score": -0.811925466361572, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.13694359446927437, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.1977598831194704, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),has_keyword.keyword_id,oscar.id), oscar.number),oscar.number))", "score": -0.2542659256742889, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.26165612120944437, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), movie.title),oscar.number))", "score": -0.2659089808340495, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), movie.title),oscar.number))", "score": -0.2664813547976348, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.sub_category),oscar.number))", "score": -0.2887393586946966, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.3023048698398429, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.31060372495008304, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.3235635578219174, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.32385768569686463, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.number))", "score": -0.33126566359414106, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.sub_category))", "score": -0.3350326657698406, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.3401093357847562, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.name,movie.id), oscar.number),oscar.number))", "score": -0.34539676092094557, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))", "score": -0.07208357514537056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),movie.original_language))", "score": -0.1832834831038781, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),language.name))", "score": -0.4678180072987743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Sky High), movie.original_language),movie.original_language))", "score": -0.5191939225951501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),movie.original_language))", "score": -0.5651112638114576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),language.name))", "score": -0.5790179152572819, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), language.name),movie.original_language))", "score": -0.5828133388022252, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.5918950501140404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),language.name))", "score": -0.6203622548322744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.title),movie.original_language))", "score": -0.625039355323679, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), language.name),movie.original_language))", "score": -0.6252744668629715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,Sky High), language.name),movie.original_language))", "score": -0.6426112417382844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6440266421595879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),language.name))", "score": -0.6471460411348572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6520582531655543, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.14416185454769892, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.20224310492508005, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.21323070570727445, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1981-01-18),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.21670182804025237, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.23094437932027118, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.2757682511547306, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.28712093899309366, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3149409779021909, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3386809428510806, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.34411255056474854, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.3471120374998043, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.35917709821953603, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.3606460852227442, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.3653567269123354, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),oscar_nominee.person_id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.38438526989412114, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.043005540570853075, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.23111117812323437, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.2675071023234468, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.2688344342273591, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.345735694798082, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,<=,1985-05-13), movie.id),movie.runtime)", "score": -0.35038470610887795, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.runtime),movie.runtime)", "score": -0.35062176857108285, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.id,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.38815345934133205, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.3940200517784522, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.40789846671686353, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(getData(person),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4159011701331025, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.movie_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4265830412643429, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,!=,1985-05-13), movie.id),movie.runtime)", "score": -0.4328364773933391, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4530286086396887, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.4569400717797404, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.02138004562346954, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,495303), company.name),company.name))", "score": -0.2792615732415669, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),person.birth_place))", "score": -0.35612681264444096, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,495303), company.name),company.name))", "score": -0.36511006465269413, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,495303), company.name),company.name))", "score": -0.37001472772188604, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.37065231108903807, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),production_company.company_id))", "score": -0.39131025398743663, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), person.birth_place),company.name))", "score": -0.3987783360563668, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),movie.title))", "score": -0.4110473505334543, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,!=,495303), company.name),company.name))", "score": -0.41239247377423316, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), movie.title),company.name))", "score": -0.415550285581878, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4251664549797287, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.42645876015859263, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4302927219754691, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.43144921524990965, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.22944497244388015, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.23492679437744562, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.23580508857606833, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.24158426162244276, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.2793228822087299, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.30277342544473673, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.title,!=,writing), movie.vote_count),movie.vote_count))", "score": -0.3298262012636727, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3399334204025335, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3454152514732663, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,!=,writing), movie.vote_count),movie.vote_count))", "score": -0.36034048025836957, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.36456411108150344, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3837260337815937, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3883630749933613, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.39300256012392365, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3976396169110039, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.15587309703520782, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.18341492075992963, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.33334826234943327, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(country),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.3372073076800039, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Italy), movie.id),movie.revenue)", "score": -0.34477590590048085, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.38632241278082535, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.40036395240450623, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.43087683806100885, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.43920639746184253, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.45653504186286054, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),genre.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4817727377784293, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4865582333853132, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(country),movie.original_language,!=,Italy), movie.id),movie.revenue)", "score": -0.526110116545277, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.popularity)", "score": -0.5359320930719496, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.budget)", "score": -0.5518932565085349, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,87), movie.revenue),movie.revenue))", "score": -0.5552838887389409, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,139), movie.revenue),movie.revenue))", "score": -0.5655021059818494, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6081457584614215, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6131445043235141, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6142907124244206, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6176382842779455, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6192894582865132, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6212239112479486, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6226370504392464, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6237832382409445, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6247904597619611, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6262226571100412, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6273687924137865, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6287819568041018, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6297891804250364, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.07428240627177832, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.1405791582668033, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.21526138663363945, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.2713481172463028, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.2815581386286644, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3001354949524595, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.301453054543614, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3371599674576223, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.33773949706864603, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.35344324569825847, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.3664322469474845, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),movie.title))", "score": -0.367749806538639, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.3695573929666532, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.40099745917638807, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.sub_category))", "score": -0.41232709760816394, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.14063077561321527, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.1459935862193895, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.gender))", "score": -0.22844672840705052, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.name),person.gender))", "score": -0.23380953901322474, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.name))", "score": -0.302311412881654, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.name))", "score": -0.3076742234878282, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,>=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.3305605488810125, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.3355627193458514, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.gender),person.gender))", "score": -0.33988382476471085, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.34092552995202563, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.name),person.gender))", "score": -0.34524663537088507, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.3706548355321873, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.3760176461383616, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,<=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.38522887769389363, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.name))", "score": -0.3901273656754892, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.20441391950674986, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.24348641839462543, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.2643741901548715, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.26700643503312166, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.28221285462634726, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.29361703097486574, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.32092453420040185, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3225154157638036, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3242306292010905, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.32721288447909, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.32804452048289384, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.330676765361144, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.3380036015770571, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.3475462508224181, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.35882588378229024, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.031480608606216265, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.runtime), movie.runtime))", "score": -0.6236071862294921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.release_date))", "score": -0.7734845303748443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.runtime))", "score": -0.8419275735905103, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.runtime),movie.runtime))", "score": -0.8472268565492413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.status))", "score": -0.8532465719436004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),person.birth_day))", "score": -0.8615326308463409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), person.birth_day),movie.runtime))", "score": -0.8628843878796033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.title))", "score": -0.9051535152648285, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.runtime))", "score": -0.9150631879856519, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime))", "score": -0.9397354578068189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.runtime),movie.runtime))", "score": -0.9401320799188397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.9442864607917727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.9554060341324657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.runtime))", "score": -0.9561909293224744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))", "score": -0.19668641206226312, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.gender))", "score": -0.2665125977655407, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))", "score": -0.34055539112887345, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.gender))", "score": -0.41038157683215104, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.name))", "score": -0.4533028871228453, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.name))", "score": -0.5131871419434901, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.gender))", "score": -0.5231290728261229, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.id))", "score": -0.5352910262008663, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.gender))", "score": -0.5830133276467677, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.name))", "score": -0.5971718661894556, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.name))", "score": -0.6570561210101005, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), language.name))", "score": -0.6635719936748501, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.gender))", "score": -0.6669980518927332, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.popularity))", "score": -0.670976917113876, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.id))", "score": -0.6791600052674767, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.1641952534710581, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.1741725035595017, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.17771800800670964, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.24453930611573713, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.2629346460236847, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2882572765330472, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),filter(getData(person),person.birth_day,>,31.8267),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3070078784253561, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.30858899315021376, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.32215652870276484, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.3442860031032138, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.3456704025136816, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.3478315075504217, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.35159005917465064, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.3551355403636145, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.person_id), person.death_place),person.death_place))", "score": -0.3636096029569618, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.1979493998333055, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.20726233005980654, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.23540769384175705, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects),movie.runtime),movie.popularity))", "score": -0.2393284829862773, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3322237693438778, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.33268967267248467, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.3602236958653213, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.36762573797517034, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id),movie.runtime),movie.popularity))", "score": -0.3732055865697743, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3819589924960932, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.38462358189619406, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.3897240655362962, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects),movie.runtime),movie.popularity))", "score": -0.39165205731756375, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,special effects),movie.runtime),movie.popularity))", "score": -0.4032200802242667, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.4374434683761784, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.1459817889990518, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.16135179647027734, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2665343095894897, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.30825066696218617, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3108204827556175, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.3163875215651297, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.34890188918142306, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), oscar.id),oscar.number)", "score": -0.39411986271124355, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,1947-09-04), movie.title),movie.title))", "score": -0.4406710808847666, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4594742513413038, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4659744942633448, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.47934254884452177, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.id),oscar.number)", "score": -0.49215712513817383, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(movie),crew.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.500329618079053, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), oscar.category),oscar.number)", "score": -0.5038568206302851, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.10668852855893997, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.16519166447185296, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.22145506692157332, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.23019590301555581, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.24127991682248223, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.2610812670365929, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.29104800288825705, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.29978305273539524, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.3560464551851156, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,>=,160), genre.name),genre.name))", "score": -0.3613352503058983, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>=,160), genre.name),genre.name))", "score": -0.3879474660796243, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.3956726553001352, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<=,160), genre.name),genre.name))", "score": -0.3966470961227267, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.4142544640548092, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,>=,160), genre.name),genre.name))", "score": -0.42053500343956485, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.022376106810042984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.43133943131215347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.48495106747395766, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.6381643630938925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),person.gender))", "score": -0.7206151701884664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.7217272472244076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.popularity))", "score": -0.7548849601207621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.7666503076816298, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.popularity),movie.popularity))", "score": -0.7745361213947035, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.popularity))", "score": -0.7749472279010661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.release_date))", "score": -0.7879631139712728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,Released), movie.popularity),movie.popularity))", "score": -0.8136879157882504, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.popularity),movie.popularity))", "score": -0.8168694262767531, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.popularity),movie.popularity))", "score": -0.8217208933692746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.8415186742931837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2212649515328235, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.24061340060529374, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2531765028420395, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.29845998796689754, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3042165909883289, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.31273504047539435, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3159367612981321, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.32200393601931065, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.32356504006079917, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3267964385991814, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3352852103706023, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33612813868074953, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>=,2017-08-13), company.name),company.name))", "score": -0.3450765874436688, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3461448540821786, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.34784827901787513, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.16759125139559988, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.21366941547177162, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.23137253756975829, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.25270331716583705, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>,63), movie.id),movie.vote_count)", "score": -0.25694912408612225, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2748283802361886, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>=,63), movie.id),movie.vote_count)", "score": -0.3121083439358503, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.32912080868248494, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3340863749361928, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_average)", "score": -0.3386879172701913, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3401106761554759, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.35279336175041326, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.355417173530524, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.35952000369246934, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_average)", "score": -0.36001869686627, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3326748982352245, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3331430451071845, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.36886763661748867, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.38051781068798346, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3821341085314046, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3822571424274852, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.38680893167500185, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3944484445145799, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.39919488950208437, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.40317215888474667, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.4061766648970003, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),language.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.4167105582074149, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.42579148978873005, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.4288897000118909, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.4312482232953884, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.popularity)", "score": -0.06066991809233713, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.3062783794666757, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity)", "score": -0.4815632040749454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>,13100000), movie.id),movie.popularity)", "score": -0.5320498342584236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,13100000), movie.id),movie.popularity)", "score": -0.6451717762906052, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,13100000), movie.id),movie.popularity)", "score": -0.7465704908388028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,13100000), movie.id),movie.popularity)", "score": -0.7532655570869381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.release_date))", "score": -0.7557989217530121, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.vote_average)", "score": -0.7754639395727834, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,13100000), movie.popularity),movie.popularity))", "score": -0.78435194335907, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.revenue)", "score": -0.7884127546692735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(filter(getData(movie),movie.budget,>=,13100000),movie.popularity)", "score": -0.8158542775832719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,13100000), movie.popularity),movie.popularity))", "score": -0.821606173478358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.id),movie.popularity)", "score": -0.8225588523998727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.status))", "score": -0.8843607165108551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.08615881910505375, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.2207036748136132, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.24996845483441907, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.25991663828665235, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.28118258978307, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.3335766257752498, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(country),country.name,=,South Africa),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.3665262775882367, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.38119287497904175, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.38329308721415584, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa), movie.id),movie.popularity)", "score": -0.3926319578926695, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,country.name),movie.vote_average),movie.popularity))", "score": -0.4004827061324088, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.42345434767456347, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.name,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4242182343635785, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.vote_average))", "score": -0.4287902302684172, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa), movie.id),movie.popularity)", "score": -0.4442515248645006, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.22485586552545184, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.23031431197983815, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.24239593603996548, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.2552053385348961, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.number))", "score": -0.25623618967973416, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.3074826534716569, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.3178743819156285, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.31956427753178424, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.genre_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.3222608335095185, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.32995600597575586, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.3323736800267148, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.3339696272153632, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.3341323123065607, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.33860407922215396, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.34276538311423616, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.07882246671215398, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))", "score": -0.3632677901769057, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.birth_day))", "score": -0.5067881738577853, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.gender))", "score": -0.5747904276286135, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.death_day))", "score": -0.5784218406115542, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.birth_day),person.name))", "score": -0.6464708661005716, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.id))", "score": -0.6595099024707451, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),movie.revenue))", "score": -0.679974327031232, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar.year))", "score": -0.6859742497836123, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.6861549631503294, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), oscar.year),person.name))", "score": -0.7150415991709451, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,>,Topanga, Kalifornien), person.name),person.name))", "score": -0.7205165033738012, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.gender))", "score": -0.7460524492198601, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar_winner.person_id))", "score": -0.7504044269953738, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.id))", "score": -0.7532325481806765, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.18300648087361843, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.24173963417521072, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.2438489885673371, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.2726905158958398, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.2763139504719669, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3025821418689294, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3110438543346734, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.31691506357545496, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3314236691974321, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.33171301725920876, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3335330235895585, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3573845843623539, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3697770074286028, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.39576469699178923, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.39796672715203657, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.06055793009854243, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Post Production), country.name),country.name))", "score": -0.12722474534753245, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Post Production),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.35036907543801327, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3654507554202166, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.3665279343098222, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), person.birth_place),country.name))", "score": -0.3942570228699878, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.4067270049120223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42727607361639763, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.4345201547059996, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1), country.name),country.name))", "score": -0.4346341237014523, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.43912967616095905, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.44054915230472086, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.4409841116492453, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.44138824689827516, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(language),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4420492849585984, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.03722809483470367, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,136),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2206074851834162, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2372611872824689, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34906173246752564, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3509939122015089, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.38579908160132687, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3978879901893082, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3988118696659118, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.4135773675775958, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.4168448928142375, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42302562055208504, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4236715543902902, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.42797787995647124, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.4341970546793085, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.43728238258462254, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.11671414280623327, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.11752544417778267, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.23842252496688732, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.2421684103328055, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.29953269537232574, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.3350180624723776, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.33603922567323763, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.34481018752829073, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), movie.title),oscar.number)", "score": -0.37505763754148197, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.38406959007829206, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4089938306370987, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.4098051320086481, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.42383886999531867, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.4246501807242163, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.sub_category),oscar.number)", "score": -0.4261563084425926, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.20694368452980763, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3162871413425002, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.31820800260787147, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_place))", "score": -0.32102362402188034, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3366438360476236, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3385646973129949, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3396656344458571, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.340702044749686, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3426229060150573, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.34435964012740167, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.34628050139277294, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3496695706855679, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2014),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(filter(getData(person),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.40403989117253303, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_day),person.death_place))", "score": -0.4098500188666501, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2014),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(filter(getData(person),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.41679008677082224, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3040002384886212, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3180390740967916, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.319555016786558, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.34565126888353964, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3560089525776778, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3619114218579863, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.36707372568547725, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3722691055521245, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.3800967475158967, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3811125612936477, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3849220877976849, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.38688404295712986, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,has_genre.genre_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.38923994868371764, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.39413558312406716, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.40987196440114343, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.06126026945734794, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1611452551467421, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,>=,200000), country.name),country.name))", "score": -0.23295628417790587, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2523952500218992, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.29071269766752034, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,200000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3079852538140221, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34516952376154053, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,>=,200000), country.name),country.name))", "score": -0.34881172922666676, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35090156009992496, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35333356614427114, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35444744553932156, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar_nominee.movie_id,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3721092864940962, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,200000), country.name),country.name))", "score": -0.3722475774056767, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.3963935962475773, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_place,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39660740319390475, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.17768245880381492, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.19153424053778786, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2275732973034945, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.24142507903746746, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2427641829356569, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.25603553583285094, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3059263743325305, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.30625421420852406, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),person.birth_day,>,2016-03-17), oscar.number),oscar.number))", "score": -0.314293317206421, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3159214922825291, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.year),oscar.number))", "score": -0.3424284451459081, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.category),oscar.number))", "score": -0.34884350301540745, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.year),oscar.number))", "score": -0.35628023684769994, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>=,2016-03-17), oscar.number),oscar.number))", "score": -0.3592722958716709, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.category),oscar.number))", "score": -0.3626952947171993, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.1203664398185553, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2122744029643333, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2194062976367604, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.23534321498705071, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.24918777005232925, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2530507033131746, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.26018259798560167, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2779369668805153, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.28506886155294237, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.31871326722935656, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32584516190178364, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.332848121716369, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3639198278128706, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.36416448115682204, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3862909936872023, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,documentary (feature)), movie.title),movie.title))", "score": -0.11892381166326843, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.13043353252040657, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2008213564993269, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2291097651275451, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,documentary (feature)), movie.title),movie.title))", "score": -0.26481780612046985, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,documentary (feature)), movie.title),movie.title))", "score": -0.27277565198659465, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,documentary (feature)), movie.title),movie.title))", "score": -0.2793220546980571, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3088217438303449, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3100055707331447, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,documentary (feature)), movie.title),movie.title))", "score": -0.31189545976744215, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,documentary (feature)), movie.title),movie.title))", "score": -0.312157024749137, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,<=,documentary (feature)), movie.title),movie.title))", "score": -0.3234051806245803, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3371101524585631, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.39910800718920003, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,<=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.40704097186408805, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.18956289116492436, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.20838746153397725, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.22566701785233745, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.26809873761325537, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),language.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2924708626603286, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),keyword.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3155703024843218, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),genre.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.31626645207582293, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.3266353415397066, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),movie.original_language,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.345906668973265, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3485500431793378, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.36273946822711967, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.38515360117688274, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.38779721367487524, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3908761032724319, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.39351989898433454, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.07838574257766595, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.20970658046280732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.36207154971634736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.4228435036382128, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.4787084327417372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.48427779060875764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.49339238760148874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.615598628493899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(country),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.6669029651311575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6741662977365195, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6826445220140158, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(genre),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.6982359944013297, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.revenue))", "score": -0.7139518857349428, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.revenue))", "score": -0.7241627421990203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),cast.movie_id))", "score": -0.74702380803501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.10076633188198265, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.15620832832010956, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.19025220367899864, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.23091761884354545, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.2630140682704652, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.2697611325280208, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.32183748245043925, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.33408672776725024, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.3516200327332267, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), movie.title),company.name))", "score": -0.3568442351367651, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.3622835079174094, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.41201127434451407, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4124784825688388, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.41570166264054714, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.42494423659436126, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.0550424212634429, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.1733450500686192, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,=,35841901),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.24928504383587366, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.319796513806963, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.32851628235396446, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3375201378438609, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.34977361609079083, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.353628771108665, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3840240443893583, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3843905676529143, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.40040995884052244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,=,35841901),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4102334820083688, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.41871165291787527, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,35841901), company.name),company.name))", "score": -0.42146152084708904, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), person.birth_place),company.name))", "score": -0.42347824563619274, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.04338956204792188, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.16988453034646672, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.2717941183134936, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.3360421753551242, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,=,2100), country.name),country.name))", "score": -0.3435688823201976, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), person.birth_place),country.name))", "score": -0.3602923672027358, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.3641500473051347, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), movie.status),country.name))", "score": -0.3721750705522698, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,<=,2100), country.name),country.name))", "score": -0.38624537844104634, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), oscar.sub_category),country.name))", "score": -0.3934498515716418, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,2100), country.name),country.name))", "score": -0.3963272983989578, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),movie.status))", "score": -0.4030076904701113, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<=,2100), country.name),country.name))", "score": -0.40544713666060644, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.4204360784612963, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),person.birth_place))", "score": -0.4255167798572781, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.12799984214828897, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.20912667966665524, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.25514172448093586, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2887527490394267, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3025594873290079, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.31918332835625585, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.36431959854900126, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3684077663694367, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.37092749622577187, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.death_place),person.birth_place))", "score": -0.37102176429215344, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.37501563953241857, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),person.name,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.37711088832818007, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.38023110906553037, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.384319280154471, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.movie_id,person.id), person.birth_place),person.birth_place))", "score": -0.39458060123517513, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.06385768153268145, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.2932579825483453, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.30077468819158304, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.37491265592652057, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.37877268936108927, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3824293615697583, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.38277264660707805, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.386289395004327, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3902893522503158, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3992568052656301, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.4199459226560455, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.4274626282992833, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.44179493975378575, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.44931163985934636, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.4604272453405088, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))", "score": -0.1499359222361818, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.death_place))", "score": -0.19009045383427292, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.death_place))", "score": -0.2997312160441652, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,m),person.death_place), person.death_place))", "score": -0.4871211329154903, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,m),person.death_place), person.death_place))", "score": -0.535538820331567, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,m),person.death_place), person.death_place))", "score": -0.5647195258788997, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,m), person.death_place),person.death_place))", "score": -0.5896751621039584, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,m), person.death_place),person.death_place))", "score": -0.6298296937020496, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.revenue,=,m), person.death_place),person.death_place))", "score": -0.6304616691777483, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,m), person.death_place),person.death_place))", "score": -0.644911682815291, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.name))", "score": -0.6670618524076417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.6836259701522067, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_day))", "score": -0.688169585657306, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,m), person.death_place),person.death_place))", "score": -0.6922862293431535, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_day),person.death_place))", "score": -0.7057700251461938, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.07679859363270225, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1927-07-04), person.name),person.name))", "score": -0.4130939673705143, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),movie.revenue))", "score": -0.41653891467285575, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_place))", "score": -0.4360639955921215, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1927-07-04), person.name),person.name))", "score": -0.4621475171370548, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.name))", "score": -0.5817050024270429, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_day))", "score": -0.6122942473812145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),cast.person_id))", "score": -0.6149255540294689, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),language.name))", "score": -0.628016522161488, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.6641553734225454, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.6705523408090812, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1927-07-04), person.name),person.name))", "score": -0.6764699679406476, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.gender))", "score": -0.6909641530437511, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.death_place))", "score": -0.7003988384603872, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), movie.id))", "score": -0.7159897361489129, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.12262157065001825, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.2183434367967093, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.22615003946974066, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.2349258642158317, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.2395930803893467, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_day,<,89), movie.id),movie.popularity)", "score": -0.28141808811470215, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.person_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.30026671937721394, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.3085458939317625, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_place,<,89), movie.id),movie.popularity)", "score": -0.31504498129594066, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.popularity),movie.popularity)", "score": -0.3384543330355541, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.34116353302497726, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.34353359280346185, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.popularity),movie.popularity)", "score": -0.3518973739551602, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.36704829198276384, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar_nominee.movie_id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.38259772302435063, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.vote_count))", "score": -0.2552970484866819, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.original_language))", "score": -0.2749498919620237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.3427851633205137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.3877655626311025, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.original_language))", "score": -0.4074184061064443, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.4752536774649343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.vote_count))", "score": -0.4775998354925832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.budget))", "score": -0.48463038960835547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.original_language))", "score": -0.497252678967925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.vote_count))", "score": -0.5103320837988576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5173751964072052, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5237935388114704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.original_language))", "score": -0.5299849272741994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.vote_count))", "score": -0.5312674542183231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5404384144544865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.32840510646565235, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.37365957538349903, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.42944424204324605, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.44597361054547946, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5011681002033583, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.514508346121147, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.id))", "score": -0.5164539103934658, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5597628150389937, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5737063084052352, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_average))", "score": -0.5792536025473964, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.5947022661821393, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.vote_count))", "score": -0.5964701098928344, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.6113581750796584, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.612145468367089, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.639956735099986, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.03545943044851577, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.3324207783181485, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.4311682852338458, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.4917799059862303, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5111686445216033, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5395980513814375, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5717802652739877, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.6002096721338219, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_count)", "score": -0.6060101599492788, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.runtime)", "score": -0.6108554241313643, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.619598410669195, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6207112795246077, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>=,pl), movie.id),movie.vote_average)", "score": -0.6611162959398358, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6688704961372551, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.675430367002188, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.10708593321672544, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.13685054792471252, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.2290938647480656, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.24924228354981728, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.265220401119758, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.28292899264959576, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), movie.title),company.name))", "score": -0.2864633951616324, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.31038944478522185, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), genre.name),company.name))", "score": -0.3320588036826071, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.3342746030958269, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),movie.title))", "score": -0.34228605665498896, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,>,2012-08-06), company.name),company.name))", "score": -0.38696866936019675, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),movie.title))", "score": -0.3931879025731267, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,2012-08-06), company.name),company.name))", "score": -0.3989091771990027, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>,2012-08-06), company.name),company.name))", "score": -0.3989811092009612, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.11314274957028317, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.13256759112198716, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.2007404107667162, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2135329396950407, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.304382346646836, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3136906440915614, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.32155481904098127, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3408975513465138, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,362), keyword.name),keyword.name))", "score": -0.35204400034181443, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3590161603358322, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.36906799243242766, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.death_place))", "score": -0.3743787247973767, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.name))", "score": -0.3821898089283237, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3935178887678838, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),person.name))", "score": -0.40468800769678165, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.14691703756667582, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.1676057329309206, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.17131563908517772, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.1881157290425979, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2156200900197997, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2648353498849676, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.28172890445005017, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.30612750596855204, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),country.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3154648782242558, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.3292824217583757, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),oscar.category,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.33660735848454, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),country.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.3485045609320074, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.35043196604785526, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.38041781319442897, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),country.name,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.38631410854854725, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.23118594946677098, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.23860746762606658, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.2584611518108122, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.29468452424159824, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.30210604240089384, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3165830691633967, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3219597265856394, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3240045873226923, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3396736120232476, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3438582715074379, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3454511495850143, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3800816280590876, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.38750310538631827, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.popularity),movie.popularity)", "score": -0.3876565976552225, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.popularity),movie.popularity)", "score": -0.39507811581451807, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.23210670072148787, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.46820276760627166, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.title))", "score": -0.5242552982599591, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.title),movie.vote_count))", "score": -0.5358647687316989, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.6), movie.vote_count),movie.vote_count))", "score": -0.540592985409603, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.6), movie.vote_count),movie.vote_count))", "score": -0.5894160440147971, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), oscar.number),movie.vote_count))", "score": -0.5955398363948916, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.budget),movie.vote_count))", "score": -0.617697624671564, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count)", "score": -0.6759697228797449, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.budget))", "score": -0.7094097958834027, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),oscar.number))", "score": -0.7128728555471753, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), person.death_day),movie.vote_count))", "score": -0.7161416692615603, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.id),movie.vote_count)", "score": -0.7177759308487919, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count),movie.vote_count))", "score": -0.7400676985427372, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(spoken_language),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count),movie.vote_count))", "score": -0.7526701515133853, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.020916972534905653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.3880961111950281, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.4854915765250874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5393316892343122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,tr), movie.id),movie.popularity)", "score": -0.5549480141361295, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5560013202064648, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5606665765390362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5788332808753189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.5806810705020661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.6292966974728249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.6367271545643715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6419290915563444, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.6474634157917425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.660095809875262, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.release_date))", "score": -0.6873231403224054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.030290782720562907, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.23640600830226546, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,>,0.041651), country.name),country.name))", "score": -0.28541359657045823, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), movie.status),country.name))", "score": -0.33492278749740506, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.35802470820596105, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), person.birth_place),country.name))", "score": -0.3737961470476704, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.gender,<,0.041651), country.name),country.name))", "score": -0.3971468533018961, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.39843237493872247, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,0.041651), country.name),country.name))", "score": -0.40085300354845854, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.sub_category),country.name))", "score": -0.4037798778823639, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),movie.status))", "score": -0.4045689019065686, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.category),country.name))", "score": -0.4090258745114442, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), genre.name),country.name))", "score": -0.4151756909353819, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.movie_id,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.4157244142428622, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.name),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.4183484684539949, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.07276408519464894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.title)", "score": -0.3487736051030741, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.37571639531849943, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.4454756760521213, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.4962017601828448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,oscar_nominee.movie_id), movie.title),movie.title))", "score": -0.5008554555952291, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5011939938635817, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5156478052775912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5295358423223758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5309754909434454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5420211810353859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.budget)", "score": -0.5877439431342968, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,spoken_language.movie_id), movie.title),movie.title))", "score": -0.602357841702519, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,10.4764), movie.title),movie.title))", "score": -0.6097052775403426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,oscar_nominee.movie_id), movie.runtime),movie.title))", "score": -0.6206802266624242, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.024857551008608425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.4266230172106589, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.5771870321223105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6103882239294762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.6620057529398764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.vote_count),movie.revenue))", "score": -0.7117367432547326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), person.death_day),movie.revenue))", "score": -0.7174075291586632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), cast.movie_id),movie.revenue))", "score": -0.7661397502852196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7758056990896876, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7814956776892359, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.name))", "score": -0.8063234560286219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,69), movie.revenue),movie.revenue))", "score": -0.8083680507588724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.8118678973150963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.8235776953224558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.8254966013228113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name)", "score": -0.25032362391319035, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.27457627983870997, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2788541780788031, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name)", "score": -0.29300095379703744, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.31234607114879775, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,5.2), language.name),language.name)", "score": -0.3515464319995255, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name)", "score": -0.35442673485889825, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.iso_639_1),language.name)", "score": -0.3669636339966262, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),person.name)", "score": -0.4498981684556743, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.iso_639_1),language.name)", "score": -0.4710667449423341, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),person.name)", "score": -0.47354358101140726, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name)", "score": -0.48275691396058534, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.492249218024831, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),spoken_language.iso_639_1)", "score": -0.4952276033379448, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.iso_639_1),language.name)", "score": -0.5080174208226402, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.0898452785165248, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.20699421832281276, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2672502485737772, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2731008149261713, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.27401047958152297, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.27478463738468983, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.27487959043735405, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.2861862680428743, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.3000215902616815, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.31608536864717757, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),person.death_place,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3280920543482175, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.34126043477268475, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.3591074465603121, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3657625887223678, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(cast),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.37604540350058796, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.1855907504227259, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.20953813251815576, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.21633862789584996, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.21789879512864985, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.21921463775744282, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.id),oscar.number)", "score": -0.24908824087938491, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),oscar.number)", "score": -0.2807048729116449, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.3429031129461177, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.37310175741912277, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.runtime),oscar.number)", "score": -0.38255948105193366, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.405409861671808, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), oscar.id),oscar.number)", "score": -0.41012958209005584, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.year)", "score": -0.41601317879161137, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.44222378643769455, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.4441598880749427, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))", "score": -0.012642981506360229, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.release_date),movie.budget))", "score": -0.5524937985683209, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.release_date))", "score": -0.6561445514889783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.budget))", "score": -0.6742816446567304, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.revenue))", "score": -0.6866183798047132, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.revenue),movie.budget))", "score": -0.6925035594249493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.budget),movie.budget))", "score": -0.7191086929742596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.title),movie.budget))", "score": -0.7399200676227338, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.title))", "score": -0.7764010350438184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Rumored), movie.budget),movie.budget))", "score": -0.7903224152032635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.vote_count))", "score": -0.8112497250767774, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.budget),movie.budget))", "score": -0.8143803399507306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,!=,Rumored), movie.budget),movie.budget))", "score": -0.8155280869905255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.budget),movie.budget))", "score": -0.8185867632491863, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.vote_count),movie.budget))", "score": -0.8455170272136456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.14419059804218978, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.1773466385353316, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.188948262850867, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.21339574488796592, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Labenne), movie.id),movie.vote_average)", "score": -0.29473267376721024, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(getData(person),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3373374020894277, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.3423992442283391, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.34439366375453606, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.36364700720333054, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.gender,!=,Labenne), movie.id),movie.vote_average)", "score": -0.37240879932977977, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.37435561937252737, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.3755552847214809, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.37754970424767786, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3829541156355982, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.38721440738975804, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)", "score": -0.030184112390390087, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<=,177), movie.id),movie.vote_count)", "score": -0.4354865801119978, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,177), movie.id),movie.vote_count)", "score": -0.49426370921953044, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.vote_count),movie.vote_count)", "score": -0.5952430978475992, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_average)", "score": -0.7157923697455089, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<=,177),movie.vote_count)", "score": -0.7320702964888647, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.budget)", "score": -0.7824681947329817, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.runtime)", "score": -0.7898421626845141, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<,177),movie.vote_count)", "score": -0.7970093938546047, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.budget),movie.vote_count)", "score": -0.8164014525079648, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,177), movie.id),movie.vote_count)", "score": -0.9205024107299642, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.revenue)", "score": -0.9218695276176079, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,177), movie.id),movie.vote_count)", "score": -0.9365628368433412, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),person.death_day)", "score": -0.9439720376530929, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,177), movie.id),movie.vote_count)", "score": -0.9603913967798416, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.1515391486946907, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.18350995757966557, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.24009379938390638, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.2458985814053305, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.275644609671634, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.27804231368667137, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.29088051443432444, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.29491799773661226, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.3076154185566089, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3288290287370894, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.title))", "score": -0.3629385212094094, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.36718109922693315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects), oscar.number),movie.title))", "score": -0.37186256548099816, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,visual effects), oscar.number),movie.title))", "score": -0.3850716698683885, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.395090910523378, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.02846661305636616, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3340252622720181, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3731277948049667, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3736542267954762, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3776934591860741, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),company.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3983812490568322, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.41023995837805, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4112975663551399, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4256259978361399, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),person.death_place,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4256503255441155, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(language),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4288887022479296, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4290926454836988, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.430744973441584, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution), movie.title),movie.title))", "score": -0.43189458798218194, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(has_keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.43526822996544157, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.24620909451619466, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.2644776144244706, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.28355384248258364, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.3018223623908596, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3235625968600941, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.33507146823373046, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3385185179590335, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.3418311167683701, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.3533399881420064, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.3567870378673094, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.36090734482648307, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.37241621620011944, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.37586326592542246, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.379175864734759, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.38272824984529746, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.10061357563345096, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.15133835287236452, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.16559142953640707, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.18602711070143152, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,virginity), company.name),company.name))", "score": -0.3029915426518162, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.30630860517949704, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.30788185369546833, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.3512648257553843, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,7.1), company.name),company.name))", "score": -0.3537163198907298, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.3570333824184106, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<=,7.1), company.name),company.name))", "score": -0.3655623217311151, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,<=,virginity), company.name),company.name))", "score": -0.36708249828435885, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>=,7.1), company.name),company.name))", "score": -0.3757509111509855, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,7.1), company.name),company.name))", "score": -0.3818837558155275, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,virginity), company.name),company.name))", "score": -0.3868861169635736, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)", "score": -0.03721924826998846, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,127), movie.id),movie.popularity)", "score": -0.42370685418765824, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,=,127),movie.popularity)", "score": -0.46735023491610284, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,127), movie.id),movie.popularity)", "score": -0.5623750068687705, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity)", "score": -0.7054659367383723, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,127),movie.popularity)", "score": -0.7243281905111048, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,127),movie.popularity)", "score": -0.747427920094761, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,127), movie.id),movie.popularity)", "score": -0.8720465642766134, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.revenue)", "score": -0.8792198630792551, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.runtime)", "score": -0.8797974860852745, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,127), movie.id),movie.popularity)", "score": -0.9112888305471557, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,127),movie.popularity)", "score": -0.9300210738694763, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,127), movie.id),movie.popularity)", "score": -0.9303396924758748, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,127), movie.id),movie.popularity)", "score": -0.9327430865386277, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,127), movie.id),movie.popularity)", "score": -0.945217817209821, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.21502772434585313, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2192691774777394, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2849614715861461, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2926932544539987, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.29693470758588497, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.32670713339537066, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.33229333894165036, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3415969444079808, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.35616093965702506, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.35892599865379654, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3631674517856828, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.37883274581599946, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.38307417984289954, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), oscar.year),movie.runtime))", "score": -0.3854909913892414, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), oscar.year),movie.runtime))", "score": -0.3937956652410607, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.30002532001863963, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.30831960856818463, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3501775014391599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3542630180123489, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.35844301178803734, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.35847178998870494, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3625573065618939, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.3656141353654693, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.36673730033758234, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3724229110057242, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.3739084239150143, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3807171995552693, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.gender),person.birth_place))", "score": -0.3818409293704527, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3862901729880832, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.gender),person.birth_place))", "score": -0.3901352179199977, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.057205596655712614, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), company.name),company.name))", "score": -0.10877942827743742, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Original Sin), company.name),company.name))", "score": -0.2628592968558069, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Original Sin), company.name),company.name))", "score": -0.3590801676984283, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,=,Original Sin),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36452653349019637, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Original Sin), company.name),company.name))", "score": -0.36633475514602293, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Original Sin), company.name),company.name))", "score": -0.37549582750557614, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), movie.title),company.name))", "score": -0.3811836769181521, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3977863243723396, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3990059601107299, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,Original Sin), company.name),company.name))", "score": -0.40855776257768445, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),movie.title))", "score": -0.4178231489925612, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.4304004923352186, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Original Sin),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.43176030005516575, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), movie.title),company.name))", "score": -0.43275749050781565, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.11236418439469487, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.27085728923734725, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2734521793723869, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2867079421021456, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3115895052458494, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.31515150356114796, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.31522342646167234, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.31921585915519857, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,>,ar), language.name),language.name))", "score": -0.33576470286689447, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.33899771785323984, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(spoken_language),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.33991129350524985, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), person.name),language.name))", "score": -0.34417875365285366, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.3476781867721879, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3559556424701745, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),person.name))", "score": -0.3682228445087905, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.05649442057237297, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,5.2),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.2968557512637942, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3403573851022184, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.vote_average,>=,5.2),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name)", "score": -0.34800443122360347, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.35742454535909507, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),person.birth_place))", "score": -0.37673531952207157, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,5.2), company.name),company.name))", "score": -0.38718656336752094, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.39662967170148616, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,5.2), company.name),company.name))", "score": -0.3967558382615365, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), movie.title),company.name))", "score": -0.4044533868587104, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), person.birth_place),company.name))", "score": -0.41920781439998284, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.42202845393524163, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),production_company.company_id))", "score": -0.4248761102745051, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.42757037746984666, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),movie.title))", "score": -0.42951815454203857, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_day))", "score": -0.215647437464213, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_place))", "score": -0.3386892460694071, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.33890492260979954, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.gender))", "score": -0.4632951401581522, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_day))", "score": -0.4722866833617445, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_day))", "score": -0.47339872721931897, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_place), person.birth_day))", "score": -0.5053046763350721, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.birth_day), person.birth_day))", "score": -0.5390997285430785, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_place),person.birth_day))", "score": -0.5450397262029583, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.name))", "score": -0.5668878935684916, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.name),person.birth_day))", "score": -0.5830115208082134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.id))", "score": -0.5870051168312784, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), crew.person_id))", "score": -0.5907140456547495, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_place))", "score": -0.5953284919669386, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_place))", "score": -0.5964405358245131, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.029019017129030544, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.3304805265579489, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.title))", "score": -0.4851058999847737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.title),movie.release_date))", "score": -0.5397257845688728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.budget),movie.release_date))", "score": -0.5810183327484992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,424), movie.release_date),movie.release_date))", "score": -0.596839259735134, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.610932539573696, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.6389656075803258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.budget))", "score": -0.6623140255760518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.7640671174813178, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,424), movie.release_date),movie.release_date))", "score": -0.76660305250698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.title))", "score": -0.7865674094136921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.runtime),movie.release_date))", "score": -0.792523268966761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.title),movie.release_date))", "score": -0.8411872939977911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.runtime))", "score": -0.8504226486038533, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.014988441042078193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,160583018), movie.vote_average),movie.vote_average))", "score": -0.5405653636189527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_count))", "score": -0.5615271372007555, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,160583018), movie.vote_average),movie.vote_average))", "score": -0.571766726228816, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_count),movie.vote_average))", "score": -0.5813183803329594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.runtime),movie.vote_average))", "score": -0.6891903896103031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.runtime))", "score": -0.7566327494787402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.7939300700309104, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8211155696990318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8413967205378867, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.original_language))", "score": -0.8438766640829272, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8460995241694036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.popularity),movie.vote_average))", "score": -0.8588580508003361, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.popularity))", "score": -0.86040449563734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), person.name),movie.vote_average))", "score": -0.8873709459076053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)", "score": -0.031750005950269826, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,3.7), movie.id),movie.popularity)", "score": -0.41342786261710385, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,3.7), movie.id),movie.popularity)", "score": -0.5298820220831875, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,3.7), movie.id),movie.popularity)", "score": -0.6221647860068933, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,3.7),movie.popularity)", "score": -0.6222823693381314, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,3.7), movie.id),movie.popularity)", "score": -0.7040159958592752, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,3.7), movie.id),movie.popularity)", "score": -0.753833649742119, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.runtime)", "score": -0.7908593067152138, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,3.7), movie.id),movie.popularity)", "score": -0.8273033798075391, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.popularity,=,3.7),movie.popularity)", "score": -0.8443895504240875, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,3.7), movie.id),movie.popularity)", "score": -0.8589123020470398, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.release_date)", "score": -0.8670118901316721, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.revenue)", "score": -0.8715765695436941, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.popularity),movie.popularity)", "score": -0.9111672371541675, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,3.7), movie.id),movie.popularity)", "score": -0.9254529616949064, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.15261273148108112, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.15312761474584236, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.1851823075831096, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.20453765456317594, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.289441988195614, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.29229582259960607, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3070730957518929, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.30758797901665413, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.31152554774042956, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3287682572925835, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3363254555897789, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.3394960768013154, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.33955685983139006, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3432810423172458, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.3443688855407836, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
